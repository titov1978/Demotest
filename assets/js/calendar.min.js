angular.module("ui.calendar",[]).constant("uiCalendarConfig",{calendars:{}}).controller("uiCalendarCtrl",["$scope","$locale",function($scope,$locale){var sources=$scope.eventSources,extraEventSignature=$scope.calendarWatchEvent?$scope.calendarWatchEvent:angular.noop,wrapFunctionWithScopeApply=function(functionToWrap){return function(){if($scope.$root.$$phase)return functionToWrap.apply(this,arguments);var args=arguments,that=this;return $scope.$root.$apply(function(){return functionToWrap.apply(that,args)})}},eventSerialId=1;this.eventFingerprint=function(e){e._id||(e._id=eventSerialId++);var extraSignature=extraEventSignature({event:e})||"",start=moment.isMoment(e.start)?e.start.unix():e.start?moment(e.start).unix():"",end=moment.isMoment(e.end)?e.end.unix():e.end?moment(e.end).unix():"";return[e._id,e.id||"",e.title||"",e.url||"",start,end,e.allDay||"",e.className||"",extraSignature].join("")};var sourceSerialId=1,sourceEventsSerialId=1;this.sourceFingerprint=function(source){var fp=""+(source.__id||(source.__id=sourceSerialId++)),events=angular.isObject(source)&&source.events;return events&&(fp=fp+"-"+(events.__id||(events.__id=sourceEventsSerialId++))),fp},this.allEvents=function(){return Array.prototype.concat.apply([],(sources||[]).reduce(function(previous,source){if(angular.isArray(source))previous.push(source);else if(angular.isObject(source)&&angular.isArray(source.events)){var extEvent=Object.keys(source).filter(function(key){return"_id"!==key&&"events"!==key});source.events.forEach(function(event){angular.extend(event,extEvent)}),previous.push(source.events)}return previous},[]))},this.changeWatcher=function(arraySource,tokenFn){var self,getTokens=function(){return((angular.isFunction(arraySource)?arraySource():arraySource)||[]).reduce(function(rslt,el){var token=tokenFn(el);return map[token]=el,rslt.push(token),rslt},[])},subtractAsSets=function(a,b){var obj=(b||[]).reduce(function(rslt,val){return rslt[val]=!0,rslt},Object.create(null));return(a||[]).filter(function(val){return!obj[val]})},map={},applyChanges=function(newTokens,oldTokens){var i,token,replacedTokens={},removedTokens=subtractAsSets(oldTokens,newTokens);for(i=0;i<removedTokens.length;i++){var removedToken=removedTokens[i],el=map[removedToken];delete map[removedToken];var newToken=tokenFn(el);newToken===removedToken?self.onRemoved(el):(replacedTokens[newToken]=removedToken,self.onChanged(el))}var addedTokens=subtractAsSets(newTokens,oldTokens);for(i=0;i<addedTokens.length;i++)token=addedTokens[i],replacedTokens[token]||self.onAdded(map[token])};return self={subscribe:function(scope,onArrayChanged){scope.$watch(getTokens,function(newTokens,oldTokens){var notify=!(onArrayChanged&&onArrayChanged(newTokens,oldTokens)===!1);notify&&applyChanges(newTokens,oldTokens)},!0)},onAdded:angular.noop,onChanged:angular.noop,onRemoved:angular.noop}},this.getFullCalendarConfig=function(calendarSettings,uiCalendarConfig){var config={};return angular.extend(config,uiCalendarConfig),angular.extend(config,calendarSettings),angular.forEach(config,function(value,key){"function"==typeof value&&(config[key]=wrapFunctionWithScopeApply(config[key]))}),config},this.getLocaleConfig=function(fullCalendarConfig){if(!fullCalendarConfig.lang||fullCalendarConfig.useNgLocale){var tValues=function(data){return(Object.keys(data)||[]).reduce(function(rslt,el){return rslt.push(data[el]),rslt},[])},dtf=$locale.DATETIME_FORMATS;return{monthNames:tValues(dtf.MONTH),monthNamesShort:tValues(dtf.SHORTMONTH),dayNames:tValues(dtf.DAY),dayNamesShort:tValues(dtf.SHORTDAY)}}return{}}}]).directive("uiCalendar",["uiCalendarConfig",function(uiCalendarConfig){return{restrict:"A",scope:{eventSources:"=ngModel",calendarWatchEvent:"&"},controller:"uiCalendarCtrl",link:function(scope,elm,attrs,controller){function getOptions(){var calendarSettings=attrs.uiCalendar?scope.$parent.$eval(attrs.uiCalendar):{},fullCalendarConfig=controller.getFullCalendarConfig(calendarSettings,uiCalendarConfig),localeFullCalendarConfig=controller.getLocaleConfig(fullCalendarConfig);angular.extend(localeFullCalendarConfig,fullCalendarConfig),options={eventSources:sources},angular.extend(options,localeFullCalendarConfig),options.calendars=null;var options2={};for(var o in options)"eventSources"!==o&&(options2[o]=options[o]);return JSON.stringify(options2)}var calendar,sources=scope.eventSources,sourcesChanged=!1,eventSourcesWatcher=controller.changeWatcher(sources,controller.sourceFingerprint),eventsWatcher=controller.changeWatcher(controller.allEvents,controller.eventFingerprint),options=null;scope.destroyCalendar=function(){calendar&&calendar.fullCalendar&&calendar.fullCalendar("destroy"),calendar=attrs.calendar?uiCalendarConfig.calendars[attrs.calendar]=angular.element(elm).html(""):angular.element(elm).html("")},scope.initCalendar=function(){calendar||(calendar=angular.element(elm).html("")),calendar.fullCalendar(options),attrs.calendar&&(uiCalendarConfig.calendars[attrs.calendar]=calendar)},scope.$on("$destroy",function(){scope.destroyCalendar()}),eventSourcesWatcher.onAdded=function(source){calendar&&calendar.fullCalendar&&(calendar.fullCalendar(options),attrs.calendar&&(uiCalendarConfig.calendars[attrs.calendar]=calendar),calendar.fullCalendar("addEventSource",source),sourcesChanged=!0)},eventSourcesWatcher.onRemoved=function(source){calendar&&calendar.fullCalendar&&(calendar.fullCalendar("removeEventSource",source),sourcesChanged=!0)},eventSourcesWatcher.onChanged=function(){calendar&&calendar.fullCalendar&&(calendar.fullCalendar("refetchEvents"),sourcesChanged=!0)},eventsWatcher.onAdded=function(event){calendar&&calendar.fullCalendar&&calendar.fullCalendar("renderEvent",event,!!event.stick)},eventsWatcher.onRemoved=function(event){calendar&&calendar.fullCalendar&&calendar.fullCalendar("removeEvents",event._id)},eventsWatcher.onChanged=function(event){if(calendar&&calendar.fullCalendar)for(var clientEvents=calendar.fullCalendar("clientEvents",event._id),i=0;i<clientEvents.length;i++){var clientEvent=clientEvents[i];clientEvent=angular.extend(clientEvent,event),calendar.fullCalendar("updateEvent",clientEvent)}},eventSourcesWatcher.subscribe(scope),eventsWatcher.subscribe(scope,function(){if(sourcesChanged===!0)return sourcesChanged=!1,!1}),scope.$watch(getOptions,function(newValue,oldValue){newValue!==oldValue?(scope.destroyCalendar(),scope.initCalendar()):newValue&&angular.isUndefined(calendar)&&scope.initCalendar()})}}}]);