!function(){"use strict";angular.module("ui.grid.i18n",[]),angular.module("ui.grid",["ui.grid.i18n"])}(),function(){"use strict";angular.module("ui.grid").constant("uiGridConstants",{LOG_DEBUG_MESSAGES:!0,LOG_WARN_MESSAGES:!0,LOG_ERROR_MESSAGES:!0,CUSTOM_FILTERS:/CUSTOM_FILTERS/g,COL_FIELD:/COL_FIELD/g,MODEL_COL_FIELD:/MODEL_COL_FIELD/g,TOOLTIP:/title=\"TOOLTIP\"/g,DISPLAY_CELL_TEMPLATE:/DISPLAY_CELL_TEMPLATE/g,TEMPLATE_REGEXP:/<.+>/,FUNC_REGEXP:/(\([^)]*\))?$/,DOT_REGEXP:/\./g,APOS_REGEXP:/'/g,BRACKET_REGEXP:/^(.*)((?:\s*\[\s*\d+\s*\]\s*)|(?:\s*\[\s*"(?:[^"\\]|\\.)*"\s*\]\s*)|(?:\s*\[\s*'(?:[^'\\]|\\.)*'\s*\]\s*))(.*)$/,COL_CLASS_PREFIX:"ui-grid-col",events:{GRID_SCROLL:"uiGridScroll",COLUMN_MENU_SHOWN:"uiGridColMenuShown",ITEM_DRAGGING:"uiGridItemDragStart",COLUMN_HEADER_CLICK:"uiGridColumnHeaderClick"},keymap:{TAB:9,STRG:17,CAPSLOCK:20,CTRL:17,CTRLRIGHT:18,CTRLR:18,SHIFT:16,RETURN:13,ENTER:13,BACKSPACE:8,BCKSP:8,ALT:18,ALTR:17,ALTRIGHT:17,SPACE:32,WIN:91,MAC:91,FN:null,PG_UP:33,PG_DOWN:34,UP:38,DOWN:40,LEFT:37,RIGHT:39,ESC:27,DEL:46,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123},ASC:"asc",DESC:"desc",filter:{STARTS_WITH:2,ENDS_WITH:4,EXACT:8,CONTAINS:16,GREATER_THAN:32,GREATER_THAN_OR_EQUAL:64,LESS_THAN:128,LESS_THAN_OR_EQUAL:256,NOT_EQUAL:512,SELECT:"select",INPUT:"input"},aggregationTypes:{sum:2,count:4,avg:8,min:16,max:32},CURRENCY_SYMBOLS:["ƒ","$","£","$","¤","¥","៛","₩","₱","฿","₫"],scrollDirection:{UP:"up",DOWN:"down",LEFT:"left",RIGHT:"right",NONE:"none"},dataChange:{ALL:"all",EDIT:"edit",ROW:"row",COLUMN:"column",OPTIONS:"options"},scrollbars:{NEVER:0,ALWAYS:1}})}(),angular.module("ui.grid").directive("uiGridCell",["$compile","$parse","gridUtil","uiGridConstants",function($compile,$parse,gridUtil,uiGridConstants){var uiGridCell={priority:0,scope:!1,require:"?^uiGrid",compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){function compileTemplate(){var compiledElementFn=$scope.col.compiledElementFn;compiledElementFn($scope,function(clonedElement,scope){$elm.append(clonedElement)})}if(uiGridCtrl&&$scope.col.compiledElementFn)compileTemplate();else if(uiGridCtrl&&!$scope.col.compiledElementFn)$scope.col.getCompiledElementFn().then(function(compiledElementFn){compiledElementFn($scope,function(clonedElement,scope){$elm.append(clonedElement)})});else{var html=$scope.col.cellTemplate.replace(uiGridConstants.MODEL_COL_FIELD,"row.entity."+gridUtil.preEval($scope.col.field)).replace(uiGridConstants.COL_FIELD,"grid.getCellValue(row, col)"),cellElement=$compile(html)($scope);$elm.append(cellElement)}},post:function($scope,$elm,$attrs,uiGridCtrl){var initColClass=$scope.col.getColClass(!1);$elm.addClass(initColClass);var classAdded,updateClass=function(grid){var contents=$elm;classAdded&&(contents.removeClass(classAdded),classAdded=null),classAdded=angular.isFunction($scope.col.cellClass)?$scope.col.cellClass($scope.grid,$scope.row,$scope.col,$scope.rowRenderIndex,$scope.colRenderIndex):$scope.col.cellClass,contents.addClass(classAdded)};$scope.col.cellClass&&updateClass();var dataChangeDereg=$scope.grid.registerDataChangeCallback(updateClass,[uiGridConstants.dataChange.COLUMN,uiGridConstants.dataChange.EDIT]),cellChangeFunction=function(n,o){if(n!==o){(classAdded||$scope.col.cellClass)&&updateClass();var newColClass=$scope.col.getColClass(!1);newColClass!==initColClass&&($elm.removeClass(initColClass),$elm.addClass(newColClass),initColClass=newColClass)}},rowWatchDereg=$scope.$watch("row",cellChangeFunction),deregisterFunction=function(){dataChangeDereg(),rowWatchDereg()};$scope.$on("$destroy",deregisterFunction),$elm.on("$destroy",deregisterFunction)}}}};return uiGridCell}]),function(){angular.module("ui.grid").service("uiGridColumnMenuService",["i18nService","uiGridConstants","gridUtil",function(i18nService,uiGridConstants,gridUtil){var service={initialize:function($scope,uiGridCtrl){$scope.grid=uiGridCtrl.grid,uiGridCtrl.columnMenuScope=$scope,$scope.menuShown=!1},setColMenuItemWatch:function($scope){var deregFunction=$scope.$watch("col.menuItems",function(n,o){"undefined"!=typeof n&&n&&angular.isArray(n)?(n.forEach(function(item){"undefined"!=typeof item.context&&item.context||(item.context={}),item.context.col=$scope.col}),$scope.menuItems=$scope.defaultMenuItems.concat(n)):$scope.menuItems=$scope.defaultMenuItems});$scope.$on("$destroy",deregFunction)},sortable:function($scope){return!!($scope.grid.options.enableSorting&&"undefined"!=typeof $scope.col&&$scope.col&&$scope.col.enableSorting)},isActiveSort:function($scope,direction){return"undefined"!=typeof $scope.col&&"undefined"!=typeof $scope.col.sort&&"undefined"!=typeof $scope.col.sort.direction&&$scope.col.sort.direction===direction},suppressRemoveSort:function($scope){return!(!$scope.col||!$scope.col.suppressRemoveSort)},hideable:function($scope){return"undefined"==typeof $scope.col||!$scope.col||!$scope.col.colDef||$scope.col.colDef.enableHiding!==!1},getDefaultMenuItems:function($scope){return[{title:i18nService.getSafeText("sort.ascending"),icon:"ui-grid-icon-sort-alt-up",action:function($event){$event.stopPropagation(),$scope.sortColumn($event,uiGridConstants.ASC)},shown:function(){return service.sortable($scope)},active:function(){return service.isActiveSort($scope,uiGridConstants.ASC)}},{title:i18nService.getSafeText("sort.descending"),icon:"ui-grid-icon-sort-alt-down",action:function($event){$event.stopPropagation(),$scope.sortColumn($event,uiGridConstants.DESC)},shown:function(){return service.sortable($scope)},active:function(){return service.isActiveSort($scope,uiGridConstants.DESC)}},{title:i18nService.getSafeText("sort.remove"),icon:"ui-grid-icon-cancel",action:function($event){$event.stopPropagation(),$scope.unsortColumn()},shown:function(){return service.sortable($scope)&&"undefined"!=typeof $scope.col&&"undefined"!=typeof $scope.col.sort&&"undefined"!=typeof $scope.col.sort.direction&&null!==$scope.col.sort.direction&&!service.suppressRemoveSort($scope)}},{title:i18nService.getSafeText("column.hide"),icon:"ui-grid-icon-cancel",shown:function(){return service.hideable($scope)},action:function($event){$event.stopPropagation(),$scope.hideColumn()}},{title:i18nService.getSafeText("columnMenu.close"),screenReaderOnly:!0,shown:function(){return!0},action:function($event){$event.stopPropagation()}}]},getColumnElementPosition:function($scope,column,$columnElement){var positionData={};return positionData.left=$columnElement[0].offsetLeft,positionData.top=$columnElement[0].offsetTop,positionData.parentLeft=$columnElement[0].offsetParent.offsetLeft,positionData.offset=0,column.grid.options.offsetLeft&&(positionData.offset=column.grid.options.offsetLeft),positionData.height=gridUtil.elementHeight($columnElement,!0),positionData.width=gridUtil.elementWidth($columnElement,!0),positionData},repositionMenu:function($scope,column,positionData,$elm,$columnElement){var menu=$elm[0].querySelectorAll(".ui-grid-menu"),containerId=column.renderContainer?column.renderContainer:"body",renderContainerElm=(column.grid.renderContainers[containerId],gridUtil.closestElm($columnElement,".ui-grid-render-container")),renderContainerOffset=renderContainerElm.getBoundingClientRect().left-$scope.grid.element[0].getBoundingClientRect().left,containerScrollLeft=renderContainerElm.querySelectorAll(".ui-grid-viewport")[0].scrollLeft,myWidth=column.lastMenuWidth?column.lastMenuWidth:$scope.lastMenuWidth?$scope.lastMenuWidth:170,paddingRight=column.lastMenuPaddingRight?column.lastMenuPaddingRight:$scope.lastMenuPaddingRight?$scope.lastMenuPaddingRight:10;if(0!==menu.length){var mid=menu[0].querySelectorAll(".ui-grid-menu-mid");0===mid.length||angular.element(mid).hasClass("ng-hide")||(myWidth=gridUtil.elementWidth(menu,!0),$scope.lastMenuWidth=myWidth,column.lastMenuWidth=myWidth,paddingRight=parseInt(gridUtil.getStyles(angular.element(menu)[0]).paddingRight,10),$scope.lastMenuPaddingRight=paddingRight,column.lastMenuPaddingRight=paddingRight)}var left=positionData.left+renderContainerOffset-containerScrollLeft+positionData.parentLeft+positionData.width-myWidth+paddingRight;left<positionData.offset&&(left=positionData.offset),$elm.css("left",left+"px"),$elm.css("top",positionData.top+positionData.height+"px")}};return service}]).directive("uiGridColumnMenu",["$timeout","gridUtil","uiGridConstants","uiGridColumnMenuService","$document",function($timeout,gridUtil,uiGridConstants,uiGridColumnMenuService,$document){var uiGridColumnMenu={priority:0,scope:!0,require:"^uiGrid",templateUrl:"ui-grid/uiGridColumnMenu",replace:!0,link:function($scope,$elm,$attrs,uiGridCtrl){var self=this;uiGridColumnMenuService.initialize($scope,uiGridCtrl),$scope.defaultMenuItems=uiGridColumnMenuService.getDefaultMenuItems($scope),$scope.menuItems=$scope.defaultMenuItems,uiGridColumnMenuService.setColMenuItemWatch($scope),$scope.showMenu=function(column,$columnElement,event){$scope.col=column;var colElementPosition=uiGridColumnMenuService.getColumnElementPosition($scope,column,$columnElement);$scope.menuShown?($scope.colElement=$columnElement,$scope.colElementPosition=colElementPosition,$scope.hideThenShow=!0,$scope.$broadcast("hide-menu",{originalEvent:event})):(self.shown=$scope.menuShown=!0,uiGridColumnMenuService.repositionMenu($scope,column,colElementPosition,$elm,$columnElement),$scope.colElement=$columnElement,$scope.colElementPosition=colElementPosition,$scope.$broadcast("show-menu",{originalEvent:event}))},$scope.hideMenu=function(broadcastTrigger){$scope.menuShown=!1,broadcastTrigger||$scope.$broadcast("hide-menu")},$scope.$on("menu-hidden",function(){$scope.hideThenShow?(delete $scope.hideThenShow,uiGridColumnMenuService.repositionMenu($scope,$scope.col,$scope.colElementPosition,$elm,$scope.colElement),$scope.$broadcast("show-menu"),$scope.menuShown=!0):($scope.hideMenu(!0),$scope.col&&gridUtil.focus.bySelector($document,".ui-grid-header-cell."+$scope.col.getColClass()+" .ui-grid-column-menu-button",$scope.col.grid,!1))}),$scope.$on("menu-shown",function(){$timeout(function(){uiGridColumnMenuService.repositionMenu($scope,$scope.col,$scope.colElementPosition,$elm,$scope.colElement),delete $scope.colElementPosition,delete $scope.columnElement},200)}),$scope.sortColumn=function(event,dir){event.stopPropagation(),$scope.grid.sortColumn($scope.col,dir,!0).then(function(){$scope.grid.refresh(),$scope.hideMenu()})},$scope.unsortColumn=function(){$scope.col.unsort(),$scope.grid.refresh(),$scope.hideMenu()};var setFocusOnHideColumn=function(){$timeout(function(){var thisIndex,focusToGridMenu=function(){return gridUtil.focus.byId("grid-menu",$scope.grid)};$scope.grid.columns.some(function(element,index){if(angular.equals(element,$scope.col))return thisIndex=index,!0});var previousVisibleCol;if($scope.grid.columns.some(function(element,index){if(!element.visible)return!1;if(index<thisIndex)previousVisibleCol=element;else{if(index>thisIndex&&!previousVisibleCol)return previousVisibleCol=element,!0;if(index>thisIndex&&previousVisibleCol)return!0}}),previousVisibleCol){var colClass=previousVisibleCol.getColClass();gridUtil.focus.bySelector($document,".ui-grid-header-cell."+colClass+" .ui-grid-header-cell-primary-focus",!0).then(angular.noop,function(reason){if("canceled"!==reason)return focusToGridMenu()})}else focusToGridMenu()})};$scope.hideColumn=function(){$scope.col.colDef.visible=!1,$scope.col.visible=!1,$scope.grid.queueGridRefresh(),$scope.hideMenu(),$scope.grid.api.core.notifyDataChange(uiGridConstants.dataChange.COLUMN),$scope.grid.api.core.raise.columnVisibilityChanged($scope.col),setFocusOnHideColumn()}},controller:["$scope",function($scope){var self=this;$scope.$watch("menuItems",function(n,o){self.menuItems=n})}]};return uiGridColumnMenu}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridFilter",["$compile","$templateCache","i18nService","gridUtil",function($compile,$templateCache,i18nService,gridUtil){return{compile:function(){return{pre:function($scope,$elm,$attrs,controllers){$scope.col.updateFilters=function(filterable){if($elm.children().remove(),filterable){var template=$scope.col.filterHeaderTemplate;$elm.append($compile(template)($scope))}},$scope.$on("$destroy",function(){delete $scope.col.updateFilters})},post:function($scope,$elm,$attrs,controllers){$scope.aria=i18nService.getSafeText("headerCell.aria"),$scope.removeFilter=function(colFilter,index){colFilter.term=null,gridUtil.focus.bySelector($elm,".ui-grid-filter-input-"+index)}}}}}}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridFooterCell",["$timeout","gridUtil","uiGridConstants","$compile",function($timeout,gridUtil,uiGridConstants,$compile){var uiGridFooterCell={priority:0,scope:{col:"=",row:"=",renderIndex:"="},replace:!0,require:"^uiGrid",compile:function(tElement,tAttrs,transclude){return{pre:function($scope,$elm,$attrs,uiGridCtrl){var cellFooter=$compile($scope.col.footerCellTemplate)($scope);$elm.append(cellFooter)},post:function($scope,$elm,$attrs,uiGridCtrl){$scope.grid=uiGridCtrl.grid;var initColClass=$scope.col.getColClass(!1);$elm.addClass(initColClass);var classAdded,updateClass=function(grid){var contents=$elm;classAdded&&(contents.removeClass(classAdded),classAdded=null),classAdded=angular.isFunction($scope.col.footerCellClass)?$scope.col.footerCellClass($scope.grid,$scope.row,$scope.col,$scope.rowRenderIndex,$scope.colRenderIndex):$scope.col.footerCellClass,contents.addClass(classAdded)};$scope.col.footerCellClass&&updateClass(),$scope.col.updateAggregationValue();var dataChangeDereg=$scope.grid.registerDataChangeCallback(updateClass,[uiGridConstants.dataChange.COLUMN]);$scope.grid.api.core.on.rowsRendered($scope,$scope.col.updateAggregationValue),$scope.grid.api.core.on.rowsRendered($scope,updateClass),$scope.$on("$destroy",dataChangeDereg)}}}};return uiGridFooterCell}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridFooter",["$templateCache","$compile","uiGridConstants","gridUtil","$timeout",function($templateCache,$compile,uiGridConstants,gridUtil,$timeout){return{restrict:"EA",replace:!0,require:["^uiGrid","^uiGridRenderContainer"],scope:!0,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],containerCtrl=controllers[1];$scope.grid=uiGridCtrl.grid,$scope.colContainer=containerCtrl.colContainer,containerCtrl.footer=$elm;var footerTemplate=$scope.grid.options.footerTemplate;gridUtil.getTemplate(footerTemplate).then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);if($elm.append(newElm),containerCtrl){var footerViewport=$elm[0].getElementsByClassName("ui-grid-footer-viewport")[0];footerViewport&&(containerCtrl.footerViewport=footerViewport)}})},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],containerCtrl=controllers[1];uiGridCtrl.grid;gridUtil.disableAnimations($elm),containerCtrl.footer=$elm;var footerViewport=$elm[0].getElementsByClassName("ui-grid-footer-viewport")[0];footerViewport&&(containerCtrl.footerViewport=footerViewport)}}}}}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridGridFooter",["$templateCache","$compile","uiGridConstants","gridUtil","$timeout",function($templateCache,$compile,uiGridConstants,gridUtil,$timeout){return{restrict:"EA",replace:!0,require:"^uiGrid",scope:!0,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,uiGridCtrl){$scope.grid=uiGridCtrl.grid;var footerTemplate=$scope.grid.options.gridFooterTemplate;gridUtil.getTemplate(footerTemplate).then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);$elm.append(newElm)})},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridGroupPanel",["$compile","uiGridConstants","gridUtil",function($compile,uiGridConstants,gridUtil){var defaultTemplate="ui-grid/ui-grid-group-panel";return{restrict:"EA",replace:!0,require:"?^uiGrid",scope:!1,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,uiGridCtrl){var groupPanelTemplate=$scope.grid.options.groupPanelTemplate||defaultTemplate;gridUtil.getTemplate(groupPanelTemplate).then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);$elm.append(newElm)})},post:function($scope,$elm,$attrs,uiGridCtrl){$elm.bind("$destroy",function(){})}}}}}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridHeaderCell",["$compile","$timeout","$window","$document","gridUtil","uiGridConstants","ScrollEvent","i18nService",function($compile,$timeout,$window,$document,gridUtil,uiGridConstants,ScrollEvent,i18nService){var mousedownTimeout=500,changeModeTimeout=500,uiGridHeaderCell={priority:0,scope:{col:"=",row:"=",renderIndex:"="},require:["^uiGrid","^uiGridRenderContainer"],replace:!0,compile:function(){return{pre:function($scope,$elm,$attrs){var cellHeader=$compile($scope.col.headerCellTemplate)($scope);$elm.append(cellHeader)},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],renderContainerCtrl=controllers[1];$scope.i18n={headerCell:i18nService.getSafeText("headerCell"),sort:i18nService.getSafeText("sort")},$scope.getSortDirectionAriaLabel=function(){var col=$scope.col,sortDirectionText=col.sort.direction===uiGridConstants.ASC?$scope.i18n.sort.ascending:col.sort.direction===uiGridConstants.DESC?$scope.i18n.sort.descending:$scope.i18n.sort.none,label=sortDirectionText;return col.sort.priority&&(label=label+". "+$scope.i18n.headerCell.priority+" "+col.sort.priority),label},$scope.grid=uiGridCtrl.grid,$scope.renderContainer=uiGridCtrl.grid.renderContainers[renderContainerCtrl.containerId];var initColClass=$scope.col.getColClass(!1);$elm.addClass(initColClass),$scope.menuShown=!1,$scope.asc=uiGridConstants.ASC,$scope.desc=uiGridConstants.DESC;var classAdded,previousMouseX,$contentsElm=(angular.element($elm[0].querySelectorAll(".ui-grid-header-cell-menu")),angular.element($elm[0].querySelectorAll(".ui-grid-cell-contents"))),filterDeregisters=[];$scope.downFn=function(event){event.stopPropagation(),"undefined"!=typeof event.originalEvent&&void 0!==event.originalEvent&&(event=event.originalEvent),event.button&&0!==event.button||(previousMouseX=event.pageX,$scope.mousedownStartTime=(new Date).getTime(),$scope.mousedownTimeout=$timeout(function(){},mousedownTimeout),$scope.mousedownTimeout.then(function(){$scope.colMenu&&uiGridCtrl.columnMenuScope.showMenu($scope.col,$elm,event)}),uiGridCtrl.fireEvent(uiGridConstants.events.COLUMN_HEADER_CLICK,{event:event,columnName:$scope.col.colDef.name}),$scope.offAllEvents(),"touchstart"===event.type?($document.on("touchend",$scope.upFn),$document.on("touchmove",$scope.moveFn)):"mousedown"===event.type&&($document.on("mouseup",$scope.upFn),$document.on("mousemove",$scope.moveFn)))},$scope.upFn=function(event){event.stopPropagation(),$timeout.cancel($scope.mousedownTimeout),$scope.offAllEvents(),$scope.onDownEvents(event.type);var mousedownEndTime=(new Date).getTime(),mousedownTime=mousedownEndTime-$scope.mousedownStartTime;mousedownTime>mousedownTimeout||$scope.sortable&&$scope.handleClick(event)},$scope.moveFn=function(event){var changeValue=event.pageX-previousMouseX;0!==changeValue&&($timeout.cancel($scope.mousedownTimeout),$scope.offAllEvents(),$scope.onDownEvents(event.type))},$scope.clickFn=function(event){event.stopPropagation(),$contentsElm.off("click",$scope.clickFn)},$scope.offAllEvents=function(){$contentsElm.off("touchstart",$scope.downFn),$contentsElm.off("mousedown",$scope.downFn),$document.off("touchend",$scope.upFn),$document.off("mouseup",$scope.upFn),$document.off("touchmove",$scope.moveFn),$document.off("mousemove",$scope.moveFn),$contentsElm.off("click",$scope.clickFn)},$scope.onDownEvents=function(type){switch(type){case"touchmove":case"touchend":$contentsElm.on("click",$scope.clickFn),$contentsElm.on("touchstart",$scope.downFn),$timeout(function(){$contentsElm.on("mousedown",$scope.downFn)},changeModeTimeout);break;case"mousemove":case"mouseup":$contentsElm.on("click",$scope.clickFn),$contentsElm.on("mousedown",$scope.downFn),$timeout(function(){$contentsElm.on("touchstart",$scope.downFn)},changeModeTimeout);break;default:$contentsElm.on("click",$scope.clickFn),$contentsElm.on("touchstart",$scope.downFn),$contentsElm.on("mousedown",$scope.downFn)}};var updateHeaderOptions=function(grid){var contents=$elm;classAdded&&(contents.removeClass(classAdded),classAdded=null),classAdded=angular.isFunction($scope.col.headerCellClass)?$scope.col.headerCellClass($scope.grid,$scope.row,$scope.col,$scope.rowRenderIndex,$scope.colRenderIndex):$scope.col.headerCellClass,contents.addClass(classAdded);var rightMostContainer=$scope.grid.renderContainers.right?$scope.grid.renderContainers.right:$scope.grid.renderContainers.body;$scope.isLastCol=$scope.col===rightMostContainer.visibleColumnCache[rightMostContainer.visibleColumnCache.length-1],uiGridCtrl.grid.options.enableSorting&&$scope.col.enableSorting?$scope.sortable=!0:$scope.sortable=!1;var oldFilterable=$scope.filterable;uiGridCtrl.grid.options.enableFiltering&&$scope.col.enableFiltering?$scope.filterable=!0:$scope.filterable=!1,oldFilterable!==$scope.filterable&&("undefined"!=typeof $scope.col.updateFilters&&$scope.col.updateFilters($scope.filterable),$scope.filterable?($scope.col.filters.forEach(function(filter,i){filterDeregisters.push($scope.$watch("col.filters["+i+"].term",function(n,o){n!==o&&(uiGridCtrl.grid.api.core.raise.filterChanged(),uiGridCtrl.grid.api.core.notifyDataChange(uiGridConstants.dataChange.COLUMN),uiGridCtrl.grid.queueGridRefresh())}))}),$scope.$on("$destroy",function(){filterDeregisters.forEach(function(filterDeregister){filterDeregister()})})):filterDeregisters.forEach(function(filterDeregister){filterDeregister()})),$scope.col.grid.options&&$scope.col.grid.options.enableColumnMenus!==!1&&$scope.col.colDef&&$scope.col.colDef.enableColumnMenu!==!1?$scope.colMenu=!0:$scope.colMenu=!1,$scope.offAllEvents(),($scope.sortable||$scope.colMenu)&&($scope.onDownEvents(),$scope.$on("$destroy",function(){$scope.offAllEvents()}))};updateHeaderOptions();var dataChangeDereg=$scope.grid.registerDataChangeCallback(updateHeaderOptions,[uiGridConstants.dataChange.COLUMN]);$scope.$on("$destroy",dataChangeDereg),$scope.handleClick=function(event){var add=!1;event.shiftKey&&(add=!0),uiGridCtrl.grid.sortColumn($scope.col,add).then(function(){uiGridCtrl.columnMenuScope&&uiGridCtrl.columnMenuScope.hideMenu(),uiGridCtrl.grid.refresh()})},$scope.toggleMenu=function(event){event.stopPropagation(),uiGridCtrl.columnMenuScope.menuShown&&uiGridCtrl.columnMenuScope.col===$scope.col?uiGridCtrl.columnMenuScope.hideMenu():uiGridCtrl.columnMenuScope.showMenu($scope.col,$elm)}}}}};return uiGridHeaderCell}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridHeader",["$templateCache","$compile","uiGridConstants","gridUtil","$timeout","ScrollEvent",function($templateCache,$compile,uiGridConstants,gridUtil,$timeout,ScrollEvent){var defaultTemplate="ui-grid/ui-grid-header",emptyTemplate="ui-grid/ui-grid-no-header";return{restrict:"EA",replace:!0,require:["^uiGrid","^uiGridRenderContainer"],scope:!0,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,controllers){function updateHeaderReferences(){containerCtrl.header=containerCtrl.colContainer.header=$elm;var headerCanvases=$elm[0].getElementsByClassName("ui-grid-header-canvas");headerCanvases.length>0?containerCtrl.headerCanvas=containerCtrl.colContainer.headerCanvas=headerCanvases[0]:containerCtrl.headerCanvas=null}function scrollHandler(evt){if(!uiGridCtrl.grid.isScrollingHorizontally){var newScrollLeft=gridUtil.normalizeScrollLeft(containerCtrl.headerViewport,uiGridCtrl.grid),horizScrollPercentage=containerCtrl.colContainer.scrollHorizontal(newScrollLeft),scrollEvent=new ScrollEvent(uiGridCtrl.grid,null,containerCtrl.colContainer,ScrollEvent.Sources.ViewPortScroll);scrollEvent.newScrollLeft=newScrollLeft,horizScrollPercentage>-1&&(scrollEvent.x={percentage:horizScrollPercentage}),uiGridCtrl.grid.scrollContainers(null,scrollEvent)}}var uiGridCtrl=controllers[0],containerCtrl=controllers[1];$scope.grid=uiGridCtrl.grid,$scope.colContainer=containerCtrl.colContainer,updateHeaderReferences();var headerTemplate;headerTemplate=$scope.grid.options.showHeader?$scope.grid.options.headerTemplate?$scope.grid.options.headerTemplate:defaultTemplate:emptyTemplate,gridUtil.getTemplate(headerTemplate).then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);if($elm.replaceWith(newElm),$elm=newElm,updateHeaderReferences(),containerCtrl){var headerViewport=$elm[0].getElementsByClassName("ui-grid-header-viewport")[0];headerViewport&&(containerCtrl.headerViewport=headerViewport,angular.element(headerViewport).on("scroll",scrollHandler),$scope.$on("$destroy",function(){angular.element(headerViewport).off("scroll",scrollHandler)}))}$scope.grid.queueRefresh()})},post:function($scope,$elm,$attrs,controllers){function updateColumnWidths(){var columnCache=containerCtrl.colContainer.visibleColumnCache,ret="",canvasWidth=0;return columnCache.forEach(function(column){ret+=column.getColClassDefinition(),canvasWidth+=column.drawnWidth}),containerCtrl.colContainer.canvasWidth=canvasWidth,ret}var uiGridCtrl=controllers[0],containerCtrl=controllers[1];uiGridCtrl.grid;gridUtil.disableAnimations($elm),containerCtrl.header=$elm;var headerViewport=$elm[0].getElementsByClassName("ui-grid-header-viewport")[0];headerViewport&&(containerCtrl.headerViewport=headerViewport),uiGridCtrl&&uiGridCtrl.grid.registerStyleComputation({priority:15,func:updateColumnWidths})}}}}}])}(),function(){angular.module("ui.grid").service("uiGridGridMenuService",["gridUtil","i18nService","uiGridConstants",function(gridUtil,i18nService,uiGridConstants){var service={initialize:function($scope,grid){grid.gridMenuScope=$scope,$scope.grid=grid,$scope.registeredMenuItems=[],$scope.$on("$destroy",function(){$scope.grid&&$scope.grid.gridMenuScope&&($scope.grid.gridMenuScope=null),$scope.grid&&($scope.grid=null),$scope.registeredMenuItems&&($scope.registeredMenuItems=null)}),$scope.registeredMenuItems=[],grid.api.registerMethod("core","addToGridMenu",service.addToGridMenu),grid.api.registerMethod("core","removeFromGridMenu",service.removeFromGridMenu)},addToGridMenu:function(grid,menuItems){angular.isArray(menuItems)?grid.gridMenuScope?(grid.gridMenuScope.registeredMenuItems=grid.gridMenuScope.registeredMenuItems?grid.gridMenuScope.registeredMenuItems:[],grid.gridMenuScope.registeredMenuItems=grid.gridMenuScope.registeredMenuItems.concat(menuItems)):gridUtil.logError("Asked to addToGridMenu, but gridMenuScope not present.  Timing issue?  Please log issue with ui-grid"):gridUtil.logError("addToGridMenu: menuItems must be an array, and is not, not adding any items")},removeFromGridMenu:function(grid,id){var foundIndex=-1;grid&&grid.gridMenuScope&&grid.gridMenuScope.registeredMenuItems.forEach(function(value,index){value.id===id&&(foundIndex>-1?gridUtil.logError("removeFromGridMenu: found multiple items with the same id, removing only the last"):foundIndex=index)}),foundIndex>-1&&grid.gridMenuScope.registeredMenuItems.splice(foundIndex,1)},getMenuItems:function($scope){var menuItems=[];$scope.grid.options.gridMenuCustomItems&&(angular.isArray($scope.grid.options.gridMenuCustomItems)?menuItems=menuItems.concat($scope.grid.options.gridMenuCustomItems):gridUtil.logError("gridOptions.gridMenuCustomItems must be an array, and is not"));var clearFilters=[{title:i18nService.getSafeText("gridMenu.clearAllFilters"),action:function($event){$scope.grid.clearAllFilters(void 0,!0,void 0)},shown:function(){return $scope.grid.options.enableFiltering},order:100}];return menuItems=menuItems.concat(clearFilters),menuItems=menuItems.concat($scope.registeredMenuItems),$scope.grid.options.gridMenuShowHideColumns!==!1&&(menuItems=menuItems.concat(service.showHideColumns($scope))),menuItems.sort(function(a,b){return a.order-b.order}),menuItems},showHideColumns:function($scope){var showHideColumns=[];return $scope.grid.options.columnDefs&&0!==$scope.grid.options.columnDefs.length&&0!==$scope.grid.columns.length?(showHideColumns.push({title:i18nService.getSafeText("gridMenu.columns"),order:300}),$scope.grid.options.gridMenuTitleFilter=$scope.grid.options.gridMenuTitleFilter?$scope.grid.options.gridMenuTitleFilter:function(title){return title},$scope.grid.options.columnDefs.forEach(function(colDef,index){if(colDef.enableHiding!==!1){var menuItem={icon:"ui-grid-icon-ok",action:function($event){$event.stopPropagation(),service.toggleColumnVisibility(this.context.gridCol)},shown:function(){return this.context.gridCol.colDef.visible===!0||void 0===this.context.gridCol.colDef.visible},context:{gridCol:$scope.grid.getColumn(colDef.name||colDef.field)},leaveOpen:!0,order:301+2*index};service.setMenuItemTitle(menuItem,colDef,$scope.grid),showHideColumns.push(menuItem),menuItem={icon:"ui-grid-icon-cancel",action:function($event){$event.stopPropagation(),service.toggleColumnVisibility(this.context.gridCol)},shown:function(){return!(this.context.gridCol.colDef.visible===!0||void 0===this.context.gridCol.colDef.visible)},context:{gridCol:$scope.grid.getColumn(colDef.name||colDef.field)},leaveOpen:!0,order:301+2*index+1},service.setMenuItemTitle(menuItem,colDef,$scope.grid),showHideColumns.push(menuItem)}}),showHideColumns):showHideColumns},setMenuItemTitle:function(menuItem,colDef,grid){var title=grid.options.gridMenuTitleFilter(colDef.displayName||gridUtil.readableColumnName(colDef.name)||colDef.field);"string"==typeof title?menuItem.title=title:title.then?(menuItem.title="",title.then(function(successValue){menuItem.title=successValue},function(errorValue){menuItem.title=errorValue})):(gridUtil.logError("Expected gridMenuTitleFilter to return a string or a promise, it has returned neither, bad config"),menuItem.title="badconfig")},toggleColumnVisibility:function(gridCol){gridCol.colDef.visible=!(gridCol.colDef.visible===!0||void 0===gridCol.colDef.visible),gridCol.grid.refresh(),gridCol.grid.api.core.notifyDataChange(uiGridConstants.dataChange.COLUMN),gridCol.grid.api.core.raise.columnVisibilityChanged(gridCol)}};return service}]).directive("uiGridMenuButton",["gridUtil","uiGridConstants","uiGridGridMenuService","i18nService",function(gridUtil,uiGridConstants,uiGridGridMenuService,i18nService){return{priority:0,scope:!0,require:["^uiGrid"],templateUrl:"ui-grid/ui-grid-menu-button",replace:!0,link:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0];$scope.i18n={aria:i18nService.getSafeText("gridMenu.aria")},uiGridGridMenuService.initialize($scope,uiGridCtrl.grid),$scope.shown=!1,$scope.toggleMenu=function(){$scope.shown?($scope.$broadcast("hide-menu"),$scope.shown=!1):($scope.menuItems=uiGridGridMenuService.getMenuItems($scope),$scope.$broadcast("show-menu"),$scope.shown=!0)},$scope.$on("menu-hidden",function(){$scope.shown=!1,gridUtil.focus.bySelector($elm,".ui-grid-icon-container")})}}}])}(),function(){angular.module("ui.grid").directive("uiGridMenu",["$compile","$timeout","$window","$document","gridUtil","uiGridConstants","i18nService",function($compile,$timeout,$window,$document,gridUtil,uiGridConstants,i18nService){var uiGridMenu={priority:0,scope:{menuItems:"=",autoHide:"=?"},require:"?^uiGrid",templateUrl:"ui-grid/uiGridMenu",replace:!1,link:function($scope,$elm,$attrs,uiGridCtrl){var self=this;$scope.i18n={close:i18nService.getSafeText("columnMenu.close")},self.showMenu=$scope.showMenu=function(event,args){$scope.shown?$scope.shownMid||($scope.shownMid=!0,$scope.$emit("menu-shown")):($scope.shown=!0,$timeout(function(){$scope.shownMid=!0,$scope.$emit("menu-shown")}));var docEventType="click";args&&args.originalEvent&&args.originalEvent.type&&"touchstart"===args.originalEvent.type&&(docEventType=args.originalEvent.type),angular.element(document).off("click touchstart",applyHideMenu),
$timeout(function(){angular.element(document).on(docEventType,applyHideMenu)}),gridUtil.focus.bySelector($elm,"button[type=button]",!0)},self.hideMenu=$scope.hideMenu=function(event,args){$scope.shown&&($scope.shownMid=!1,$timeout(function(){$scope.shownMid||($scope.shown=!1,$scope.$emit("menu-hidden"))},200)),angular.element(document).off("click touchstart",applyHideMenu)},$scope.$on("hide-menu",function(event,args){$scope.hideMenu(event,args)}),$scope.$on("show-menu",function(event,args){$scope.showMenu(event,args)});var applyHideMenu=function(){$scope.shown&&$scope.$apply(function(){$scope.hideMenu()})};"undefined"!=typeof $scope.autoHide&&void 0!==$scope.autoHide||($scope.autoHide=!0),$scope.autoHide&&angular.element($window).on("resize",applyHideMenu),$scope.$on("$destroy",function(){angular.element(document).off("click touchstart",applyHideMenu)}),$scope.$on("$destroy",function(){angular.element($window).off("resize",applyHideMenu)}),uiGridCtrl&&$scope.$on("$destroy",uiGridCtrl.grid.api.core.on.scrollBegin($scope,applyHideMenu)),$scope.$on("$destroy",$scope.$on(uiGridConstants.events.ITEM_DRAGGING,applyHideMenu))},controller:["$scope","$element","$attrs",function($scope,$element,$attrs){}]};return uiGridMenu}]).directive("uiGridMenuItem",["gridUtil","$compile","i18nService",function(gridUtil,$compile,i18nService){var uiGridMenuItem={priority:0,scope:{name:"=",active:"=",action:"=",icon:"=",shown:"=",context:"=",templateUrl:"=",leaveOpen:"=",screenReaderOnly:"="},require:["?^uiGrid","^uiGridMenu"],templateUrl:"ui-grid/uiGridMenuItem",replace:!1,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,controllers){controllers[0],controllers[1];$scope.templateUrl&&gridUtil.getTemplate($scope.templateUrl).then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);$elm.replaceWith(newElm)})},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0];controllers[1];"undefined"!=typeof $scope.shown&&null!==$scope.shown||($scope.shown=function(){return!0}),$scope.itemShown=function(){var context={};return $scope.context&&(context.context=$scope.context),"undefined"!=typeof uiGridCtrl&&uiGridCtrl&&(context.grid=uiGridCtrl.grid),$scope.shown.call(context)},$scope.itemAction=function($event,title){if(gridUtil.logDebug("itemAction"),$event.stopPropagation(),"function"==typeof $scope.action){var context={};$scope.context&&(context.context=$scope.context),"undefined"!=typeof uiGridCtrl&&uiGridCtrl&&(context.grid=uiGridCtrl.grid),$scope.action.call(context,$event,title),$scope.leaveOpen?gridUtil.focus.bySelector(angular.element(gridUtil.closestElm($elm,".ui-grid-menu-items")),"button[type=button]",!0):$scope.$emit("hide-menu")}},$scope.i18n=i18nService.get()}}}};return uiGridMenuItem}])}(),function(){"use strict";var oneBinders=angular.module("ui.grid");angular.forEach([{tag:"Src",method:"attr"},{tag:"Text",method:"text"},{tag:"Href",method:"attr"},{tag:"Class",method:"addClass"},{tag:"Html",method:"html"},{tag:"Alt",method:"attr"},{tag:"Style",method:"css"},{tag:"Value",method:"attr"},{tag:"Id",method:"attr"},{tag:"Id",directiveName:"IdGrid",method:"attr",appendGridId:!0},{tag:"Title",method:"attr"},{tag:"Label",method:"attr",aria:!0},{tag:"Labelledby",method:"attr",aria:!0},{tag:"Labelledby",directiveName:"LabelledbyGrid",appendGridId:!0,method:"attr",aria:!0},{tag:"Describedby",method:"attr",aria:!0},{tag:"Describedby",directiveName:"DescribedbyGrid",appendGridId:!0,method:"attr",aria:!0}],function(v){var baseDirectiveName="uiGridOneBind",directiveName=(v.aria?baseDirectiveName+"Aria":baseDirectiveName)+(v.directiveName?v.directiveName:v.tag);oneBinders.directive(directiveName,["gridUtil",function(gridUtil){return{restrict:"A",require:["?uiGrid","?^uiGrid"],link:function(scope,iElement,iAttrs,controllers){var appendGridId=function(val){var grid;if(scope.grid)grid=scope.grid;else if(scope.col&&scope.col.grid)grid=scope.col.grid;else if(!controllers.some(function(controller){if(controller&&controller.grid)return grid=controller.grid,!0}))throw gridUtil.logError("["+directiveName+"] A valid grid could not be found to bind id. Are you using this directive within the correct scope? Trying to generate id: [gridID]-"+val),new Error("No valid grid could be found");if(grid){var idRegex=new RegExp(grid.id.toString());idRegex.test(val)||(val=grid.id.toString()+"-"+val)}return val},rmWatcher=scope.$watch(iAttrs[directiveName],function(newV){if(newV){if(v.appendGridId){var newIdString=null;angular.forEach(newV.split(" "),function(s){newIdString=(newIdString?newIdString+" ":"")+appendGridId(s)}),newV=newIdString}switch(v.method){case"attr":v.aria?iElement[v.method]("aria-"+v.tag.toLowerCase(),newV):iElement[v.method](v.tag.toLowerCase(),newV);break;case"addClass":if(angular.isObject(newV)&&!angular.isArray(newV)){var results=[],nonNullFound=!1;if(angular.forEach(newV,function(value,index){null!==value&&"undefined"!=typeof value&&(nonNullFound=!0,value&&results.push(index))}),!nonNullFound)return;newV=results}if(!newV)return;iElement.addClass(angular.isArray(newV)?newV.join(" "):newV);break;default:iElement[v.method](newV)}rmWatcher()}},!0)}}}])})}(),function(){"use strict";var module=angular.module("ui.grid");module.directive("uiGridRenderContainer",["$timeout","$document","uiGridConstants","gridUtil","ScrollEvent",function($timeout,$document,uiGridConstants,gridUtil,ScrollEvent){return{replace:!0,transclude:!0,templateUrl:"ui-grid/uiGridRenderContainer",require:["^uiGrid","uiGridRenderContainer"],scope:{containerId:"=",rowContainerName:"=",colContainerName:"=",bindScrollHorizontal:"=",bindScrollVertical:"=",enableVerticalScrollbar:"=",enableHorizontalScrollbar:"="},controller:"uiGridRenderContainer as RenderContainer",compile:function(){return{pre:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],containerCtrl=controllers[1],grid=$scope.grid=uiGridCtrl.grid;if(!$scope.rowContainerName)throw"No row render container name specified";if(!$scope.colContainerName)throw"No column render container name specified";if(!grid.renderContainers[$scope.rowContainerName])throw"Row render container '"+$scope.rowContainerName+"' is not registered.";if(!grid.renderContainers[$scope.colContainerName])throw"Column render container '"+$scope.colContainerName+"' is not registered.";var rowContainer=$scope.rowContainer=grid.renderContainers[$scope.rowContainerName],colContainer=$scope.colContainer=grid.renderContainers[$scope.colContainerName];containerCtrl.containerId=$scope.containerId,containerCtrl.rowContainer=rowContainer,containerCtrl.colContainer=colContainer},post:function($scope,$elm,$attrs,controllers){function update(){var ret="",canvasWidth=colContainer.canvasWidth,viewportWidth=colContainer.getViewportWidth(),canvasHeight=rowContainer.getCanvasHeight(),viewportHeight=rowContainer.getViewportHeight();colContainer.needsHScrollbarPlaceholder()&&(viewportHeight-=grid.scrollbarHeight);var headerViewportWidth,footerViewportWidth;return headerViewportWidth=footerViewportWidth=colContainer.getHeaderViewportWidth(),ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-canvas { width: "+canvasWidth+"px; height: "+canvasHeight+"px; }",ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-header-canvas { width: "+(canvasWidth+grid.scrollbarWidth)+"px; }",ret+=renderContainer.explicitHeaderCanvasHeight?"\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-header-canvas { height: "+renderContainer.explicitHeaderCanvasHeight+"px; }":"\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-header-canvas { height: inherit; }",ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-viewport { width: "+viewportWidth+"px; height: "+viewportHeight+"px; }",ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-header-viewport { width: "+headerViewportWidth+"px; }",ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-footer-canvas { width: "+(canvasWidth+grid.scrollbarWidth)+"px; }",ret+="\n .grid"+uiGridCtrl.grid.id+" .ui-grid-render-container-"+$scope.containerId+" .ui-grid-footer-viewport { width: "+footerViewportWidth+"px; }"}var uiGridCtrl=controllers[0],containerCtrl=controllers[1],grid=uiGridCtrl.grid,rowContainer=containerCtrl.rowContainer,colContainer=containerCtrl.colContainer,scrollTop=null,scrollLeft=null,renderContainer=grid.renderContainers[$scope.containerId];$elm.addClass("ui-grid-render-container-"+$scope.containerId),gridUtil.on.mousewheel($elm,function(event){var scrollEvent=new ScrollEvent(grid,rowContainer,colContainer,ScrollEvent.Sources.RenderContainerMouseWheel);if(0!==event.deltaY){var scrollYAmount=event.deltaY*-1*event.deltaFactor;scrollTop=containerCtrl.viewport[0].scrollTop,scrollEvent.verticalScrollLength=rowContainer.getVerticalScrollLength();var scrollYPercentage=(scrollTop+scrollYAmount)/scrollEvent.verticalScrollLength;scrollYPercentage>=1&&scrollTop<scrollEvent.verticalScrollLength&&(containerCtrl.viewport[0].scrollTop=scrollEvent.verticalScrollLength),scrollYPercentage<0?scrollYPercentage=0:scrollYPercentage>1&&(scrollYPercentage=1),scrollEvent.y={percentage:scrollYPercentage,pixels:scrollYAmount}}if(0!==event.deltaX){var scrollXAmount=event.deltaX*event.deltaFactor;scrollLeft=gridUtil.normalizeScrollLeft(containerCtrl.viewport,grid),scrollEvent.horizontalScrollLength=colContainer.getCanvasWidth()-colContainer.getViewportWidth();var scrollXPercentage=(scrollLeft+scrollXAmount)/scrollEvent.horizontalScrollLength;scrollXPercentage<0?scrollXPercentage=0:scrollXPercentage>1&&(scrollXPercentage=1),scrollEvent.x={percentage:scrollXPercentage,pixels:scrollXAmount}}0!==event.deltaY&&(scrollEvent.atTop(scrollTop)||scrollEvent.atBottom(scrollTop))||0!==event.deltaX&&(scrollEvent.atLeft(scrollLeft)||scrollEvent.atRight(scrollLeft))||(event.preventDefault(),event.stopPropagation(),scrollEvent.fireThrottledScrollingEvent("",scrollEvent))}),$elm.bind("$destroy",function(){$elm.unbind("keydown"),["touchstart","touchmove","touchend","keydown","wheel","mousewheel","DomMouseScroll","MozMousePixelScroll"].forEach(function(eventName){$elm.unbind(eventName)})}),uiGridCtrl.grid.registerStyleComputation({priority:6,func:update})}}}}}]),module.controller("uiGridRenderContainer",["$scope","gridUtil",function($scope,gridUtil){}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridRow",["gridUtil",function(gridUtil){return{replace:!0,require:["^uiGrid","^uiGridRenderContainer"],scope:{row:"=uiGridRow",rowRenderIndex:"="},compile:function(){return{pre:function($scope,$elm,$attrs,controllers){function compileTemplate(){$scope.row.getRowTemplateFn.then(function(compiledElementFn){var newScope=$scope.$new();compiledElementFn(newScope,function(newElm,scope){clonedElement&&(clonedElement.remove(),cloneScope.$destroy()),$elm.empty().append(newElm),clonedElement=newElm,cloneScope=newScope})})}var uiGridCtrl=controllers[0],containerCtrl=controllers[1];uiGridCtrl.grid;$scope.grid=uiGridCtrl.grid,$scope.colContainer=containerCtrl.colContainer;var clonedElement,cloneScope;compileTemplate(),$scope.$watch("row.getRowTemplateFn",function(newFunc,oldFunc){newFunc!==oldFunc&&compileTemplate()})},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){angular.module("ui.grid").directive("uiGridStyle",["gridUtil","$interpolate",function(gridUtil,$interpolate){return{link:function($scope,$elm,$attrs,uiGridCtrl){var interpolateFn=$interpolate($elm.text(),!0);interpolateFn&&$scope.$watch(interpolateFn,function(value){$elm.text(value)})}}}])}(),function(){"use strict";angular.module("ui.grid").directive("uiGridViewport",["gridUtil","ScrollEvent","uiGridConstants","$log",function(gridUtil,ScrollEvent,uiGridConstants,$log){return{replace:!0,scope:{},controllerAs:"Viewport",templateUrl:"ui-grid/uiGridViewport",require:["^uiGrid","^uiGridRenderContainer"],link:function($scope,$elm,$attrs,controllers){function scrollHandler(evt){var newScrollTop=$elm[0].scrollTop,newScrollLeft=gridUtil.normalizeScrollLeft($elm,grid),vertScrollPercentage=rowContainer.scrollVertical(newScrollTop),horizScrollPercentage=colContainer.scrollHorizontal(newScrollLeft),scrollEvent=new ScrollEvent(grid,rowContainer,colContainer,ScrollEvent.Sources.ViewPortScroll);scrollEvent.newScrollLeft=newScrollLeft,scrollEvent.newScrollTop=newScrollTop,horizScrollPercentage>-1&&(scrollEvent.x={percentage:horizScrollPercentage}),vertScrollPercentage>-1&&(scrollEvent.y={percentage:vertScrollPercentage}),grid.scrollContainers($scope.$parent.containerId,scrollEvent)}function syncVerticalScroll(scrollEvent){containerCtrl.prevScrollArgs=scrollEvent;var newScrollTop=scrollEvent.getNewScrollTop(rowContainer,containerCtrl.viewport);$elm[0].scrollTop=newScrollTop}function syncHorizontalScroll(scrollEvent){containerCtrl.prevScrollArgs=scrollEvent;var newScrollLeft=scrollEvent.getNewScrollLeft(colContainer,containerCtrl.viewport);$elm[0].scrollLeft=gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft,grid)}function syncHorizontalHeader(scrollEvent){var newScrollLeft=scrollEvent.getNewScrollLeft(colContainer,containerCtrl.viewport);containerCtrl.headerViewport&&(containerCtrl.headerViewport.scrollLeft=gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft,grid))}function syncHorizontalFooter(scrollEvent){var newScrollLeft=scrollEvent.getNewScrollLeft(colContainer,containerCtrl.viewport);containerCtrl.footerViewport&&(containerCtrl.footerViewport.scrollLeft=gridUtil.denormalizeScrollLeft(containerCtrl.viewport,newScrollLeft,grid))}var uiGridCtrl=controllers[0],containerCtrl=controllers[1];$scope.containerCtrl=containerCtrl;var rowContainer=containerCtrl.rowContainer,colContainer=containerCtrl.colContainer,grid=uiGridCtrl.grid;$scope.grid=uiGridCtrl.grid,$scope.rowContainer=containerCtrl.rowContainer,$scope.colContainer=containerCtrl.colContainer,containerCtrl.viewport=$elm,$elm.on("scroll",scrollHandler);$scope.$parent.bindScrollVertical&&grid.addVerticalScrollSync($scope.$parent.containerId,syncVerticalScroll),$scope.$parent.bindScrollHorizontal&&(grid.addHorizontalScrollSync($scope.$parent.containerId,syncHorizontalScroll),grid.addHorizontalScrollSync($scope.$parent.containerId+"header",syncHorizontalHeader),grid.addHorizontalScrollSync($scope.$parent.containerId+"footer",syncHorizontalFooter))},controller:["$scope",function($scope){this.rowStyle=function(index){var rowContainer=$scope.rowContainer,colContainer=$scope.colContainer,styles={};if(0===index&&0!==rowContainer.currentTopRow){var hiddenRowWidth=rowContainer.currentTopRow*rowContainer.grid.options.rowHeight;styles["margin-top"]=hiddenRowWidth+"px"}return 0!==colContainer.currentFirstColumn&&(colContainer.grid.isRTL()?styles["margin-right"]=colContainer.columnOffset+"px":styles["margin-left"]=colContainer.columnOffset+"px"),styles}}]}}])}(),function(){angular.module("ui.grid").directive("uiGridVisible",function(){return function($scope,$elm,$attr){$scope.$watch($attr.uiGridVisible,function(visible){$elm[visible?"removeClass":"addClass"]("ui-grid-invisible")})}})}(),function(){"use strict";function uiGridDirective($compile,$templateCache,$timeout,$window,gridUtil,uiGridConstants){return{templateUrl:"ui-grid/ui-grid",scope:{uiGrid:"="},replace:!0,transclude:!0,controller:"uiGridController",compile:function(){return{post:function($scope,$elm,$attrs,uiGridCtrl){function checkSize(){$elm[0].offsetWidth<=0&&sizeChecks<maxSizeChecks?(setTimeout(checkSize,sizeCheckInterval),sizeChecks++):$timeout(init)}function setup(){angular.element($window).on("resize",gridResize),$elm.on("$destroy",function(){angular.element($window).off("resize",gridResize)}),$scope.$watch(function(){return grid.hasLeftContainer()},function(newValue,oldValue){newValue!==oldValue&&grid.refreshCanvas(!0)}),$scope.$watch(function(){return grid.hasRightContainer()},function(newValue,oldValue){newValue!==oldValue&&grid.refreshCanvas(!0)})}function init(){grid.gridWidth=$scope.gridWidth=gridUtil.elementWidth($elm),grid.canvasWidth=uiGridCtrl.grid.gridWidth,grid.gridHeight=$scope.gridHeight=gridUtil.elementHeight($elm),grid.gridHeight<grid.options.rowHeight&&grid.options.enableMinHeightCheck&&autoAdjustHeight(),grid.refreshCanvas(!0)}function autoAdjustHeight(){var contentHeight=grid.options.minRowsToShow*grid.options.rowHeight,headerHeight=grid.options.showHeader?grid.options.headerRowHeight:0,footerHeight=grid.calcFooterHeight(),scrollbarHeight=0;grid.options.enableHorizontalScrollbar===uiGridConstants.scrollbars.ALWAYS&&(scrollbarHeight=gridUtil.getScrollbarWidth());var maxNumberOfFilters=0;if(angular.forEach(grid.options.columnDefs,function(col){col.hasOwnProperty("filter")?maxNumberOfFilters<1&&(maxNumberOfFilters=1):col.hasOwnProperty("filters")&&maxNumberOfFilters<col.filters.length&&(maxNumberOfFilters=col.filters.length)}),grid.options.enableFiltering){var allColumnsHaveFilteringTurnedOff=grid.options.columnDefs.every(function(col){return col.enableFiltering===!1});allColumnsHaveFilteringTurnedOff||maxNumberOfFilters++}var filterHeight=maxNumberOfFilters*headerHeight,newHeight=headerHeight+contentHeight+footerHeight+scrollbarHeight+filterHeight;$elm.css("height",newHeight+"px"),grid.gridHeight=$scope.gridHeight=gridUtil.elementHeight($elm)}function gridResize($event){grid.gridWidth=$scope.gridWidth=gridUtil.elementWidth($elm),grid.gridHeight=$scope.gridHeight=gridUtil.elementHeight($elm),grid.refreshCanvas(!0)}var grid=uiGridCtrl.grid;uiGridCtrl.scrollbars=[],grid.element=$elm;var sizeCheckInterval=100,maxSizeChecks=20,sizeChecks=0;setup(),init(),grid.renderingComplete(),checkSize()}}}}}angular.module("ui.grid").controller("uiGridController",["$scope","$element","$attrs","gridUtil","$q","uiGridConstants","$templateCache","gridClassFactory","$timeout","$parse","$compile",function($scope,$elm,$attrs,gridUtil,$q,uiGridConstants,$templateCache,gridClassFactory,$timeout,$parse,$compile){function columnDefsWatchFunction(n,o){n&&n!==o&&(self.grid.options.columnDefs=n,self.grid.buildColumns({orderByColumnDefs:!0}).then(function(){self.grid.preCompileCellTemplates(),self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.COLUMN)}))}function dataWatchFunction(newData){var promises=[];if(self.grid.options.fastWatch&&(newData=angular.isString($scope.uiGrid.data)?self.grid.appScope[$scope.uiGrid.data]:$scope.uiGrid.data),newData){var hasColumns=self.grid.columns.length>(self.grid.rowHeaderColumns?self.grid.rowHeaderColumns.length:0);!hasColumns&&!$attrs.uiGridColumns&&0===self.grid.options.columnDefs.length&&newData.length>0&&self.grid.buildColumnDefsFromData(newData),!hasColumns&&(self.grid.options.columnDefs.length>0||newData.length>0)&&promises.push(self.grid.buildColumns().then(function(){self.grid.preCompileCellTemplates()})),$q.all(promises).then(function(){self.grid.modifyRows(newData).then(function(){self.grid.redrawInPlace(!0),$scope.$evalAsync(function(){self.grid.refreshCanvas(!0),self.grid.callDataChangeCallbacks(uiGridConstants.dataChange.ROW)})})})}}var self=this;self.grid=gridClassFactory.createGrid($scope.uiGrid),self.grid.appScope=self.grid.appScope||$scope.$parent,$elm.addClass("grid"+self.grid.id),self.grid.rtl="rtl"===gridUtil.getStyles($elm[0]).direction,$scope.grid=self.grid,$attrs.uiGridColumns&&$attrs.$observe("uiGridColumns",function(value){self.grid.options.columnDefs=value,self.grid.buildColumns().then(function(){self.grid.preCompileCellTemplates(),self.grid.refreshCanvas(!0)})});var deregFunctions=[];self.grid.options.fastWatch?(self.uiGrid=$scope.uiGrid,angular.isString($scope.uiGrid.data)?(deregFunctions.push($scope.$parent.$watch($scope.uiGrid.data,dataWatchFunction)),deregFunctions.push($scope.$parent.$watch(function(){return self.grid.appScope[$scope.uiGrid.data]?self.grid.appScope[$scope.uiGrid.data].length:void 0},dataWatchFunction))):(deregFunctions.push($scope.$parent.$watch(function(){return $scope.uiGrid.data},dataWatchFunction)),deregFunctions.push($scope.$parent.$watch(function(){return $scope.uiGrid.data.length},dataWatchFunction))),deregFunctions.push($scope.$parent.$watch(function(){return $scope.uiGrid.columnDefs},columnDefsWatchFunction)),deregFunctions.push($scope.$parent.$watch(function(){return $scope.uiGrid.columnDefs.length},columnDefsWatchFunction))):(angular.isString($scope.uiGrid.data)?deregFunctions.push($scope.$parent.$watchCollection($scope.uiGrid.data,dataWatchFunction)):deregFunctions.push($scope.$parent.$watchCollection(function(){return $scope.uiGrid.data},dataWatchFunction)),deregFunctions.push($scope.$parent.$watchCollection(function(){return $scope.uiGrid.columnDefs},columnDefsWatchFunction)));var styleWatchDereg=$scope.$watch(function(){return self.grid.styleComputations},function(){self.grid.refreshCanvas(!0)});$scope.$on("$destroy",function(){deregFunctions.forEach(function(deregFn){deregFn()}),styleWatchDereg()}),self.fireEvent=function(eventName,args){"undefined"!=typeof args&&void 0!==args||(args={}),"undefined"!=typeof args.grid&&void 0!==args.grid||(args.grid=self.grid),$scope.$broadcast(eventName,args)},self.innerCompile=function(elm){$compile(elm)($scope)}}]),angular.module("ui.grid").directive("uiGrid",uiGridDirective),uiGridDirective.$inject=["$compile","$templateCache","$timeout","$window","gridUtil","uiGridConstants"]}(),function(){"use strict";angular.module("ui.grid").directive("uiGridPinnedContainer",["gridUtil",function(gridUtil){return{restrict:"EA",replace:!0,template:'<div class="ui-grid-pinned-container"><div ui-grid-render-container container-id="side" row-container-name="\'body\'" col-container-name="side" bind-scroll-vertical="true" class="{{ side }} ui-grid-render-container-{{ side }}"></div></div>',scope:{side:"=uiGridPinnedContainer"},require:"^uiGrid",compile:function(){return{post:function($scope,$elm,$attrs,uiGridCtrl){function monkeyPatchedGetViewportWidth(){var self=this,viewportWidth=0;self.visibleColumnCache.forEach(function(column){viewportWidth+=column.drawnWidth});var adjustment=self.getViewportAdjustment();return viewportWidth+=adjustment.width}function updateContainerWidth(){if("left"===$scope.side||"right"===$scope.side){for(var cols=grid.renderContainers[$scope.side].visibleColumnCache,width=0,i=0;i<cols.length;i++){var col=cols[i];width+=col.drawnWidth||col.width||0}return width}}function updateContainerDimensions(){var ret="";return"left"!==$scope.side&&"right"!==$scope.side||(myWidth=updateContainerWidth(),$elm.attr("style",null),ret+=".grid"+grid.id+" .ui-grid-pinned-container-"+$scope.side+", .grid"+grid.id+" .ui-grid-pinned-container-"+$scope.side+" .ui-grid-render-container-"+$scope.side+" .ui-grid-viewport { width: "+myWidth+"px; } "),ret}var grid=uiGridCtrl.grid,myWidth=0;$elm.addClass("ui-grid-pinned-container-"+$scope.side),"left"!==$scope.side&&"right"!==$scope.side||(grid.renderContainers[$scope.side].getViewportWidth=monkeyPatchedGetViewportWidth),grid.renderContainers.body.registerViewportAdjuster(function(adjustment){return myWidth=updateContainerWidth(),adjustment.width-=myWidth,adjustment.side=$scope.side,adjustment}),grid.registerStyleComputation({priority:15,func:updateContainerDimensions})}}}}}])}(),function(){angular.module("ui.grid").factory("Grid",["$q","$compile","$parse","gridUtil","uiGridConstants","GridOptions","GridColumn","GridRow","GridApi","rowSorter","rowSearcher","GridRenderContainer","$timeout","ScrollEvent",function($q,$compile,$parse,gridUtil,uiGridConstants,GridOptions,GridColumn,GridRow,GridApi,rowSorter,rowSearcher,GridRenderContainer,$timeout,ScrollEvent){function RowHashMap(){}var Grid=function(options){function vertical(scrollEvent){self.isScrollingVertically=!1,self.api.core.raise.scrollEnd(scrollEvent),self.scrollDirection=uiGridConstants.scrollDirection.NONE}function horizontal(scrollEvent){self.isScrollingHorizontally=!1,self.api.core.raise.scrollEnd(scrollEvent),self.scrollDirection=uiGridConstants.scrollDirection.NONE}var self=this;if(void 0===options||"undefined"==typeof options.id||!options.id)throw new Error("No ID provided. An ID must be given when creating a grid.");if(!/^[_a-zA-Z0-9-]+$/.test(options.id))throw new Error("Grid id '"+options.id+'" is invalid. It must follow CSS selector syntax rules.');self.id=options.id,delete options.id,self.options=GridOptions.initialize(options),self.appScope=self.options.appScopeProvider,self.headerHeight=self.options.headerRowHeight,self.footerHeight=self.calcFooterHeight(),self.columnFooterHeight=self.calcColumnFooterHeight(),self.rtl=!1,self.gridHeight=0,self.gridWidth=0,self.columnBuilders=[],self.rowBuilders=[],self.rowsProcessors=[],self.columnsProcessors=[],self.styleComputations=[],self.viewportAdjusters=[],self.rowHeaderColumns=[],self.dataChangeCallbacks={},self.verticalScrollSyncCallBackFns={},self.horizontalScrollSyncCallBackFns={},self.renderContainers={},self.renderContainers.body=new GridRenderContainer("body",self),self.cellValueGetterCache={},self.getRowTemplateFn=null,self.rows=[],self.columns=[],self.isScrollingVertically=!1,self.isScrollingHorizontally=!1,self.scrollDirection=uiGridConstants.scrollDirection.NONE,self.disableScrolling=!1;var debouncedVertical=gridUtil.debounce(vertical,self.options.scrollDebounce),debouncedVerticalMinDelay=gridUtil.debounce(vertical,0),debouncedHorizontal=gridUtil.debounce(horizontal,self.options.scrollDebounce),debouncedHorizontalMinDelay=gridUtil.debounce(horizontal,0);self.flagScrollingVertically=function(scrollEvent){self.isScrollingVertically||self.isScrollingHorizontally||self.api.core.raise.scrollBegin(scrollEvent),self.isScrollingVertically=!0,0!==self.options.scrollDebounce&&scrollEvent.withDelay?debouncedVertical(scrollEvent):debouncedVerticalMinDelay(scrollEvent)},self.flagScrollingHorizontally=function(scrollEvent){self.isScrollingVertically||self.isScrollingHorizontally||self.api.core.raise.scrollBegin(scrollEvent),self.isScrollingHorizontally=!0,0!==self.options.scrollDebounce&&scrollEvent.withDelay?debouncedHorizontal(scrollEvent):debouncedHorizontalMinDelay(scrollEvent)},self.scrollbarHeight=0,self.scrollbarWidth=0,self.options.enableHorizontalScrollbar===uiGridConstants.scrollbars.ALWAYS&&(self.scrollbarHeight=gridUtil.getScrollbarWidth()),self.options.enableVerticalScrollbar===uiGridConstants.scrollbars.ALWAYS&&(self.scrollbarWidth=gridUtil.getScrollbarWidth()),self.api=new GridApi(self),self.api.registerMethod("core","refresh",this.refresh),self.api.registerMethod("core","queueGridRefresh",this.queueGridRefresh),self.api.registerMethod("core","refreshRows",this.refreshRows),self.api.registerMethod("core","queueRefresh",this.queueRefresh),self.api.registerMethod("core","handleWindowResize",this.handleWindowResize),self.api.registerMethod("core","addRowHeaderColumn",this.addRowHeaderColumn),self.api.registerMethod("core","scrollToIfNecessary",function(gridRow,gridCol){return self.scrollToIfNecessary(gridRow,gridCol)}),self.api.registerMethod("core","scrollTo",function(rowEntity,colDef){return self.scrollTo(rowEntity,colDef)}),self.api.registerMethod("core","registerRowsProcessor",this.registerRowsProcessor),self.api.registerMethod("core","registerColumnsProcessor",this.registerColumnsProcessor),self.api.registerMethod("core","sortHandleNulls",rowSorter.handleNulls),self.api.registerEvent("core","sortChanged"),self.api.registerEvent("core","columnVisibilityChanged"),self.api.registerMethod("core","notifyDataChange",this.notifyDataChange),self.api.registerMethod("core","clearAllFilters",this.clearAllFilters),self.registerDataChangeCallback(self.columnRefreshCallback,[uiGridConstants.dataChange.COLUMN]),self.registerDataChangeCallback(self.processRowsCallback,[uiGridConstants.dataChange.EDIT]),self.registerDataChangeCallback(self.updateFooterHeightCallback,[uiGridConstants.dataChange.OPTIONS]),self.registerStyleComputation({priority:10,func:self.getFooterStyles})};return Grid.prototype.calcFooterHeight=function(){if(!this.hasFooter())return 0;var height=0;return this.options.showGridFooter&&(height+=this.options.gridFooterHeight),height+=this.calcColumnFooterHeight()},Grid.prototype.calcColumnFooterHeight=function(){var height=0;return this.options.showColumnFooter&&(height+=this.options.columnFooterHeight),height},Grid.prototype.getFooterStyles=function(){var style=".grid"+this.id+" .ui-grid-footer-aggregates-row { height: "+this.options.columnFooterHeight+"px; }";return style+=" .grid"+this.id+" .ui-grid-footer-info { height: "+this.options.gridFooterHeight+"px; }"},Grid.prototype.hasFooter=function(){return this.options.showGridFooter||this.options.showColumnFooter},Grid.prototype.isRTL=function(){return this.rtl},Grid.prototype.registerColumnBuilder=function(columnBuilder){this.columnBuilders.push(columnBuilder)},Grid.prototype.buildColumnDefsFromData=function(dataRows){this.options.columnDefs=gridUtil.getColumnsFromData(dataRows,this.options.excludeProperties)},Grid.prototype.registerRowBuilder=function(rowBuilder){this.rowBuilders.push(rowBuilder)},Grid.prototype.registerDataChangeCallback=function(callback,types,_this){var uid=gridUtil.nextUid();types||(types=[uiGridConstants.dataChange.ALL]),Array.isArray(types)||gridUtil.logError("Expected types to be an array or null in registerDataChangeCallback, value passed was: "+types),this.dataChangeCallbacks[uid]={callback:callback,types:types,_this:_this};var self=this,deregisterFunction=function(){delete self.dataChangeCallbacks[uid]};return deregisterFunction},Grid.prototype.callDataChangeCallbacks=function(type,options){angular.forEach(this.dataChangeCallbacks,function(callback,uid){callback.types.indexOf(uiGridConstants.dataChange.ALL)===-1&&callback.types.indexOf(type)===-1&&type!==uiGridConstants.dataChange.ALL||(callback._this?callback.callback.apply(callback._this,this):callback.callback(this))},this)},Grid.prototype.notifyDataChange=function(type){var constants=uiGridConstants.dataChange;type===constants.ALL||type===constants.COLUMN||type===constants.EDIT||type===constants.ROW||type===constants.OPTIONS?this.callDataChangeCallbacks(type):gridUtil.logError("Notified of a data change, but the type was not recognised, so no action taken, type was: "+type)},Grid.prototype.columnRefreshCallback=function(grid){grid.buildColumns(),grid.queueGridRefresh()},Grid.prototype.processRowsCallback=function(grid){grid.queueGridRefresh()},Grid.prototype.updateFooterHeightCallback=function(grid){grid.footerHeight=grid.calcFooterHeight(),grid.columnFooterHeight=grid.calcColumnFooterHeight()},Grid.prototype.getColumn=function(name){var columns=this.columns.filter(function(column){return column.colDef.name===name});return columns.length>0?columns[0]:null},Grid.prototype.getColDef=function(name){var colDefs=this.options.columnDefs.filter(function(colDef){return colDef.name===name});return colDefs.length>0?colDefs[0]:null},Grid.prototype.assignTypes=function(){var self=this;self.options.columnDefs.forEach(function(colDef,index){if(!colDef.type){var col=new GridColumn(colDef,index,self),firstRow=self.rows.length>0?self.rows[0]:null;firstRow?colDef.type=gridUtil.guessType(self.getCellValue(firstRow,col)):colDef.type="string"}})},Grid.prototype.isRowHeaderColumn=function(column){return this.rowHeaderColumns.indexOf(column)!==-1},Grid.prototype.addRowHeaderColumn=function(colDef){var self=this,rowHeaderCol=new GridColumn(colDef,gridUtil.nextUid(),self);rowHeaderCol.isRowHeader=!0,self.isRTL()?(self.createRightContainer(),rowHeaderCol.renderContainer="right"):(self.createLeftContainer(),rowHeaderCol.renderContainer="left"),self.columnBuilders[0](colDef,rowHeaderCol,self.options).then(function(){rowHeaderCol.enableFiltering=!1,rowHeaderCol.enableSorting=!1,rowHeaderCol.enableHiding=!1,self.rowHeaderColumns.push(rowHeaderCol),self.buildColumns().then(function(){self.preCompileCellTemplates(),
self.queueGridRefresh()})})},Grid.prototype.getOnlyDataColumns=function(){var self=this,cols=[];return self.columns.forEach(function(col){self.rowHeaderColumns.indexOf(col)===-1&&cols.push(col)}),cols},Grid.prototype.buildColumns=function(opts){var options={orderByColumnDefs:!1};angular.extend(options,opts);var i,self=this,builderPromises=[],headerOffset=self.rowHeaderColumns.length;for(i=0;i<self.columns.length;i++)self.getColDef(self.columns[i].name)||(self.columns.splice(i,1),i--);if(self.rowHeaderColumns.forEach(function(rowHeaderColumn){self.columns.unshift(rowHeaderColumn)}),self.options.columnDefs.forEach(function(colDef,index){self.preprocessColDef(colDef);var col=self.getColumn(colDef.name);col?col.updateColumnDef(colDef,!1):(col=new GridColumn(colDef,gridUtil.nextUid(),self),self.columns.splice(index+headerOffset,0,col)),self.columnBuilders.forEach(function(builder){builderPromises.push(builder.call(self,colDef,col,self.options))})}),options.orderByColumnDefs){var columnCache=self.columns.slice(0),len=Math.min(self.options.columnDefs.length,self.columns.length);for(i=0;i<len;i++)self.columns[i+headerOffset].name!==self.options.columnDefs[i].name?columnCache[i+headerOffset]=self.getColumn(self.options.columnDefs[i].name):columnCache[i+headerOffset]=self.columns[i+headerOffset];self.columns.length=0,Array.prototype.splice.apply(self.columns,[0,0].concat(columnCache))}return $q.all(builderPromises).then(function(){self.rows.length>0&&self.assignTypes()})},Grid.prototype.preCompileCellTemplates=function(){var self=this,preCompileTemplate=function(col){var html=col.cellTemplate.replace(uiGridConstants.MODEL_COL_FIELD,self.getQualifiedColField(col));html=html.replace(uiGridConstants.COL_FIELD,"grid.getCellValue(row, col)");var compiledElementFn=$compile(html);col.compiledElementFn=compiledElementFn,col.compiledElementFnDefer&&col.compiledElementFnDefer.resolve(col.compiledElementFn)};this.columns.forEach(function(col){col.cellTemplate?preCompileTemplate(col):col.cellTemplatePromise&&col.cellTemplatePromise.then(function(){preCompileTemplate(col)})})},Grid.prototype.getQualifiedColField=function(col){return"row.entity."+gridUtil.preEval(col.field)},Grid.prototype.createLeftContainer=function(){this.hasLeftContainer()||(this.renderContainers.left=new GridRenderContainer("left",this,{disableColumnOffset:!0}))},Grid.prototype.createRightContainer=function(){this.hasRightContainer()||(this.renderContainers.right=new GridRenderContainer("right",this,{disableColumnOffset:!0}))},Grid.prototype.hasLeftContainer=function(){return void 0!==this.renderContainers.left},Grid.prototype.hasRightContainer=function(){return void 0!==this.renderContainers.right},Grid.prototype.preprocessColDef=function(colDef){var self=this;if(!colDef.field&&!colDef.name)throw new Error("colDef.name or colDef.field property is required");if(void 0===colDef.name&&void 0!==colDef.field){for(var newName=colDef.field,counter=2;self.getColumn(newName);)newName=colDef.field+counter.toString(),counter++;colDef.name=newName}},Grid.prototype.newInN=function(o,n,oAccessor,nAccessor){for(var self=this,t=[],i=0;i<n.length;i++){for(var nV=nAccessor?n[i][nAccessor]:n[i],found=!1,j=0;j<o.length;j++){var oV=oAccessor?o[j][oAccessor]:o[j];if(self.options.rowEquality(nV,oV)){found=!0;break}}found||t.push(nV)}return t},Grid.prototype.getRow=function(rowEntity,lookInRows){var self=this;lookInRows="undefined"==typeof lookInRows?self.rows:lookInRows;var rows=lookInRows.filter(function(row){return self.options.rowEquality(row.entity,rowEntity)});return rows.length>0?rows[0]:null},Grid.prototype.modifyRows=function(newRawData){var self=this,oldRows=self.rows.slice(0),oldRowHash=self.rowHashMap||self.createRowHashMap();self.rowHashMap=self.createRowHashMap(),self.rows.length=0,newRawData.forEach(function(newEntity,i){var newRow;newRow=self.options.enableRowHashing?oldRowHash.get(newEntity):self.getRow(newEntity,oldRows),newRow||(newRow=self.processRowBuilders(new GridRow(newEntity,i,self))),self.rows.push(newRow),self.rowHashMap.put(newEntity,newRow)}),self.assignTypes();var p1=$q.when(self.processRowsProcessors(self.rows)).then(function(renderableRows){return self.setVisibleRows(renderableRows)}),p2=$q.when(self.processColumnsProcessors(self.columns)).then(function(renderableColumns){return self.setVisibleColumns(renderableColumns)});return $q.all([p1,p2])},Grid.prototype.addRows=function(newRawData){for(var self=this,existingRowCount=self.rows.length,i=0;i<newRawData.length;i++){var newRow=self.processRowBuilders(new GridRow(newRawData[i],i+existingRowCount,self));if(self.options.enableRowHashing){var found=self.rowHashMap.get(newRow.entity);found&&(found.row=newRow)}self.rows.push(newRow)}},Grid.prototype.processRowBuilders=function(gridRow){var self=this;return self.rowBuilders.forEach(function(builder){builder.call(self,gridRow,self.options)}),gridRow},Grid.prototype.registerStyleComputation=function(styleComputationInfo){this.styleComputations.push(styleComputationInfo)},Grid.prototype.registerRowsProcessor=function(processor,priority){if(!angular.isFunction(processor))throw"Attempt to register non-function rows processor: "+processor;this.rowsProcessors.push({processor:processor,priority:priority}),this.rowsProcessors.sort(function(a,b){return a.priority-b.priority})},Grid.prototype.removeRowsProcessor=function(processor){var idx=-1;this.rowsProcessors.forEach(function(rowsProcessor,index){rowsProcessor.processor===processor&&(idx=index)}),idx!==-1&&this.rowsProcessors.splice(idx,1)},Grid.prototype.processRowsProcessors=function(renderableRows){function startProcessor(i,renderedRowsToProcess){var processor=self.rowsProcessors[i].processor;return $q.when(processor.call(self,renderedRowsToProcess,self.columns)).then(function(processedRows){if(!processedRows)throw"Processor at index "+i+" did not return a set of renderable rows";if(!angular.isArray(processedRows))throw"Processor at index "+i+" did not return an array";return i++,i<=self.rowsProcessors.length-1?startProcessor(i,processedRows):void finished.resolve(processedRows)})}var self=this,myRenderableRows=renderableRows.slice(0);if(0===self.rowsProcessors.length)return $q.when(myRenderableRows);var finished=$q.defer();return startProcessor(0,myRenderableRows),finished.promise},Grid.prototype.setVisibleRows=function(rows){var self=this;for(var i in self.renderContainers){var container=self.renderContainers[i];container.canvasHeightShouldUpdate=!0,"undefined"==typeof container.visibleRowCache?container.visibleRowCache=[]:container.visibleRowCache.length=0}for(var ri=0;ri<rows.length;ri++){var row=rows[ri],targetContainer="undefined"!=typeof row.renderContainer&&row.renderContainer?row.renderContainer:"body";row.visible&&self.renderContainers[targetContainer].visibleRowCache.push(row)}self.api.core.raise.rowsRendered(this.api)},Grid.prototype.registerColumnsProcessor=function(processor,priority){if(!angular.isFunction(processor))throw"Attempt to register non-function rows processor: "+processor;this.columnsProcessors.push({processor:processor,priority:priority}),this.columnsProcessors.sort(function(a,b){return a.priority-b.priority})},Grid.prototype.removeColumnsProcessor=function(processor){var idx=this.columnsProcessors.indexOf(processor);"undefined"!=typeof idx&&void 0!==idx&&this.columnsProcessors.splice(idx,1)},Grid.prototype.processColumnsProcessors=function(renderableColumns){function startProcessor(i,renderedColumnsToProcess){var processor=self.columnsProcessors[i].processor;return $q.when(processor.call(self,renderedColumnsToProcess,self.rows)).then(function(processedColumns){if(!processedColumns)throw"Processor at index "+i+" did not return a set of renderable rows";if(!angular.isArray(processedColumns))throw"Processor at index "+i+" did not return an array";return i++,i<=self.columnsProcessors.length-1?startProcessor(i,myRenderableColumns):void finished.resolve(myRenderableColumns)})}var self=this,myRenderableColumns=renderableColumns.slice(0);if(0===self.columnsProcessors.length)return $q.when(myRenderableColumns);var finished=$q.defer();return startProcessor(0,myRenderableColumns),finished.promise},Grid.prototype.setVisibleColumns=function(columns){var self=this;for(var i in self.renderContainers){var container=self.renderContainers[i];container.visibleColumnCache.length=0}for(var ci=0;ci<columns.length;ci++){var column=columns[ci];column.visible&&("undefined"!=typeof column.renderContainer&&column.renderContainer?self.renderContainers[column.renderContainer].visibleColumnCache.push(column):self.renderContainers.body.visibleColumnCache.push(column))}},Grid.prototype.handleWindowResize=function($event){var self=this;self.gridWidth=gridUtil.elementWidth(self.element),self.gridHeight=gridUtil.elementHeight(self.element),self.queueRefresh()},Grid.prototype.queueRefresh=function(){var self=this;return self.refreshCanceller&&$timeout.cancel(self.refreshCanceller),self.refreshCanceller=$timeout(function(){self.refreshCanvas(!0)}),self.refreshCanceller.then(function(){self.refreshCanceller=null}),self.refreshCanceller},Grid.prototype.queueGridRefresh=function(){var self=this;return self.gridRefreshCanceller&&$timeout.cancel(self.gridRefreshCanceller),self.gridRefreshCanceller=$timeout(function(){self.refresh(!0)}),self.gridRefreshCanceller.then(function(){self.gridRefreshCanceller=null}),self.gridRefreshCanceller},Grid.prototype.updateCanvasHeight=function(){var self=this;for(var containerId in self.renderContainers)if(self.renderContainers.hasOwnProperty(containerId)){var container=self.renderContainers[containerId];container.canvasHeightShouldUpdate=!0}},Grid.prototype.buildStyles=function(){var self=this;self.customStyles="",self.styleComputations.sort(function(a,b){return null===a.priority?1:null===b.priority?-1:null===a.priority&&null===b.priority?0:a.priority-b.priority}).forEach(function(compInfo){var ret=compInfo.func.call(self);angular.isString(ret)&&(self.customStyles+="\n"+ret)})},Grid.prototype.minColumnsToRender=function(){var self=this,viewport=this.getViewportWidth(),min=0,totalWidth=0;return self.columns.forEach(function(col,i){if(totalWidth<viewport)totalWidth+=col.drawnWidth,min++;else{for(var currWidth=0,j=i;j>=i-min;j--)currWidth+=self.columns[j].drawnWidth;currWidth<viewport&&min++}}),min},Grid.prototype.getBodyHeight=function(){var bodyHeight=this.getViewportHeight();return bodyHeight},Grid.prototype.getViewportHeight=function(){var self=this,viewPortHeight=this.gridHeight-this.headerHeight-this.footerHeight,adjustment=self.getViewportAdjustment();return viewPortHeight+=adjustment.height},Grid.prototype.getViewportWidth=function(){var self=this,viewPortWidth=this.gridWidth,adjustment=self.getViewportAdjustment();return viewPortWidth+=adjustment.width},Grid.prototype.getHeaderViewportWidth=function(){var viewPortWidth=this.getViewportWidth();return viewPortWidth},Grid.prototype.addVerticalScrollSync=function(containerId,callBackFn){this.verticalScrollSyncCallBackFns[containerId]=callBackFn},Grid.prototype.addHorizontalScrollSync=function(containerId,callBackFn){this.horizontalScrollSyncCallBackFns[containerId]=callBackFn},Grid.prototype.scrollContainers=function(sourceContainerId,scrollEvent){if(scrollEvent.y){var verts=["body","left","right"];this.flagScrollingVertically(scrollEvent),"body"===sourceContainerId?verts=["left","right"]:"left"===sourceContainerId?verts=["body","right"]:"right"===sourceContainerId&&(verts=["body","left"]);for(var i=0;i<verts.length;i++){var id=verts[i];this.verticalScrollSyncCallBackFns[id]&&this.verticalScrollSyncCallBackFns[id](scrollEvent)}}if(scrollEvent.x){var horizs=["body","bodyheader","bodyfooter"];this.flagScrollingHorizontally(scrollEvent),"body"===sourceContainerId&&(horizs=["bodyheader","bodyfooter"]);for(var j=0;j<horizs.length;j++){var idh=horizs[j];this.horizontalScrollSyncCallBackFns[idh]&&this.horizontalScrollSyncCallBackFns[idh](scrollEvent)}}},Grid.prototype.registerViewportAdjuster=function(func){this.viewportAdjusters.push(func)},Grid.prototype.removeViewportAdjuster=function(func){var idx=this.viewportAdjusters.indexOf(func);"undefined"!=typeof idx&&void 0!==idx&&this.viewportAdjusters.splice(idx,1)},Grid.prototype.getViewportAdjustment=function(){var self=this,adjustment={height:0,width:0};return self.viewportAdjusters.forEach(function(func){adjustment=func.call(this,adjustment)}),adjustment},Grid.prototype.getVisibleRowCount=function(){return this.renderContainers.body.visibleRowCache.length},Grid.prototype.getVisibleRows=function(){return this.renderContainers.body.visibleRowCache},Grid.prototype.getVisibleColumnCount=function(){return this.renderContainers.body.visibleColumnCache.length},Grid.prototype.searchRows=function(renderableRows){return rowSearcher.search(this,renderableRows,this.columns)},Grid.prototype.sortByColumn=function(renderableRows){return rowSorter.sort(this,renderableRows,this.columns)},Grid.prototype.getCellValue=function(row,col){return"undefined"!=typeof row.entity["$$"+col.uid]?row.entity["$$"+col.uid].rendered:this.options.flatEntityAccess&&"undefined"!=typeof col.field?row.entity[col.field]:(col.cellValueGetterCache||(col.cellValueGetterCache=$parse(row.getEntityQualifiedColField(col))),col.cellValueGetterCache(row))},Grid.prototype.getCellDisplayValue=function(row,col){if(!col.cellDisplayGetterCache){var custom_filter=col.cellFilter?" | "+col.cellFilter:"";"undefined"!=typeof row.entity["$$"+col.uid]?col.cellDisplayGetterCache=$parse(row.entity["$$"+col.uid].rendered+custom_filter):this.options.flatEntityAccess&&"undefined"!=typeof col.field?col.cellDisplayGetterCache=$parse(row.entity[col.field]+custom_filter):col.cellDisplayGetterCache=$parse(row.getEntityQualifiedColField(col)+custom_filter)}return col.cellDisplayGetterCache(row)},Grid.prototype.getNextColumnSortPriority=function(){var self=this,p=0;return self.columns.forEach(function(col){col.sort&&col.sort.priority&&col.sort.priority>p&&(p=col.sort.priority)}),p+1},Grid.prototype.resetColumnSorting=function(excludeCol){var self=this;self.columns.forEach(function(col){col===excludeCol||col.suppressRemoveSort||(col.sort={})})},Grid.prototype.getColumnSorting=function(){var myCols,self=this,sortedCols=[];return myCols=self.columns.slice(0),myCols.sort(rowSorter.prioritySort).forEach(function(col){col.sort&&"undefined"!=typeof col.sort.direction&&col.sort.direction&&(col.sort.direction===uiGridConstants.ASC||col.sort.direction===uiGridConstants.DESC)&&sortedCols.push(col)}),sortedCols},Grid.prototype.sortColumn=function(column,directionOrAdd,add){var self=this,direction=null;if("undefined"==typeof column||!column)throw new Error("No column parameter provided");if("boolean"==typeof directionOrAdd?add=directionOrAdd:direction=directionOrAdd,add?column.sort.priority||(column.sort.priority=self.getNextColumnSortPriority()):(self.resetColumnSorting(column),column.sort.priority=0,column.sort.priority=self.getNextColumnSortPriority()),direction)column.sort.direction=direction;else{var i=column.sortDirectionCycle.indexOf(column.sort.direction?column.sort.direction:null);i=(i+1)%column.sortDirectionCycle.length,column.colDef&&column.suppressRemoveSort&&!column.sortDirectionCycle[i]&&(i=(i+1)%column.sortDirectionCycle.length),column.sortDirectionCycle[i]?column.sort.direction=column.sortDirectionCycle[i]:column.sort={}}return self.api.core.raise.sortChanged(self,self.getColumnSorting()),$q.when(column)},Grid.prototype.renderingComplete=function(){angular.isFunction(this.options.onRegisterApi)&&this.options.onRegisterApi(this.api),this.api.core.raise.renderingComplete(this.api)},Grid.prototype.createRowHashMap=function(){var self=this,hashMap=new RowHashMap;return hashMap.grid=self,hashMap},Grid.prototype.refresh=function(rowsAltered){var self=this,p1=self.processRowsProcessors(self.rows).then(function(renderableRows){self.setVisibleRows(renderableRows)}),p2=self.processColumnsProcessors(self.columns).then(function(renderableColumns){self.setVisibleColumns(renderableColumns)});return $q.all([p1,p2]).then(function(){self.redrawInPlace(rowsAltered),self.refreshCanvas(!0)})},Grid.prototype.refreshRows=function(){var self=this;return self.processRowsProcessors(self.rows).then(function(renderableRows){self.setVisibleRows(renderableRows),self.redrawInPlace(),self.refreshCanvas(!0)})},Grid.prototype.refreshCanvas=function(buildStyles){var self=this;buildStyles&&self.buildStyles();var p=$q.defer(),containerHeadersToRecalc=[];for(var containerId in self.renderContainers)if(self.renderContainers.hasOwnProperty(containerId)){var container=self.renderContainers[containerId];if(null===container.canvasWidth||isNaN(container.canvasWidth))continue;(container.header||container.headerCanvas)&&(container.explicitHeaderHeight=container.explicitHeaderHeight||null,container.explicitHeaderCanvasHeight=container.explicitHeaderCanvasHeight||null,containerHeadersToRecalc.push(container))}return containerHeadersToRecalc.length>0?(buildStyles&&self.buildStyles(),$timeout(function(){var i,container,rebuildStyles=!1,maxHeaderHeight=0,maxHeaderCanvasHeight=0,getHeight=function(oldVal,newVal){return oldVal!==newVal&&(rebuildStyles=!0),newVal};for(i=0;i<containerHeadersToRecalc.length;i++)if(container=containerHeadersToRecalc[i],null!==container.canvasWidth&&!isNaN(container.canvasWidth)){if(container.header){var headerHeight=container.headerHeight=getHeight(container.headerHeight,parseInt(gridUtil.outerElementHeight(container.header),10)),topBorder=gridUtil.getBorderSize(container.header,"top"),bottomBorder=gridUtil.getBorderSize(container.header,"bottom"),innerHeaderHeight=parseInt(headerHeight-topBorder-bottomBorder,10);innerHeaderHeight=innerHeaderHeight<0?0:innerHeaderHeight,container.innerHeaderHeight=innerHeaderHeight,!container.explicitHeaderHeight&&innerHeaderHeight>maxHeaderHeight&&(maxHeaderHeight=innerHeaderHeight)}if(container.headerCanvas){var headerCanvasHeight=container.headerCanvasHeight=getHeight(container.headerCanvasHeight,parseInt(gridUtil.outerElementHeight(container.headerCanvas),10));!container.explicitHeaderCanvasHeight&&headerCanvasHeight>maxHeaderCanvasHeight&&(maxHeaderCanvasHeight=headerCanvasHeight)}}for(i=0;i<containerHeadersToRecalc.length;i++)container=containerHeadersToRecalc[i],maxHeaderHeight>0&&"undefined"!=typeof container.headerHeight&&null!==container.headerHeight&&(container.explicitHeaderHeight||container.headerHeight<maxHeaderHeight)&&(container.explicitHeaderHeight=getHeight(container.explicitHeaderHeight,maxHeaderHeight)),maxHeaderCanvasHeight>0&&"undefined"!=typeof container.headerCanvasHeight&&null!==container.headerCanvasHeight&&(container.explicitHeaderCanvasHeight||container.headerCanvasHeight<maxHeaderCanvasHeight)&&(container.explicitHeaderCanvasHeight=getHeight(container.explicitHeaderCanvasHeight,maxHeaderCanvasHeight));buildStyles&&rebuildStyles&&self.buildStyles(),p.resolve()})):$timeout(function(){p.resolve()}),p.promise},Grid.prototype.redrawInPlace=function(rowsAdded){var self=this;for(var i in self.renderContainers){var container=self.renderContainers[i];rowsAdded?(container.adjustRows(container.prevScrollTop,null),container.adjustColumns(container.prevScrollLeft,null)):(container.adjustRows(null,container.prevScrolltopPercentage),container.adjustColumns(null,container.prevScrollleftPercentage))}},Grid.prototype.hasLeftContainerColumns=function(){return this.hasLeftContainer()&&this.renderContainers.left.renderedColumns.length>0},Grid.prototype.hasRightContainerColumns=function(){return this.hasRightContainer()&&this.renderContainers.right.renderedColumns.length>0},Grid.prototype.scrollToIfNecessary=function(gridRow,gridCol){var self=this,scrollEvent=new ScrollEvent(self,"uiGrid.scrollToIfNecessary"),visRowCache=self.renderContainers.body.visibleRowCache,visColCache=self.renderContainers.body.visibleColumnCache,topBound=self.renderContainers.body.prevScrollTop+self.headerHeight;topBound=topBound<0?0:topBound;var leftBound=self.renderContainers.body.prevScrollLeft,bottomBound=self.renderContainers.body.prevScrollTop+self.gridHeight-self.renderContainers.body.headerHeight-self.footerHeight-self.scrollbarWidth,rightBound=self.renderContainers.body.prevScrollLeft+Math.ceil(self.renderContainers.body.getViewportWidth());if(null!==gridRow){var seekRowIndex=visRowCache.indexOf(gridRow),scrollLength=self.renderContainers.body.getCanvasHeight()-self.renderContainers.body.getViewportHeight(),pixelsToSeeRow=(seekRowIndex+1)*self.options.rowHeight;pixelsToSeeRow=pixelsToSeeRow<0?0:pixelsToSeeRow;var scrollPixels,percentage;pixelsToSeeRow<topBound?(scrollPixels=self.renderContainers.body.prevScrollTop-(topBound-pixelsToSeeRow),percentage=scrollPixels/scrollLength,scrollEvent.y={percentage:percentage}):pixelsToSeeRow>bottomBound&&(scrollPixels=pixelsToSeeRow-bottomBound+self.renderContainers.body.prevScrollTop,percentage=scrollPixels/scrollLength,scrollEvent.y={percentage:percentage})}if(null!==gridCol){for(var seekColumnIndex=visColCache.indexOf(gridCol),horizScrollLength=self.renderContainers.body.getCanvasWidth()-self.renderContainers.body.getViewportWidth(),columnLeftEdge=0,i=0;i<seekColumnIndex;i++){var col=visColCache[i];columnLeftEdge+=col.drawnWidth}columnLeftEdge=columnLeftEdge<0?0:columnLeftEdge;var columnRightEdge=columnLeftEdge+gridCol.drawnWidth;columnRightEdge=columnRightEdge<0?0:columnRightEdge;var horizScrollPixels,horizPercentage;columnLeftEdge<leftBound?(horizScrollPixels=self.renderContainers.body.prevScrollLeft-(leftBound-columnLeftEdge),horizPercentage=horizScrollPixels/horizScrollLength,horizPercentage=horizPercentage>1?1:horizPercentage,scrollEvent.x={percentage:horizPercentage}):columnRightEdge>rightBound&&(horizScrollPixels=columnRightEdge-rightBound+self.renderContainers.body.prevScrollLeft,horizPercentage=horizScrollPixels/horizScrollLength,horizPercentage=horizPercentage>1?1:horizPercentage,scrollEvent.x={percentage:horizPercentage})}var deferred=$q.defer();if(scrollEvent.y||scrollEvent.x){scrollEvent.withDelay=!1,self.scrollContainers("",scrollEvent);var dereg=self.api.core.on.scrollEnd(null,function(){deferred.resolve(scrollEvent),dereg()})}else deferred.resolve();return deferred.promise},Grid.prototype.scrollTo=function(rowEntity,colDef){var gridRow=null,gridCol=null;return null!==rowEntity&&"undefined"!=typeof rowEntity&&(gridRow=this.getRow(rowEntity)),null!==colDef&&"undefined"!=typeof colDef&&(gridCol=this.getColumn(colDef.name?colDef.name:colDef.field)),this.scrollToIfNecessary(gridRow,gridCol)},Grid.prototype.clearAllFilters=function(refreshRows,clearConditions,clearFlags){if(void 0===refreshRows&&(refreshRows=!0),void 0===clearConditions&&(clearConditions=!1),void 0===clearFlags&&(clearFlags=!1),this.columns.forEach(function(column){column.filters.forEach(function(filter){filter.term=void 0,clearConditions&&(filter.condition=void 0),clearFlags&&(filter.flags=void 0)})}),refreshRows)return this.refreshRows()},RowHashMap.prototype={put:function(key,value){this[this.grid.options.rowIdentity(key)]=value},get:function(key){return this[this.grid.options.rowIdentity(key)]},remove:function(key){var value=this[key=this.grid.options.rowIdentity(key)];return delete this[key],value}},Grid}])}(),function(){angular.module("ui.grid").factory("GridApi",["$q","$rootScope","gridUtil","uiGridConstants","GridRow","uiGridGridMenuService",function($q,$rootScope,gridUtil,uiGridConstants,GridRow,uiGridGridMenuService){function registerEventWithAngular(eventId,handler,grid,_this){return $rootScope.$on(eventId,function(event){var args=Array.prototype.slice.call(arguments);args.splice(0,1),handler.apply(_this?_this:grid.api,args)})}var GridApi=function(grid){this.grid=grid,this.listeners=[],this.registerEvent("core","renderingComplete"),this.registerEvent("core","filterChanged"),this.registerMethod("core","setRowInvisible",GridRow.prototype.setRowInvisible),this.registerMethod("core","clearRowInvisible",GridRow.prototype.clearRowInvisible),this.registerMethod("core","getVisibleRows",this.grid.getVisibleRows),this.registerEvent("core","rowsVisibleChanged"),this.registerEvent("core","rowsRendered"),this.registerEvent("core","scrollBegin"),this.registerEvent("core","scrollEnd"),this.registerEvent("core","canvasHeightChanged")};return GridApi.prototype.suppressEvents=function(listenerFuncs,callBackFn){var self=this,listeners=angular.isArray(listenerFuncs)?listenerFuncs:[listenerFuncs],foundListeners=self.listeners.filter(function(listener){return listeners.some(function(l){return listener.handler===l})});foundListeners.forEach(function(l){l.dereg()}),callBackFn(),foundListeners.forEach(function(l){l.dereg=registerEventWithAngular(l.eventId,l.handler,self.grid,l._this)})},GridApi.prototype.registerEvent=function(featureName,eventName){var self=this;self[featureName]||(self[featureName]={});var feature=self[featureName];feature.on||(feature.on={},feature.raise={});var eventId=self.grid.id+featureName+eventName;feature.raise[eventName]=function(){$rootScope.$emit.apply($rootScope,[eventId].concat(Array.prototype.slice.call(arguments)))},feature.on[eventName]=function(scope,handler,_this){if(null!==scope&&"undefined"==typeof scope.$on)return void gridUtil.logError("asked to listen on "+featureName+".on."+eventName+" but scope wasn't passed in the input parameters.  It is legitimate to pass null, but you've passed something else, so you probably forgot to provide scope rather than did it deliberately, not registering");var deregAngularOn=registerEventWithAngular(eventId,handler,self.grid,_this),listener={handler:handler,dereg:deregAngularOn,eventId:eventId,scope:scope,_this:_this};self.listeners.push(listener);var removeListener=function(){listener.dereg();var index=self.listeners.indexOf(listener);self.listeners.splice(index,1)};return scope&&scope.$on("$destroy",function(){removeListener()}),removeListener}},GridApi.prototype.registerEventsFromObject=function(eventObjectMap){var self=this,features=[];angular.forEach(eventObjectMap,function(featProp,featPropName){var feature={name:featPropName,events:[]};angular.forEach(featProp,function(prop,propName){feature.events.push(propName)}),features.push(feature)}),features.forEach(function(feature){feature.events.forEach(function(event){self.registerEvent(feature.name,event)})})},GridApi.prototype.registerMethod=function(featureName,methodName,callBackFn,_this){this[featureName]||(this[featureName]={});var feature=this[featureName];feature[methodName]=gridUtil.createBoundedWrapper(_this||this.grid,callBackFn)},GridApi.prototype.registerMethodsFromObject=function(methodMap,_this){var self=this,features=[];angular.forEach(methodMap,function(featProp,featPropName){var feature={name:featPropName,methods:[]};angular.forEach(featProp,function(prop,propName){feature.methods.push({name:propName,fn:prop})}),features.push(feature)}),features.forEach(function(feature){feature.methods.forEach(function(method){self.registerMethod(feature.name,method.name,method.fn,_this)})})},GridApi}])}(),function(){angular.module("ui.grid").factory("GridColumn",["gridUtil","uiGridConstants","i18nService",function(gridUtil,uiGridConstants,i18nService){function GridColumn(colDef,uid,grid){var self=this;self.grid=grid,self.uid=uid,self.updateColumnDef(colDef,!0),GridColumn.prototype.hideColumn=function(){this.colDef.visible=!1},self.aggregationValue=void 0,self.updateAggregationValue=function(){if(!self.aggregationType)return void(self.aggregationValue=void 0);var result=0,visibleRows=self.grid.getVisibleRows(),cellValues=function(){var values=[];return visibleRows.forEach(function(row){var cellValue=self.grid.getCellValue(row,self),cellNumber=Number(cellValue);isNaN(cellNumber)||values.push(cellNumber)}),values};angular.isFunction(self.aggregationType)?self.aggregationValue=self.aggregationType(visibleRows,self):self.aggregationType===uiGridConstants.aggregationTypes.count?self.aggregationValue=self.grid.getVisibleRowCount():self.aggregationType===uiGridConstants.aggregationTypes.sum?(cellValues().forEach(function(value){result+=value}),self.aggregationValue=result):self.aggregationType===uiGridConstants.aggregationTypes.avg?(cellValues().forEach(function(value){result+=value}),result/=cellValues().length,self.aggregationValue=result):self.aggregationType===uiGridConstants.aggregationTypes.min?self.aggregationValue=Math.min.apply(null,cellValues()):self.aggregationType===uiGridConstants.aggregationTypes.max?self.aggregationValue=Math.max.apply(null,cellValues()):self.aggregationValue=" "},this.getAggregationValue=function(){return self.aggregationValue}}return GridColumn.prototype.setPropertyOrDefault=function(colDef,propName,defaultValue){var self=this;"undefined"!=typeof colDef[propName]&&colDef[propName]?self[propName]=colDef[propName]:"undefined"!=typeof self[propName]?self[propName]=self[propName]:self[propName]=defaultValue?defaultValue:{}},GridColumn.prototype.updateColumnDef=function(colDef,isNew){var self=this;if(self.colDef=colDef,void 0===colDef.name)throw new Error("colDef.name is required for column at index "+self.grid.options.columnDefs.indexOf(colDef));if(self.displayName=void 0===colDef.displayName?gridUtil.readableColumnName(colDef.name):colDef.displayName,!angular.isNumber(self.width)||!self.hasCustomWidth||colDef.allowCustomWidthOverride){var colDefWidth=colDef.width,parseErrorMsg="Cannot parse column width '"+colDefWidth+"' for column named '"+colDef.name+"'";if(self.hasCustomWidth=!1,angular.isString(colDefWidth)||angular.isNumber(colDefWidth))if(angular.isString(colDefWidth))if(gridUtil.endsWith(colDefWidth,"%")){var percentStr=colDefWidth.replace(/%/g,""),percent=parseInt(percentStr,10);if(isNaN(percent))throw new Error(parseErrorMsg);self.width=colDefWidth}else if(colDefWidth.match(/^(\d+)$/))self.width=parseInt(colDefWidth.match(/^(\d+)$/)[1],10);else{if(!colDefWidth.match(/^\*+$/))throw new Error(parseErrorMsg);self.width=colDefWidth}else self.width=colDefWidth;else self.width="*"}["minWidth","maxWidth"].forEach(function(name){var minOrMaxWidth=colDef[name],parseErrorMsg="Cannot parse column "+name+" '"+minOrMaxWidth+"' for column named '"+colDef.name+"'";if(angular.isString(minOrMaxWidth)||angular.isNumber(minOrMaxWidth))if(angular.isString(minOrMaxWidth)){if(!minOrMaxWidth.match(/^(\d+)$/))throw new Error(parseErrorMsg);self[name]=parseInt(minOrMaxWidth.match(/^(\d+)$/)[1],10)}else self[name]=minOrMaxWidth;else self[name]="minWidth"===name?30:9e3}),self.field=void 0===colDef.field?colDef.name:colDef.field,"string"!=typeof self.field&&gridUtil.logError("Field is not a string, this is likely to break the code, Field is: "+self.field),self.name=colDef.name,self.displayName=void 0===colDef.displayName?gridUtil.readableColumnName(colDef.name):colDef.displayName,self.aggregationType=angular.isDefined(colDef.aggregationType)?colDef.aggregationType:null,self.footerCellTemplate=angular.isDefined(colDef.footerCellTemplate)?colDef.footerCellTemplate:null,"undefined"==typeof colDef.cellTooltip||colDef.cellTooltip===!1?self.cellTooltip=!1:colDef.cellTooltip===!0?self.cellTooltip=function(row,col){return self.grid.getCellValue(row,col)}:"function"==typeof colDef.cellTooltip?self.cellTooltip=colDef.cellTooltip:self.cellTooltip=function(row,col){return col.colDef.cellTooltip},"undefined"==typeof colDef.headerTooltip||colDef.headerTooltip===!1?self.headerTooltip=!1:colDef.headerTooltip===!0?self.headerTooltip=function(col){return col.displayName}:"function"==typeof colDef.headerTooltip?self.headerTooltip=colDef.headerTooltip:self.headerTooltip=function(col){return col.colDef.headerTooltip},self.footerCellClass=colDef.footerCellClass,self.cellClass=colDef.cellClass,self.headerCellClass=colDef.headerCellClass,self.cellFilter=colDef.cellFilter?colDef.cellFilter:"",self.sortCellFiltered=!!colDef.sortCellFiltered,self.filterCellFiltered=!!colDef.filterCellFiltered,self.headerCellFilter=colDef.headerCellFilter?colDef.headerCellFilter:"",self.footerCellFilter=colDef.footerCellFilter?colDef.footerCellFilter:"",
self.visible=gridUtil.isNullOrUndefined(colDef.visible)||colDef.visible,self.headerClass=colDef.headerClass,self.enableSorting="undefined"==typeof colDef.enableSorting||colDef.enableSorting,self.sortingAlgorithm=colDef.sortingAlgorithm,self.sortDirectionCycle="undefined"!=typeof colDef.sortDirectionCycle?colDef.sortDirectionCycle:[null,uiGridConstants.ASC,uiGridConstants.DESC],"undefined"==typeof self.suppressRemoveSort&&(self.suppressRemoveSort="undefined"!=typeof colDef.suppressRemoveSort&&colDef.suppressRemoveSort),self.enableFiltering="undefined"==typeof colDef.enableFiltering||colDef.enableFiltering,self.setPropertyOrDefault(colDef,"menuItems",[]),isNew&&self.setPropertyOrDefault(colDef,"sort");var defaultFilters=[];colDef.filter?defaultFilters.push(colDef.filter):colDef.filters?defaultFilters=colDef.filters:defaultFilters.push({}),isNew?(self.setPropertyOrDefault(colDef,"filter"),self.setPropertyOrDefault(colDef,"filters",defaultFilters)):self.filters.length===defaultFilters.length&&self.filters.forEach(function(filter,index){"undefined"!=typeof defaultFilters[index].placeholder&&(filter.placeholder=defaultFilters[index].placeholder),"undefined"!=typeof defaultFilters[index].ariaLabel&&(filter.ariaLabel=defaultFilters[index].ariaLabel),"undefined"!=typeof defaultFilters[index].flags&&(filter.flags=defaultFilters[index].flags),"undefined"!=typeof defaultFilters[index].type&&(filter.type=defaultFilters[index].type),"undefined"!=typeof defaultFilters[index].selectOptions&&(filter.selectOptions=defaultFilters[index].selectOptions)}),GridColumn.prototype.unsort=function(){this.sort={},self.grid.api.core.raise.sortChanged(self.grid,self.grid.getColumnSorting())}},GridColumn.prototype.getColClass=function(prefixDot){var cls=uiGridConstants.COL_CLASS_PREFIX+this.uid;return prefixDot?"."+cls:cls},GridColumn.prototype.isPinnedLeft=function(){return"left"===this.renderContainer},GridColumn.prototype.isPinnedRight=function(){return"right"===this.renderContainer},GridColumn.prototype.getColClassDefinition=function(){return" .grid"+this.grid.id+" "+this.getColClass(!0)+" { min-width: "+this.drawnWidth+"px; max-width: "+this.drawnWidth+"px; }"},GridColumn.prototype.getRenderContainer=function(){var self=this,containerId=self.renderContainer;return null!==containerId&&""!==containerId&&void 0!==containerId||(containerId="body"),self.grid.renderContainers[containerId]},GridColumn.prototype.showColumn=function(){this.colDef.visible=!0},GridColumn.prototype.getAggregationText=function(){var self=this;if(self.colDef.aggregationHideLabel)return"";if(self.colDef.aggregationLabel)return self.colDef.aggregationLabel;switch(self.colDef.aggregationType){case uiGridConstants.aggregationTypes.count:return i18nService.getSafeText("aggregation.count");case uiGridConstants.aggregationTypes.sum:return i18nService.getSafeText("aggregation.sum");case uiGridConstants.aggregationTypes.avg:return i18nService.getSafeText("aggregation.avg");case uiGridConstants.aggregationTypes.min:return i18nService.getSafeText("aggregation.min");case uiGridConstants.aggregationTypes.max:return i18nService.getSafeText("aggregation.max");default:return""}},GridColumn.prototype.getCellTemplate=function(){var self=this;return self.cellTemplatePromise},GridColumn.prototype.getCompiledElementFn=function(){var self=this;return self.compiledElementFnDefer.promise},GridColumn}])}(),function(){angular.module("ui.grid").factory("GridOptions",["gridUtil","uiGridConstants",function(gridUtil,uiGridConstants){return{initialize:function(baseOptions){return baseOptions.onRegisterApi=baseOptions.onRegisterApi||angular.noop(),baseOptions.data=baseOptions.data||[],baseOptions.columnDefs=baseOptions.columnDefs||[],baseOptions.excludeProperties=baseOptions.excludeProperties||["$$hashKey"],baseOptions.enableRowHashing=baseOptions.enableRowHashing!==!1,baseOptions.rowIdentity=baseOptions.rowIdentity||function(row){return gridUtil.hashKey(row)},baseOptions.getRowIdentity=baseOptions.getRowIdentity||function(row){return row.$$hashKey},baseOptions.flatEntityAccess=baseOptions.flatEntityAccess===!0,baseOptions.showHeader="undefined"==typeof baseOptions.showHeader||baseOptions.showHeader,baseOptions.showHeader?baseOptions.headerRowHeight="undefined"!=typeof baseOptions.headerRowHeight?baseOptions.headerRowHeight:30:baseOptions.headerRowHeight=0,baseOptions.rowHeight=baseOptions.rowHeight||30,baseOptions.minRowsToShow="undefined"!=typeof baseOptions.minRowsToShow?baseOptions.minRowsToShow:10,baseOptions.showGridFooter=baseOptions.showGridFooter===!0,baseOptions.showColumnFooter=baseOptions.showColumnFooter===!0,baseOptions.columnFooterHeight="undefined"!=typeof baseOptions.columnFooterHeight?baseOptions.columnFooterHeight:30,baseOptions.gridFooterHeight="undefined"!=typeof baseOptions.gridFooterHeight?baseOptions.gridFooterHeight:30,baseOptions.columnWidth="undefined"!=typeof baseOptions.columnWidth?baseOptions.columnWidth:50,baseOptions.maxVisibleColumnCount="undefined"!=typeof baseOptions.maxVisibleColumnCount?baseOptions.maxVisibleColumnCount:200,baseOptions.virtualizationThreshold="undefined"!=typeof baseOptions.virtualizationThreshold?baseOptions.virtualizationThreshold:20,baseOptions.columnVirtualizationThreshold="undefined"!=typeof baseOptions.columnVirtualizationThreshold?baseOptions.columnVirtualizationThreshold:10,baseOptions.excessRows="undefined"!=typeof baseOptions.excessRows?baseOptions.excessRows:4,baseOptions.scrollThreshold="undefined"!=typeof baseOptions.scrollThreshold?baseOptions.scrollThreshold:4,baseOptions.excessColumns="undefined"!=typeof baseOptions.excessColumns?baseOptions.excessColumns:4,baseOptions.horizontalScrollThreshold="undefined"!=typeof baseOptions.horizontalScrollThreshold?baseOptions.horizontalScrollThreshold:2,baseOptions.aggregationCalcThrottle="undefined"!=typeof baseOptions.aggregationCalcThrottle?baseOptions.aggregationCalcThrottle:500,baseOptions.wheelScrollThrottle="undefined"!=typeof baseOptions.wheelScrollThrottle?baseOptions.wheelScrollThrottle:70,baseOptions.scrollDebounce="undefined"!=typeof baseOptions.scrollDebounce?baseOptions.scrollDebounce:300,baseOptions.enableSorting=baseOptions.enableSorting!==!1,baseOptions.enableFiltering=baseOptions.enableFiltering===!0,baseOptions.enableColumnMenus=baseOptions.enableColumnMenus!==!1,baseOptions.enableVerticalScrollbar="undefined"!=typeof baseOptions.enableVerticalScrollbar?baseOptions.enableVerticalScrollbar:uiGridConstants.scrollbars.ALWAYS,baseOptions.enableHorizontalScrollbar="undefined"!=typeof baseOptions.enableHorizontalScrollbar?baseOptions.enableHorizontalScrollbar:uiGridConstants.scrollbars.ALWAYS,baseOptions.enableMinHeightCheck=baseOptions.enableMinHeightCheck!==!1,baseOptions.minimumColumnSize="undefined"!=typeof baseOptions.minimumColumnSize?baseOptions.minimumColumnSize:10,baseOptions.rowEquality=baseOptions.rowEquality||function(entityA,entityB){return entityA===entityB},baseOptions.headerTemplate=baseOptions.headerTemplate||null,baseOptions.footerTemplate=baseOptions.footerTemplate||"ui-grid/ui-grid-footer",baseOptions.gridFooterTemplate=baseOptions.gridFooterTemplate||"ui-grid/ui-grid-grid-footer",baseOptions.rowTemplate=baseOptions.rowTemplate||"ui-grid/ui-grid-row",baseOptions.appScopeProvider=baseOptions.appScopeProvider||null,baseOptions}}}])}(),function(){angular.module("ui.grid").factory("GridRenderContainer",["gridUtil","uiGridConstants",function(gridUtil,uiGridConstants){function GridRenderContainer(name,grid,options){var self=this;self.name=name,self.grid=grid,self.visibleRowCache=[],self.visibleColumnCache=[],self.renderedRows=[],self.renderedColumns=[],self.prevScrollTop=0,self.prevScrolltopPercentage=0,self.prevRowScrollIndex=0,self.prevScrollLeft=0,self.prevScrollleftPercentage=0,self.prevColumnScrollIndex=0,self.columnStyles="",self.viewportAdjusters=[],self.hasHScrollbar=!1,self.hasVScrollbar=!1,self.canvasHeightShouldUpdate=!0,self.$$canvasHeight=0,options&&angular.isObject(options)&&angular.extend(self,options),grid.registerStyleComputation({priority:5,func:function(){return self.updateColumnWidths(),self.columnStyles}})}return GridRenderContainer.prototype.reset=function(){this.visibleColumnCache.length=0,this.visibleRowCache.length=0,this.renderedRows.length=0,this.renderedColumns.length=0},GridRenderContainer.prototype.containsColumn=function(col){return this.visibleColumnCache.indexOf(col)!==-1},GridRenderContainer.prototype.minRowsToRender=function(){for(var self=this,minRows=0,rowAddedHeight=0,viewPortHeight=self.getViewportHeight(),i=self.visibleRowCache.length-1;rowAddedHeight<viewPortHeight&&i>=0;i--)rowAddedHeight+=self.visibleRowCache[i].height,minRows++;return minRows},GridRenderContainer.prototype.minColumnsToRender=function(){for(var self=this,viewportWidth=this.getViewportWidth(),min=0,totalWidth=0,i=0;i<self.visibleColumnCache.length;i++){var col=self.visibleColumnCache[i];if(totalWidth<viewportWidth)totalWidth+=col.drawnWidth?col.drawnWidth:0,min++;else{for(var currWidth=0,j=i;j>=i-min;j--)currWidth+=self.visibleColumnCache[j].drawnWidth?self.visibleColumnCache[j].drawnWidth:0;currWidth<viewportWidth&&min++}}return min},GridRenderContainer.prototype.getVisibleRowCount=function(){return this.visibleRowCache.length},GridRenderContainer.prototype.registerViewportAdjuster=function(func){this.viewportAdjusters.push(func)},GridRenderContainer.prototype.removeViewportAdjuster=function(func){var idx=this.viewportAdjusters.indexOf(func);idx>-1&&this.viewportAdjusters.splice(idx,1)},GridRenderContainer.prototype.getViewportAdjustment=function(){var self=this,adjustment={height:0,width:0};return self.viewportAdjusters.forEach(function(func){adjustment=func.call(this,adjustment)}),adjustment},GridRenderContainer.prototype.getMargin=function(side){var self=this,amount=0;return self.viewportAdjusters.forEach(function(func){var adjustment=func.call(this,{height:0,width:0});adjustment.side&&adjustment.side===side&&(amount+=adjustment.width*-1)}),amount},GridRenderContainer.prototype.getViewportHeight=function(){var self=this,headerHeight=self.headerHeight?self.headerHeight:self.grid.headerHeight,viewPortHeight=self.grid.gridHeight-headerHeight-self.grid.footerHeight,adjustment=self.getViewportAdjustment();return viewPortHeight+=adjustment.height},GridRenderContainer.prototype.getViewportWidth=function(){var self=this,viewportWidth=self.grid.gridWidth,adjustment=self.getViewportAdjustment();return viewportWidth+=adjustment.width},GridRenderContainer.prototype.getHeaderViewportWidth=function(){var viewportWidth=this.getViewportWidth();return viewportWidth},GridRenderContainer.prototype.getCanvasHeight=function(){var self=this;if(!self.canvasHeightShouldUpdate)return self.$$canvasHeight;var oldCanvasHeight=self.$$canvasHeight;return self.$$canvasHeight=0,self.visibleRowCache.forEach(function(row){self.$$canvasHeight+=row.height}),self.canvasHeightShouldUpdate=!1,self.grid.api.core.raise.canvasHeightChanged(oldCanvasHeight,self.$$canvasHeight),self.$$canvasHeight},GridRenderContainer.prototype.getVerticalScrollLength=function(){return this.getCanvasHeight()-this.getViewportHeight()+this.grid.scrollbarHeight},GridRenderContainer.prototype.getCanvasWidth=function(){var self=this,ret=self.canvasWidth;return ret},GridRenderContainer.prototype.setRenderedRows=function(newRows){this.renderedRows.length=newRows.length;for(var i=0;i<newRows.length;i++)this.renderedRows[i]=newRows[i]},GridRenderContainer.prototype.setRenderedColumns=function(newColumns){this.renderedColumns.length=newColumns.length;for(var i=0;i<newColumns.length;i++)this.renderedColumns[i]=newColumns[i];this.updateColumnOffset()},GridRenderContainer.prototype.updateColumnOffset=function(){for(var hiddenColumnsWidth=0,i=0;i<this.currentFirstColumn;i++)hiddenColumnsWidth+=this.visibleColumnCache[i].drawnWidth;this.columnOffset=hiddenColumnsWidth},GridRenderContainer.prototype.scrollVertical=function(newScrollTop){var vertScrollPercentage=-1;if(newScrollTop!==this.prevScrollTop){var yDiff=newScrollTop-this.prevScrollTop;yDiff>0&&(this.grid.scrollDirection=uiGridConstants.scrollDirection.DOWN),yDiff<0&&(this.grid.scrollDirection=uiGridConstants.scrollDirection.UP);var vertScrollLength=this.getVerticalScrollLength();return vertScrollPercentage=newScrollTop/vertScrollLength,vertScrollPercentage>1&&(vertScrollPercentage=1),vertScrollPercentage<0&&(vertScrollPercentage=0),this.adjustScrollVertical(newScrollTop,vertScrollPercentage),vertScrollPercentage}},GridRenderContainer.prototype.scrollHorizontal=function(newScrollLeft){var horizScrollPercentage=-1;if(newScrollLeft!==this.prevScrollLeft){var xDiff=newScrollLeft-this.prevScrollLeft;xDiff>0&&(this.grid.scrollDirection=uiGridConstants.scrollDirection.RIGHT),xDiff<0&&(this.grid.scrollDirection=uiGridConstants.scrollDirection.LEFT);var horizScrollLength=this.canvasWidth-this.getViewportWidth();return horizScrollPercentage=0!==horizScrollLength?newScrollLeft/horizScrollLength:0,this.adjustScrollHorizontal(newScrollLeft,horizScrollPercentage),horizScrollPercentage}},GridRenderContainer.prototype.adjustScrollVertical=function(scrollTop,scrollPercentage,force){(this.prevScrollTop!==scrollTop||force)&&("undefined"!=typeof scrollTop&&void 0!==scrollTop&&null!==scrollTop||(scrollTop=(this.getCanvasHeight()-this.getViewportHeight())*scrollPercentage),this.adjustRows(scrollTop,scrollPercentage,!1),this.prevScrollTop=scrollTop,this.prevScrolltopPercentage=scrollPercentage,this.grid.queueRefresh())},GridRenderContainer.prototype.adjustScrollHorizontal=function(scrollLeft,scrollPercentage,force){(this.prevScrollLeft!==scrollLeft||force)&&("undefined"!=typeof scrollLeft&&void 0!==scrollLeft&&null!==scrollLeft||(scrollLeft=(this.getCanvasWidth()-this.getViewportWidth())*scrollPercentage),this.adjustColumns(scrollLeft,scrollPercentage),this.prevScrollLeft=scrollLeft,this.prevScrollleftPercentage=scrollPercentage,this.grid.queueRefresh())},GridRenderContainer.prototype.adjustRows=function(scrollTop,scrollPercentage,postDataLoaded){var self=this,minRows=self.minRowsToRender(),rowCache=self.visibleRowCache,maxRowIndex=rowCache.length-minRows;"undefined"!=typeof scrollPercentage&&null!==scrollPercentage||!scrollTop||(scrollPercentage=scrollTop/self.getVerticalScrollLength());var rowIndex=Math.ceil(Math.min(maxRowIndex,maxRowIndex*scrollPercentage));rowIndex>maxRowIndex&&(rowIndex=maxRowIndex);var newRange=[];if(rowCache.length>self.grid.options.virtualizationThreshold){if("undefined"!=typeof scrollTop&&null!==scrollTop){if(!self.grid.suppressParentScrollDown&&self.prevScrollTop<scrollTop&&rowIndex<self.prevRowScrollIndex+self.grid.options.scrollThreshold&&rowIndex<maxRowIndex)return;if(!self.grid.suppressParentScrollUp&&self.prevScrollTop>scrollTop&&rowIndex>self.prevRowScrollIndex-self.grid.options.scrollThreshold&&rowIndex<maxRowIndex)return}var rangeStart={},rangeEnd={};rangeStart=Math.max(0,rowIndex-self.grid.options.excessRows),rangeEnd=Math.min(rowCache.length,rowIndex+minRows+self.grid.options.excessRows),newRange=[rangeStart,rangeEnd]}else{var maxLen=self.visibleRowCache.length;newRange=[0,Math.max(maxLen,minRows+self.grid.options.excessRows)]}self.updateViewableRowRange(newRange),self.prevRowScrollIndex=rowIndex},GridRenderContainer.prototype.adjustColumns=function(scrollLeft,scrollPercentage){var self=this,minCols=self.minColumnsToRender(),columnCache=self.visibleColumnCache,maxColumnIndex=columnCache.length-minCols;if(("undefined"==typeof scrollPercentage||null===scrollPercentage)&&scrollLeft){var horizScrollLength=self.getCanvasWidth()-self.getViewportWidth();scrollPercentage=scrollLeft/horizScrollLength}var colIndex=Math.ceil(Math.min(maxColumnIndex,maxColumnIndex*scrollPercentage));colIndex>maxColumnIndex&&(colIndex=maxColumnIndex);var newRange=[];if(columnCache.length>self.grid.options.columnVirtualizationThreshold&&self.getCanvasWidth()>self.getViewportWidth()){var rangeStart=Math.max(0,colIndex-self.grid.options.excessColumns),rangeEnd=Math.min(columnCache.length,colIndex+minCols+self.grid.options.excessColumns);newRange=[rangeStart,rangeEnd]}else{var maxLen=self.visibleColumnCache.length;newRange=[0,Math.max(maxLen,minCols+self.grid.options.excessColumns)]}self.updateViewableColumnRange(newRange),self.prevColumnScrollIndex=colIndex},GridRenderContainer.prototype.updateViewableRowRange=function(renderedRange){var rowArr=this.visibleRowCache.slice(renderedRange[0],renderedRange[1]);this.currentTopRow=renderedRange[0],this.setRenderedRows(rowArr)},GridRenderContainer.prototype.updateViewableColumnRange=function(renderedRange){var columnArr=this.visibleColumnCache.slice(renderedRange[0],renderedRange[1]);this.currentFirstColumn=renderedRange[0],this.setRenderedColumns(columnArr)},GridRenderContainer.prototype.headerCellWrapperStyle=function(){var self=this;if(0!==self.currentFirstColumn){var offset=self.columnOffset;return self.grid.isRTL()?{"margin-right":offset+"px"}:{"margin-left":offset+"px"}}return null},GridRenderContainer.prototype.updateColumnWidths=function(){var self=this,asterisksArray=[],asteriskNum=0,usedWidthSum=0,ret="",availableWidth=self.grid.getViewportWidth()-self.grid.scrollbarWidth,columnCache=[];angular.forEach(self.grid.renderContainers,function(container,name){columnCache=columnCache.concat(container.visibleColumnCache)}),columnCache.forEach(function(column,i){var width=0;column.visible&&(angular.isNumber(column.width)?(width=parseInt(column.width,10),usedWidthSum+=width,column.drawnWidth=width):gridUtil.endsWith(column.width,"%")?(width=parseInt(parseInt(column.width.replace(/%/g,""),10)/100*availableWidth),width>column.maxWidth&&(width=column.maxWidth),width<column.minWidth&&(width=column.minWidth),usedWidthSum+=width,column.drawnWidth=width):angular.isString(column.width)&&column.width.indexOf("*")!==-1&&(asteriskNum+=column.width.length,asterisksArray.push(column)))});var remainingWidth=availableWidth-usedWidthSum;if(asterisksArray.length>0){var asteriskVal=remainingWidth/asteriskNum;asterisksArray.forEach(function(column){var width=parseInt(column.width.length*asteriskVal,10);width>column.maxWidth&&(width=column.maxWidth),width<column.minWidth&&(width=column.minWidth),usedWidthSum+=width,column.drawnWidth=width})}for(var processColumnUpwards=function(column){column.drawnWidth<column.maxWidth&&leftoverWidth>0&&(column.drawnWidth++,usedWidthSum++,leftoverWidth--,columnsToChange=!0)},leftoverWidth=availableWidth-usedWidthSum,columnsToChange=!0;leftoverWidth>0&&columnsToChange;)columnsToChange=!1,asterisksArray.forEach(processColumnUpwards);var processColumnDownwards=function(column){column.drawnWidth>column.minWidth&&excessWidth>0&&(column.drawnWidth--,usedWidthSum--,excessWidth--,columnsToChange=!0)},excessWidth=usedWidthSum-availableWidth;for(columnsToChange=!0;excessWidth>0&&columnsToChange;)columnsToChange=!1,asterisksArray.forEach(processColumnDownwards);var canvasWidth=0;self.visibleColumnCache.forEach(function(column){column.visible&&(canvasWidth+=column.drawnWidth)}),columnCache.forEach(function(column){ret+=column.getColClassDefinition()}),self.canvasWidth=canvasWidth,this.columnStyles=ret},GridRenderContainer.prototype.needsHScrollbarPlaceholder=function(){return this.grid.options.enableHorizontalScrollbar&&!this.hasHScrollbar&&!this.grid.disableScrolling},GridRenderContainer.prototype.getViewportStyle=function(){var self=this,styles={};return self.hasHScrollbar=!1,self.hasVScrollbar=!1,self.grid.disableScrolling?(styles["overflow-x"]="hidden",styles["overflow-y"]="hidden",styles):("body"===self.name?(self.hasHScrollbar=self.grid.options.enableHorizontalScrollbar!==uiGridConstants.scrollbars.NEVER,self.grid.isRTL()?self.grid.hasLeftContainerColumns()||(self.hasVScrollbar=self.grid.options.enableVerticalScrollbar!==uiGridConstants.scrollbars.NEVER):self.grid.hasRightContainerColumns()||(self.hasVScrollbar=self.grid.options.enableVerticalScrollbar!==uiGridConstants.scrollbars.NEVER)):"left"===self.name?self.hasVScrollbar=!!self.grid.isRTL()&&self.grid.options.enableVerticalScrollbar!==uiGridConstants.scrollbars.NEVER:self.hasVScrollbar=!self.grid.isRTL()&&self.grid.options.enableVerticalScrollbar!==uiGridConstants.scrollbars.NEVER,styles["overflow-x"]=self.hasHScrollbar?"scroll":"hidden",styles["overflow-y"]=self.hasVScrollbar?"scroll":"hidden",styles)},GridRenderContainer}])}(),function(){angular.module("ui.grid").factory("GridRow",["gridUtil",function(gridUtil){function GridRow(entity,index,grid){this.grid=grid,this.entity=entity,this.uid=gridUtil.nextUid(),this.visible=!0,this.$$height=grid.options.rowHeight}return Object.defineProperty(GridRow.prototype,"height",{get:function(){return this.$$height},set:function(height){height!==this.$$height&&(this.grid.updateCanvasHeight(),this.$$height=height)}}),GridRow.prototype.getQualifiedColField=function(col){return"row."+this.getEntityQualifiedColField(col)},GridRow.prototype.getEntityQualifiedColField=function(col){return gridUtil.preEval("entity."+col.field)},GridRow.prototype.setRowInvisible=function(row){row&&row.setThisRowInvisible&&row.setThisRowInvisible("user")},GridRow.prototype.clearRowInvisible=function(row){row&&row.clearThisRowInvisible&&row.clearThisRowInvisible("user")},GridRow.prototype.setThisRowInvisible=function(reason,fromRowsProcessor){this.invisibleReason||(this.invisibleReason={}),this.invisibleReason[reason]=!0,this.evaluateRowVisibility(fromRowsProcessor)},GridRow.prototype.clearThisRowInvisible=function(reason,fromRowsProcessor){"undefined"!=typeof this.invisibleReason&&delete this.invisibleReason[reason],this.evaluateRowVisibility(fromRowsProcessor)},GridRow.prototype.evaluateRowVisibility=function(fromRowProcessor){var newVisibility=!0;"undefined"!=typeof this.invisibleReason&&angular.forEach(this.invisibleReason,function(value,key){value&&(newVisibility=!1)}),"undefined"!=typeof this.visible&&this.visible===newVisibility||(this.visible=newVisibility,fromRowProcessor||(this.grid.queueGridRefresh(),this.grid.api.core.raise.rowsVisibleChanged(this)))},GridRow}])}(),function(){"use strict";angular.module("ui.grid").factory("GridRowColumn",["$parse","$filter",function($parse,$filter){var GridRowColumn=function GridRowColumn(row,col){if(!(this instanceof GridRowColumn))throw"Using GridRowColumn as a function insead of as a constructor. Must be called with `new` keyword";this.row=row,this.col=col};return GridRowColumn.prototype.getIntersectionValueRaw=function(){var getter=$parse(this.row.getEntityQualifiedColField(this.col)),context=this.row;return getter(context)},GridRowColumn.prototype.getIntersectionValueFiltered=function(){var value=this.getIntersectionValueRaw();if(this.col.cellFilter&&""!==this.col.cellFilter){var getFilterIfExists=function(filterName){try{return $filter(filterName)}catch(e){return null}},filter=getFilterIfExists(this.col.cellFilter);if(filter)value=filter(value);else{var matches,re=/([^:]*):([^:]*):?([\s\S]+)?/;null!==(matches=re.exec(this.col.cellFilter))&&(value=$filter(matches[1])(value,matches[2],matches[3]))}}return value},GridRowColumn}])}(),function(){angular.module("ui.grid").factory("ScrollEvent",["gridUtil",function(gridUtil){function ScrollEvent(grid,sourceRowContainer,sourceColContainer,source){var self=this;if(!grid)throw new Error("grid argument is required");self.grid=grid,self.source=source,self.withDelay=!0,self.sourceRowContainer=sourceRowContainer,self.sourceColContainer=sourceColContainer,self.newScrollLeft=null,self.newScrollTop=null,self.x=null,self.y=null,self.verticalScrollLength=-9999999,self.horizontalScrollLength=-999999,self.fireThrottledScrollingEvent=gridUtil.throttle(function(sourceContainerId){self.grid.scrollContainers(sourceContainerId,self)},self.grid.options.wheelScrollThrottle,{trailing:!0})}return ScrollEvent.prototype.getNewScrollLeft=function(colContainer,viewport){var self=this;if(!self.newScrollLeft){var scrollXPercentage,scrollWidth=colContainer.getCanvasWidth()-colContainer.getViewportWidth(),oldScrollLeft=gridUtil.normalizeScrollLeft(viewport,self.grid);if("undefined"!=typeof self.x.percentage&&void 0!==self.x.percentage)scrollXPercentage=self.x.percentage;else{if("undefined"==typeof self.x.pixels||void 0===self.x.pixels)throw new Error("No percentage or pixel value provided for scroll event X axis");scrollXPercentage=self.x.percentage=(oldScrollLeft+self.x.pixels)/scrollWidth}return Math.max(0,scrollXPercentage*scrollWidth)}return self.newScrollLeft},ScrollEvent.prototype.getNewScrollTop=function(rowContainer,viewport){var self=this;if(!self.newScrollTop){var scrollYPercentage,scrollLength=rowContainer.getVerticalScrollLength(),oldScrollTop=viewport[0].scrollTop;if("undefined"!=typeof self.y.percentage&&void 0!==self.y.percentage)scrollYPercentage=self.y.percentage;else{if("undefined"==typeof self.y.pixels||void 0===self.y.pixels)throw new Error("No percentage or pixel value provided for scroll event Y axis");scrollYPercentage=self.y.percentage=(oldScrollTop+self.y.pixels)/scrollLength}return Math.max(0,scrollYPercentage*scrollLength)}return self.newScrollTop},ScrollEvent.prototype.atTop=function(scrollTop){return this.y&&(0===this.y.percentage||this.verticalScrollLength<0)&&0===scrollTop},ScrollEvent.prototype.atBottom=function(scrollTop){return this.y&&(1===this.y.percentage||0===this.verticalScrollLength)&&scrollTop>0},ScrollEvent.prototype.atLeft=function(scrollLeft){return this.x&&(0===this.x.percentage||this.horizontalScrollLength<0)&&0===scrollLeft},ScrollEvent.prototype.atRight=function(scrollLeft){return this.x&&(1===this.x.percentage||0===this.horizontalScrollLength)&&scrollLeft>0},ScrollEvent.Sources={ViewPortScroll:"ViewPortScroll",RenderContainerMouseWheel:"RenderContainerMouseWheel",RenderContainerTouchMove:"RenderContainerTouchMove",Other:99},ScrollEvent}])}(),function(){"use strict";angular.module("ui.grid").service("gridClassFactory",["gridUtil","$q","$compile","$templateCache","uiGridConstants","Grid","GridColumn","GridRow",function(gridUtil,$q,$compile,$templateCache,uiGridConstants,Grid,GridColumn,GridRow){var service={createGrid:function(options){options="undefined"!=typeof options?options:{},options.id=gridUtil.newId();var grid=new Grid(options);if(grid.options.rowTemplate){var rowTemplateFnPromise=$q.defer();grid.getRowTemplateFn=rowTemplateFnPromise.promise,gridUtil.getTemplate(grid.options.rowTemplate).then(function(template){var rowTemplateFn=$compile(template);rowTemplateFnPromise.resolve(rowTemplateFn)},function(res){throw new Error("Couldn't fetch/use row template '"+grid.options.rowTemplate+"'")})}return grid.registerColumnBuilder(service.defaultColumnBuilder),grid.registerRowBuilder(service.rowTemplateAssigner),grid.registerRowsProcessor(function(rows){return rows.forEach(function(row){row.evaluateRowVisibility(!0)},50),rows}),grid.registerColumnsProcessor(function(columns){return columns.forEach(function(column){column.visible=!0}),columns},50),grid.registerColumnsProcessor(function(renderableColumns){return renderableColumns.forEach(function(column){column.colDef.visible===!1&&(column.visible=!1)}),renderableColumns},50),grid.registerRowsProcessor(grid.searchRows,100),grid.options.externalSort&&angular.isFunction(grid.options.externalSort)?grid.registerRowsProcessor(grid.options.externalSort,200):grid.registerRowsProcessor(grid.sortByColumn,200),grid},defaultColumnBuilder:function(colDef,col,gridOptions){var templateGetPromises=[],processTemplate=function(templateType,providedType,defaultTemplate,filterType,tooltipType){colDef[templateType]?col[providedType]=colDef[templateType]:col[providedType]=defaultTemplate,templateGetPromises.push(gridUtil.getTemplate(col[providedType]).then(function(template){angular.isFunction(template)&&(template=template());var tooltipCall="cellTooltip"===tooltipType?"col.cellTooltip(row,col)":"col.headerTooltip(col)";tooltipType&&col[tooltipType]===!1?template=template.replace(uiGridConstants.TOOLTIP,""):tooltipType&&col[tooltipType]&&(template=template.replace(uiGridConstants.TOOLTIP,'title="{{'+tooltipCall+' CUSTOM_FILTERS }}"')),filterType?col[templateType]=template.replace(uiGridConstants.CUSTOM_FILTERS,function(){return col[filterType]?"|"+col[filterType]:""}):col[templateType]=template},function(res){throw new Error("Couldn't fetch/use colDef."+templateType+" '"+colDef[templateType]+"'")}))};return processTemplate("cellTemplate","providedCellTemplate","ui-grid/uiGridCell","cellFilter","cellTooltip"),col.cellTemplatePromise=templateGetPromises[0],processTemplate("headerCellTemplate","providedHeaderCellTemplate","ui-grid/uiGridHeaderCell","headerCellFilter","headerTooltip"),processTemplate("footerCellTemplate","providedFooterCellTemplate","ui-grid/uiGridFooterCell","footerCellFilter"),processTemplate("filterHeaderTemplate","providedFilterHeaderTemplate","ui-grid/ui-grid-filter"),col.compiledElementFnDefer=$q.defer(),$q.all(templateGetPromises)},rowTemplateAssigner:function(row){var grid=this;if(row.rowTemplate){var perRowTemplateFnPromise=$q.defer();row.getRowTemplateFn=perRowTemplateFnPromise.promise,gridUtil.getTemplate(row.rowTemplate).then(function(template){var rowTemplateFn=$compile(template);perRowTemplateFnPromise.resolve(rowTemplateFn)},function(res){throw new Error("Couldn't fetch/use row template '"+row.rowTemplate+"'")})}else row.rowTemplate=grid.options.rowTemplate,row.getRowTemplateFn=grid.getRowTemplateFn;return row.getRowTemplateFn}};return service}])}(),function(){function escapeRegExp(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var module=angular.module("ui.grid");module.service("rowSearcher",["gridUtil","uiGridConstants",function(gridUtil,uiGridConstants){var defaultCondition=uiGridConstants.filter.CONTAINS,rowSearcher={};return rowSearcher.getTerm=function(filter){if("undefined"==typeof filter.term)return filter.term;var term=filter.term;return"string"==typeof term&&(term=term.trim()),term},rowSearcher.stripTerm=function(filter){var term=rowSearcher.getTerm(filter);return"string"==typeof term?escapeRegExp(term.replace(/(^\*|\*$)/g,"")):term},rowSearcher.guessCondition=function(filter){if("undefined"==typeof filter.term||!filter.term)return defaultCondition;var term=rowSearcher.getTerm(filter);if(/\*/.test(term)){var regexpFlags="";filter.flags&&filter.flags.caseSensitive||(regexpFlags+="i");var reText=term.replace(/(\\)?\*/g,function($0,$1){return $1?$0:"[\\s\\S]*?"});return new RegExp("^"+reText+"$",regexpFlags)}return defaultCondition},rowSearcher.setupFilters=function(filters){for(var newFilters=[],filtersLength=filters.length,i=0;i<filtersLength;i++){var filter=filters[i];if(filter.noTerm||!gridUtil.isNullOrUndefined(filter.term)){var newFilter={},regexpFlags="";filter.flags&&filter.flags.caseSensitive||(regexpFlags+="i"),gridUtil.isNullOrUndefined(filter.term)||(newFilter.term=rowSearcher.stripTerm(filter)),filter.condition?newFilter.condition=filter.condition:newFilter.condition=rowSearcher.guessCondition(filter),newFilter.flags=angular.extend({caseSensitive:!1,date:!1},filter.flags),newFilter.condition===uiGridConstants.filter.STARTS_WITH&&(newFilter.startswithRE=new RegExp("^"+newFilter.term,regexpFlags)),newFilter.condition===uiGridConstants.filter.ENDS_WITH&&(newFilter.endswithRE=new RegExp(newFilter.term+"$",regexpFlags)),newFilter.condition===uiGridConstants.filter.CONTAINS&&(newFilter.containsRE=new RegExp(newFilter.term,regexpFlags)),newFilter.condition===uiGridConstants.filter.EXACT&&(newFilter.exactRE=new RegExp("^"+newFilter.term+"$",regexpFlags)),newFilters.push(newFilter)}}return newFilters},rowSearcher.runColumnFilter=function(grid,row,column,filter){var value,conditionType=typeof filter.condition,term=filter.term;if(value=column.filterCellFiltered?grid.getCellDisplayValue(row,column):grid.getCellValue(row,column),filter.condition instanceof RegExp)return filter.condition.test(value);if("function"===conditionType)return filter.condition(term,value,row,column);if(filter.startswithRE)return filter.startswithRE.test(value);if(filter.endswithRE)return filter.endswithRE.test(value);
if(filter.containsRE)return filter.containsRE.test(value);if(filter.exactRE)return filter.exactRE.test(value);if(filter.condition===uiGridConstants.filter.NOT_EQUAL){var regex=new RegExp("^"+term+"$");return!regex.exec(value)}if("number"==typeof value&&"string"==typeof term){var tempFloat=parseFloat(term.replace(/\\\./,".").replace(/\\\-/,"-"));isNaN(tempFloat)||(term=tempFloat)}return filter.flags.date===!0&&(value=new Date(value),term=new Date(term.replace(/\\/g,""))),filter.condition===uiGridConstants.filter.GREATER_THAN?value>term:filter.condition===uiGridConstants.filter.GREATER_THAN_OR_EQUAL?value>=term:filter.condition===uiGridConstants.filter.LESS_THAN?value<term:filter.condition!==uiGridConstants.filter.LESS_THAN_OR_EQUAL||value<=term},rowSearcher.searchColumn=function(grid,row,column,filters){if(grid.options.useExternalFiltering)return!0;for(var filtersLength=filters.length,i=0;i<filtersLength;i++){var filter=filters[i],ret=rowSearcher.runColumnFilter(grid,row,column,filter);if(!ret)return!1}return!0},rowSearcher.search=function(grid,rows,columns){if(rows){if(!grid.options.enableFiltering)return rows;for(var filterData=[],colsLength=columns.length,hasTerm=function(filters){var hasTerm=!1;return filters.forEach(function(filter){(!gridUtil.isNullOrUndefined(filter.term)&&""!==filter.term||filter.noTerm)&&(hasTerm=!0)}),hasTerm},i=0;i<colsLength;i++){var col=columns[i];"undefined"!=typeof col.filters&&hasTerm(col.filters)&&filterData.push({col:col,filters:rowSearcher.setupFilters(col.filters)})}if(filterData.length>0){for(var foreachRow=function(grid,row,col,filters){row.visible&&!rowSearcher.searchColumn(grid,row,col,filters)&&(row.visible=!1)},foreachFilterCol=function(grid,filterData){for(var rowsLength=rows.length,i=0;i<rowsLength;i++)foreachRow(grid,rows[i],filterData.col,filterData.filters)},filterDataLength=filterData.length,j=0;j<filterDataLength;j++)foreachFilterCol(grid,filterData[j]);grid.api.core.raise.rowsVisibleChanged&&grid.api.core.raise.rowsVisibleChanged()}return rows}},rowSearcher}])}(),function(){var module=angular.module("ui.grid");module.service("rowSorter",["$parse","uiGridConstants",function($parse,uiGridConstants){var currencyRegexStr="("+uiGridConstants.CURRENCY_SYMBOLS.map(function(a){return"\\"+a}).join("|")+")?",rowSorter=(new RegExp("^[-+]?"+currencyRegexStr+"[\\d,.]+"+currencyRegexStr+"%?$"),{colSortFnCache:{}});return rowSorter.guessSortFn=function(itemType){switch(itemType){case"number":return rowSorter.sortNumber;case"numberStr":return rowSorter.sortNumberStr;case"boolean":return rowSorter.sortBool;case"string":return rowSorter.sortAlpha;case"date":return rowSorter.sortDate;case"object":return rowSorter.basicSort;default:throw new Error("No sorting function found for type:"+itemType)}},rowSorter.handleNulls=function(a,b){if(!a&&0!==a&&a!==!1||!b&&0!==b&&b!==!1){if(!a&&0!==a&&a!==!1&&!b&&0!==b&&b!==!1)return 0;if(!a&&0!==a&&a!==!1)return 1;if(!b&&0!==b&&b!==!1)return-1}return null},rowSorter.basicSort=function(a,b){var nulls=rowSorter.handleNulls(a,b);return null!==nulls?nulls:a===b?0:a<b?-1:1},rowSorter.sortNumber=function(a,b){var nulls=rowSorter.handleNulls(a,b);return null!==nulls?nulls:a-b},rowSorter.sortNumberStr=function(a,b){var nulls=rowSorter.handleNulls(a,b);if(null!==nulls)return nulls;var numA,numB,badA=!1,badB=!1;return numA=parseFloat(a.replace(/[^0-9.-]/g,"")),isNaN(numA)&&(badA=!0),numB=parseFloat(b.replace(/[^0-9.-]/g,"")),isNaN(numB)&&(badB=!0),badA&&badB?0:badA?1:badB?-1:numA-numB},rowSorter.sortAlpha=function(a,b){var nulls=rowSorter.handleNulls(a,b);if(null!==nulls)return nulls;var strA=a.toString().toLowerCase(),strB=b.toString().toLowerCase();return strA===strB?0:strA<strB?-1:1},rowSorter.sortDate=function(a,b){var nulls=rowSorter.handleNulls(a,b);if(null!==nulls)return nulls;a instanceof Date||(a=new Date(a)),b instanceof Date||(b=new Date(b));var timeA=a.getTime(),timeB=b.getTime();return timeA===timeB?0:timeA<timeB?-1:1},rowSorter.sortBool=function(a,b){var nulls=rowSorter.handleNulls(a,b);return null!==nulls?nulls:a&&b?0:a||b?a?1:-1:0},rowSorter.getSortFn=function(grid,col,rows){var sortFn;return rowSorter.colSortFnCache[col.colDef.name]?sortFn=rowSorter.colSortFnCache[col.colDef.name]:void 0!==col.sortingAlgorithm?(sortFn=col.sortingAlgorithm,rowSorter.colSortFnCache[col.colDef.name]=col.sortingAlgorithm):col.sortCellFiltered&&col.cellFilter?(sortFn=rowSorter.sortAlpha,rowSorter.colSortFnCache[col.colDef.name]=sortFn):(sortFn=rowSorter.guessSortFn(col.colDef.type),sortFn?rowSorter.colSortFnCache[col.colDef.name]=sortFn:sortFn=rowSorter.sortAlpha),sortFn},rowSorter.prioritySort=function(a,b){return void 0!==a.sort.priority&&void 0!==b.sort.priority?a.sort.priority<b.sort.priority?-1:a.sort.priority===b.sort.priority?0:1:a.sort.priority||0===a.sort.priority?-1:b.sort.priority||0===b.sort.priority?1:0},rowSorter.sort=function(grid,rows,columns){if(rows){if(grid.options.useExternalSorting)return rows;var sortCols=[];if(columns.forEach(function(col){!col.sort||col.sort.ignoreSort||!col.sort.direction||col.sort.direction!==uiGridConstants.ASC&&col.sort.direction!==uiGridConstants.DESC||sortCols.push(col)}),sortCols=sortCols.sort(rowSorter.prioritySort),0===sortCols.length)return rows;var col,direction,setIndex=function(row,idx){row.entity.$$uiGridIndex=idx};rows.forEach(setIndex);var r=rows.slice(0),rowSortFn=function(rowA,rowB){for(var sortFn,tem=0,idx=0;0===tem&&idx<sortCols.length;){col=sortCols[idx],direction=sortCols[idx].sort.direction,sortFn=rowSorter.getSortFn(grid,col,r);var propA,propB;col.sortCellFiltered?(propA=grid.getCellDisplayValue(rowA,col),propB=grid.getCellDisplayValue(rowB,col)):(propA=grid.getCellValue(rowA,col),propB=grid.getCellValue(rowB,col)),tem=sortFn(propA,propB,rowA,rowB,direction),idx++}return 0===tem?rowA.entity.$$uiGridIndex-rowB.entity.$$uiGridIndex:direction===uiGridConstants.ASC?tem:0-tem},newRows=rows.sort(rowSortFn),clearIndex=function(row,idx){delete row.entity.$$uiGridIndex};return rows.forEach(clearIndex),newRows}},rowSorter}])}(),function(){function getStyles(elem){var e=elem;return"undefined"!=typeof e.length&&e.length&&(e=elem[0]),e.ownerDocument.defaultView.getComputedStyle(e,null)}function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){for(var i=extra===(isBorderBox?"border":"content")?4:"width"===name?1:0,val=0,sides=["Top","Right","Bottom","Left"];i<4;i+=2){var side=sides[i];if("margin"===extra){var marg=parseFloat(styles[extra+side]);isNaN(marg)||(val+=marg)}if(isBorderBox){if("content"===extra){var padd=parseFloat(styles["padding"+side]);isNaN(padd)||(val-=padd)}if("margin"!==extra){var bordermarg=parseFloat(styles["border"+side+"Width"]);isNaN(bordermarg)||(val-=bordermarg)}}else{var nocontentPad=parseFloat(styles["padding"+side]);if(isNaN(nocontentPad)||(val+=nocontentPad),"padding"!==extra){var nocontentnopad=parseFloat(styles["border"+side+"Width"]);isNaN(nocontentnopad)||(val+=nocontentnopad)}}}return val}function getWidthOrHeight(elem,name,extra){var val,valueIsBorderBox=!0,styles=getStyles(elem),isBorderBox="border-box"===styles.boxSizing;if(val<=0||null==val){if(val=styles[name],(val<0||null==val)&&(val=elem.style[name]),rnumnonpx.test(val))return val;valueIsBorderBox=isBorderBox&&!0,val=parseFloat(val)||0}var ret=val+augmentWidthOrHeight(elem,name,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles);return ret}function getLineHeight(elm){elm=angular.element(elm)[0];var parent=elm.parentElement;return parent||(parent=document.getElementsByTagName("body")[0]),parseInt(getStyles(parent).fontSize)||parseInt(getStyles(elm).fontSize)||16}var bindPolyfill,module=angular.module("ui.grid");"function"!=typeof Function.prototype.bind&&(bindPolyfill=function(){var slice=Array.prototype.slice;return function(context){var fn=this,args=slice.call(arguments,1);return args.length?function(){return arguments.length?fn.apply(context,args.concat(slice.call(arguments))):fn.apply(context,args)}:function(){return arguments.length?fn.apply(context,arguments):fn.call(context)}}});var rnumnonpx=new RegExp("^("+/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source+")(?!px)[a-z%]+$","i"),rdisplayswap=/^(block|none|table(?!-c[ea]).+)/,cssShow={position:"absolute",visibility:"hidden",display:"block"},uid=["0","0","0","0"],uidPrefix="uiGrid-";module.service("gridUtil",["$log","$window","$document","$http","$templateCache","$timeout","$interval","$injector","$q","$interpolate","uiGridConstants",function($log,$window,$document,$http,$templateCache,$timeout,$interval,$injector,$q,$interpolate,uiGridConstants){function mousewheelHandler(fn,event){var $elm=angular.element(this),delta=0,deltaX=0,deltaY=0,absDelta=0;if(event.originalEvent&&(event=event.originalEvent),"detail"in event&&(deltaY=event.detail*-1),"wheelDelta"in event&&(deltaY=event.wheelDelta),"wheelDeltaY"in event&&(deltaY=event.wheelDeltaY),"wheelDeltaX"in event&&(deltaX=event.wheelDeltaX*-1),"axis"in event&&event.axis===event.HORIZONTAL_AXIS&&(deltaX=deltaY*-1,deltaY=0),delta=0===deltaY?deltaX:deltaY,"deltaY"in event&&(deltaY=event.deltaY*-1,delta=deltaY),"deltaX"in event&&(deltaX=event.deltaX,0===deltaY&&(delta=deltaX*-1)),0!==deltaY||0!==deltaX){if(1===event.deltaMode){var lineHeight=$elm.data("mousewheel-line-height");delta*=lineHeight,deltaY*=lineHeight,deltaX*=lineHeight}else if(2===event.deltaMode){var pageHeight=$elm.data("mousewheel-page-height");delta*=pageHeight,deltaY*=pageHeight,deltaX*=pageHeight}absDelta=Math.max(Math.abs(deltaY),Math.abs(deltaX)),(!lowestDelta||absDelta<lowestDelta)&&(lowestDelta=absDelta,shouldAdjustOldDeltas(event,absDelta)&&(lowestDelta/=40)),delta=Math[delta>=1?"floor":"ceil"](delta/lowestDelta),deltaX=Math[deltaX>=1?"floor":"ceil"](deltaX/lowestDelta),deltaY=Math[deltaY>=1?"floor":"ceil"](deltaY/lowestDelta),event.deltaMode=0;var newEvent={originalEvent:event,deltaX:deltaX,deltaY:deltaY,deltaFactor:lowestDelta,preventDefault:function(){event.preventDefault()},stopPropagation:function(){event.stopPropagation()}};nullLowestDeltaTimeout&&clearTimeout(nullLowestDeltaTimeout),nullLowestDeltaTimeout=setTimeout(nullLowestDelta,200),fn.call($elm[0],newEvent)}}function nullLowestDelta(){lowestDelta=null}function shouldAdjustOldDeltas(orgEvent,absDelta){return"mousewheel"===orgEvent.type&&absDelta%120===0}var s={augmentWidthOrHeight:augmentWidthOrHeight,getStyles:getStyles,createBoundedWrapper:function(object,method){return function(){return method.apply(object,arguments)}},readableColumnName:function(columnName){return"undefined"==typeof columnName||void 0===columnName||null===columnName?columnName:("string"!=typeof columnName&&(columnName=String(columnName)),columnName.replace(/_+/g," ").replace(/^[A-Z]+$/,function(match){return angular.lowercase(angular.uppercase(match.charAt(0))+match.slice(1))}).replace(/([\w\u00C0-\u017F]+)/g,function(match){return angular.uppercase(match.charAt(0))+match.slice(1)}).replace(/(\w+?(?=[A-Z]))/g,"$1 "))},getColumnsFromData:function(data,excludeProperties){var columnDefs=[];if(!data||"undefined"==typeof data[0]||void 0===data[0])return[];angular.isUndefined(excludeProperties)&&(excludeProperties=[]);var item=data[0];return angular.forEach(item,function(prop,propName){excludeProperties.indexOf(propName)===-1&&columnDefs.push({name:propName})}),columnDefs},newId:function(){var seedId=(new Date).getTime();return function(){return seedId+=1}}(),getTemplate:function(template){if($templateCache.get(template))return s.postProcessTemplate($templateCache.get(template));if(template.hasOwnProperty("then"))return template.then(s.postProcessTemplate);try{if(angular.element(template).length>0)return $q.when(template).then(s.postProcessTemplate)}catch(err){}return s.logDebug("fetching url",template),$http({method:"GET",url:template}).then(function(result){var templateHtml=result.data.trim();return $templateCache.put(template,templateHtml),templateHtml},function(err){throw new Error("Could not get template "+template+": "+err)}).then(s.postProcessTemplate)},postProcessTemplate:function(template){var startSym=$interpolate.startSymbol(),endSym=$interpolate.endSymbol();return"{{"===startSym&&"}}"===endSym||(template=template.replace(/\{\{/g,startSym),template=template.replace(/\}\}/g,endSym)),$q.when(template)},guessType:function(item){var itemType=typeof item;switch(itemType){case"number":case"boolean":case"string":return itemType;default:return angular.isDate(item)?"date":"object"}},elementWidth:function(elem){},elementHeight:function(elem){},getScrollbarWidth:function(){var outer=document.createElement("div");outer.style.visibility="hidden",outer.style.width="100px",outer.style.msOverflowStyle="scrollbar",document.body.appendChild(outer);var widthNoScroll=outer.offsetWidth;outer.style.overflow="scroll";var inner=document.createElement("div");inner.style.width="100%",outer.appendChild(inner);var widthWithScroll=inner.offsetWidth;return outer.parentNode.removeChild(outer),widthNoScroll-widthWithScroll},swap:function(elem,options,callback,args){var ret,name,old={};for(name in options)old[name]=elem.style[name],elem.style[name]=options[name];ret=callback.apply(elem,args||[]);for(name in options)elem.style[name]=old[name];return ret},fakeElement:function(elem,options,callback,args){var ret,name,newElement=angular.element(elem).clone()[0];for(name in options)newElement.style[name]=options[name];return angular.element(document.body).append(newElement),ret=callback.call(newElement,newElement),angular.element(newElement).remove(),ret},normalizeWheelEvent:function(event){var lowestDelta,lowestDeltaXY,fn,orgEvent=event||window.event,delta=([].slice.call(arguments,1),0),deltaX=0,deltaY=0,absDelta=0,absDeltaXY=0;return orgEvent.originalEvent&&(orgEvent=orgEvent.originalEvent),orgEvent.wheelDelta&&(delta=orgEvent.wheelDelta),orgEvent.detail&&(delta=orgEvent.detail*-1),deltaY=delta,void 0!==orgEvent.axis&&orgEvent.axis===orgEvent.HORIZONTAL_AXIS&&(deltaY=0,deltaX=delta*-1),orgEvent.deltaY&&(deltaY=orgEvent.deltaY*-1,delta=deltaY),orgEvent.deltaX&&(deltaX=orgEvent.deltaX,delta=deltaX*-1),void 0!==orgEvent.wheelDeltaY&&(deltaY=orgEvent.wheelDeltaY),void 0!==orgEvent.wheelDeltaX&&(deltaX=orgEvent.wheelDeltaX),absDelta=Math.abs(delta),(!lowestDelta||absDelta<lowestDelta)&&(lowestDelta=absDelta),absDeltaXY=Math.max(Math.abs(deltaY),Math.abs(deltaX)),(!lowestDeltaXY||absDeltaXY<lowestDeltaXY)&&(lowestDeltaXY=absDeltaXY),fn=delta>0?"floor":"ceil",delta=Math[fn](delta/lowestDelta),deltaX=Math[fn](deltaX/lowestDeltaXY),deltaY=Math[fn](deltaY/lowestDeltaXY),{delta:delta,deltaX:deltaX,deltaY:deltaY}},isTouchEnabled:function(){var bool;return("ontouchstart"in $window||$window.DocumentTouch&&$document instanceof DocumentTouch)&&(bool=!0),bool},isNullOrUndefined:function(obj){return void 0===obj||null===obj},endsWith:function(str,suffix){return!(!str||!suffix||"string"!=typeof str)&&str.indexOf(suffix,str.length-suffix.length)!==-1},arrayContainsObjectWithProperty:function(array,propertyName,propertyValue){var found=!1;return angular.forEach(array,function(object){object[propertyName]===propertyValue&&(found=!0)}),found},numericAndNullSort:function(a,b){return null===a?1:null===b?-1:null===a&&null===b?0:a-b},disableAnimations:function(element){var $animate;try{$animate=$injector.get("$animate"),angular.version.major>1||1===angular.version.major&&angular.version.minor>=4?$animate.enabled(element,!1):$animate.enabled(!1,element)}catch(e){}},enableAnimations:function(element){var $animate;try{return $animate=$injector.get("$animate"),angular.version.major>1||1===angular.version.major&&angular.version.minor>=4?$animate.enabled(element,!0):$animate.enabled(!0,element),$animate}catch(e){}},nextUid:function(){for(var digit,index=uid.length;index;){if(index--,digit=uid[index].charCodeAt(0),57===digit)return uid[index]="A",uidPrefix+uid.join("");if(90!==digit)return uid[index]=String.fromCharCode(digit+1),uidPrefix+uid.join("");uid[index]="0"}return uid.unshift("0"),uidPrefix+uid.join("")},hashKey:function(obj){var key,objType=typeof obj;return"object"===objType&&null!==obj?"function"==typeof(key=obj.$$hashKey)?key=obj.$$hashKey():"undefined"!=typeof obj.$$hashKey&&obj.$$hashKey?key=obj.$$hashKey:void 0===key&&(key=obj.$$hashKey=s.nextUid()):key=obj,objType+":"+key},resetUids:function(){uid=["0","0","0"]},logError:function(logMessage){uiGridConstants.LOG_ERROR_MESSAGES&&$log.error(logMessage)},logWarn:function(logMessage){uiGridConstants.LOG_WARN_MESSAGES&&$log.warn(logMessage)},logDebug:function(){uiGridConstants.LOG_DEBUG_MESSAGES&&$log.debug.apply($log,arguments)}};s.focus={queue:[],byId:function(id,Grid){this._purgeQueue();var promise=$timeout(function(){var elementID=(Grid&&Grid.id?Grid.id+"-":"")+id,element=$window.document.getElementById(elementID);element?element.focus():s.logWarn("[focus.byId] Element id "+elementID+" was not found.")});return this.queue.push(promise),promise},byElement:function(element){if(!angular.isElement(element))return s.logWarn("Trying to focus on an element that isn't an element."),$q.reject("not-element");element=angular.element(element),this._purgeQueue();var promise=$timeout(function(){element&&element[0].focus()});return this.queue.push(promise),promise},bySelector:function(parentElement,querySelector,aSync){var self=this;if(!angular.isElement(parentElement))throw new Error("The parent element is not an element.");parentElement=angular.element(parentElement);var focusBySelector=function(){var element=parentElement[0].querySelector(querySelector);return self.byElement(element)};if(this._purgeQueue(),aSync){var promise=$timeout(focusBySelector);return this.queue.push($timeout(focusBySelector)),promise}return focusBySelector()},_purgeQueue:function(){this.queue.forEach(function(element){$timeout.cancel(element)}),this.queue=[]}},["width","height"].forEach(function(name){var capsName=angular.uppercase(name.charAt(0))+name.substr(1);s["element"+capsName]=function(elem,extra){var e=elem;if(e&&"undefined"!=typeof e.length&&e.length&&(e=elem[0]),e){var styles=getStyles(e);return 0===e.offsetWidth&&rdisplayswap.test(styles.display)?s.swap(e,cssShow,function(){return getWidthOrHeight(e,name,extra)}):getWidthOrHeight(e,name,extra)}return null},s["outerElement"+capsName]=function(elem,margin){return elem?s["element"+capsName].call(this,elem,margin?"margin":"border"):null}}),s.closestElm=function(el,selector){"undefined"!=typeof el.length&&el.length&&(el=el[0]);var matchesFn;["matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector"].some(function(fn){return"function"==typeof document.body[fn]&&(matchesFn=fn,!0)});for(var parent;null!==el;){if(parent=el.parentElement,null!==parent&&parent[matchesFn](selector))return parent;el=parent}return null},s.type=function(obj){var text=Function.prototype.toString.call(obj.constructor);return text.match(/function (.*?)\(/)[1]},s.getBorderSize=function(elem,borderType){"undefined"!=typeof elem.length&&elem.length&&(elem=elem[0]);var styles=getStyles(elem);borderType=borderType?"border"+borderType.charAt(0).toUpperCase()+borderType.slice(1):"border",borderType+="Width";var val=parseInt(styles[borderType],10);return isNaN(val)?0:val},s.detectBrowser=function(){var userAgent=$window.navigator.userAgent,browsers={chrome:/chrome/i,safari:/safari/i,firefox:/firefox/i,ie:/internet explorer|trident\//i};for(var key in browsers)if(browsers[key].test(userAgent))return key;return"unknown"},s.rtlScrollType=function rtlScrollType(){if(rtlScrollType.type)return rtlScrollType.type;var definer=angular.element('<div dir="rtl" style="font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll">A</div>')[0],type="reverse";return document.body.appendChild(definer),definer.scrollLeft>0?type="default":(definer.scrollLeft=1,0===definer.scrollLeft&&(type="negative")),angular.element(definer).remove(),rtlScrollType.type=type,type},s.normalizeScrollLeft=function(element,grid){"undefined"!=typeof element.length&&element.length&&(element=element[0]);var scrollLeft=element.scrollLeft;if(grid.isRTL())switch(s.rtlScrollType()){case"default":return element.scrollWidth-scrollLeft-element.clientWidth;case"negative":return Math.abs(scrollLeft);case"reverse":return scrollLeft}return scrollLeft},s.denormalizeScrollLeft=function(element,scrollLeft,grid){if("undefined"!=typeof element.length&&element.length&&(element=element[0]),grid.isRTL())switch(s.rtlScrollType()){case"default":var maxScrollLeft=element.scrollWidth-element.clientWidth;return maxScrollLeft-scrollLeft;case"negative":return scrollLeft*-1;case"reverse":return scrollLeft}return scrollLeft},s.preEval=function(path){var m=uiGridConstants.BRACKET_REGEXP.exec(path);if(m)return(m[1]?s.preEval(m[1]):m[1])+m[2]+(m[3]?s.preEval(m[3]):m[3]);path=path.replace(uiGridConstants.APOS_REGEXP,"\\'");var parts=path.split(uiGridConstants.DOT_REGEXP),preparsed=[parts.shift()];return angular.forEach(parts,function(part){preparsed.push(part.replace(uiGridConstants.FUNC_REGEXP,"']$1"))}),preparsed.join("['")},s.debounce=function(func,wait,immediate){function debounce(){context=this,args=arguments;var later=function(){timeout=null,immediate||(result=func.apply(context,args))},callNow=immediate&&!timeout;return timeout&&$timeout.cancel(timeout),timeout=$timeout(later,wait),callNow&&(result=func.apply(context,args)),result}var timeout,args,context,result;return debounce.cancel=function(){$timeout.cancel(timeout),timeout=null},debounce},s.throttle=function(func,wait,options){function runFunc(endDate){lastCall=+new Date,func.apply(context,args),$interval(function(){queued=null},0,1)}options=options||{};var context,args,lastCall=0,queued=null;return function(){if(context=this,args=arguments,null===queued){var sinceLast=+new Date-lastCall;sinceLast>wait?runFunc():options.trailing&&(queued=$interval(runFunc,wait-sinceLast,1))}}},s.on={},s.off={},s._events={},s.addOff=function(eventName){s.off[eventName]=function(elm,fn){var idx=s._events[eventName].indexOf(fn);idx>0&&s._events[eventName].removeAt(idx)}};var nullLowestDeltaTimeout,lowestDelta,mouseWheeltoBind="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"];return s.on.mousewheel=function(elm,fn){if(elm&&fn){var $elm=angular.element(elm);$elm.data("mousewheel-line-height",getLineHeight($elm)),$elm.data("mousewheel-page-height",s.elementHeight($elm)),$elm.data("mousewheel-callbacks")||$elm.data("mousewheel-callbacks",{});var cbs=$elm.data("mousewheel-callbacks");cbs[fn]=(Function.prototype.bind||bindPolyfill).call(mousewheelHandler,$elm[0],fn);for(var i=mouseWheeltoBind.length;i;)$elm.on(mouseWheeltoBind[--i],cbs[fn])}},s.off.mousewheel=function(elm,fn){var $elm=angular.element(elm),cbs=$elm.data("mousewheel-callbacks"),handler=cbs[fn];if(handler)for(var i=mouseWheeltoBind.length;i;)$elm.off(mouseWheeltoBind[--i],handler);delete cbs[fn],0===Object.keys(cbs).length&&($elm.removeData("mousewheel-line-height"),$elm.removeData("mousewheel-page-height"),$elm.removeData("mousewheel-callbacks"))},s}]),module.filter("px",function(){return function(str){return str.match(/^[\d\.]+$/)?str+"px":str}})}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){var lang={aggregate:{label:"položky"},groupPanel:{description:"Přesuňte záhlaví zde pro vytvoření skupiny dle sloupce."},search:{placeholder:"Hledat...",showingItems:"Zobrazuji položky:",selectedItems:"Vybrané položky:",totalItems:"Celkem položek:",size:"Velikost strany:",first:"První strana",next:"Další strana",previous:"Předchozí strana",last:"Poslední strana"},menu:{text:"Vyberte sloupec:"},sort:{ascending:"Seřadit od A-Z",descending:"Seřadit od Z-A",remove:"Odebrat seřazení"},column:{hide:"Schovat sloupec"},aggregation:{count:"celkem řádků: ",sum:"celkem: ",avg:"avg: ",min:"min.: ",max:"max.: "},pinning:{pinLeft:"Zamknout vlevo",pinRight:"Zamknout vpravo",unpin:"Odemknout"},gridMenu:{columns:"Sloupce:",importerTitle:"Importovat soubor",exporterAllAsCsv:"Exportovat všechna data do csv",exporterVisibleAsCsv:"Exportovat viditelná data do csv",exporterSelectedAsCsv:"Exportovat vybraná data do csv",exporterAllAsPdf:"Exportovat všechna data do pdf",exporterVisibleAsPdf:"Exportovat viditelná data do pdf",exporterSelectedAsPdf:"Exportovat vybraná data do pdf",clearAllFilters:"Odstranit všechny filtry"},importer:{noHeaders:"Názvy sloupců se nepodařilo získat, obsahuje soubor záhlaví?",noObjects:"Data se nepodařilo zpracovat, obsahuje soubor řádky mimo záhlaví?",invalidCsv:"Soubor nelze zpracovat, jedná se o CSV?",invalidJson:"Soubor nelze zpracovat, je to JSON?",jsonNotArray:"Soubor musí obsahovat json. Ukončuji.."},pagination:{sizes:"položek na stránku",totalItems:"položek"},grouping:{group:"Seskupit",ungroup:"Odebrat seskupení",aggregate_count:"Agregace: Count",aggregate_sum:"Agregace: Sum",aggregate_max:"Agregace: Max",aggregate_min:"Agregace: Min",aggregate_avg:"Agregace: Avg",aggregate_remove:"Agregace: Odebrat"}};return $delegate.add("cs",lang),$delegate.add("cz",lang),$delegate.add("cs-cz",lang),$delegate.add("cs-CZ",lang),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("da",{aggregate:{label:"artikler"},groupPanel:{description:"Grupér rækker udfra en kolonne ved at trække dens overskift hertil."},search:{placeholder:"Søg...",showingItems:"Viste rækker:",selectedItems:"Valgte rækker:",totalItems:"Rækker totalt:",size:"Side størrelse:",first:"Første side",next:"Næste side",previous:"Forrige side",last:"Sidste side"},menu:{text:"Vælg kolonner:"},column:{hide:"Skjul kolonne"},aggregation:{count:"samlede rækker: ",sum:"smalede: ",avg:"gns: ",min:"min: ",max:"max: "},gridMenu:{columns:"Columns:",importerTitle:"Import file",exporterAllAsCsv:"Export all data as csv",exporterVisibleAsCsv:"Export visible data as csv",exporterSelectedAsCsv:"Export selected data as csv",exporterAllAsPdf:"Export all data as pdf",exporterVisibleAsPdf:"Export visible data as pdf",exporterSelectedAsPdf:"Export selected data as pdf",clearAllFilters:"Clear all filters"},importer:{noHeaders:"Column names were unable to be derived, does the file have a header?",noObjects:"Objects were not able to be derived, was there data in the file other than headers?",invalidCsv:"File was unable to be processed, is it valid CSV?",invalidJson:"File was unable to be processed, is it valid Json?",jsonNotArray:"Imported json file must contain an array, aborting."}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("de",{aggregate:{label:"Eintrag"},groupPanel:{description:"Ziehen Sie eine Spaltenüberschrift hierhin, um nach dieser Spalte zu gruppieren."},search:{placeholder:"Suche...",showingItems:"Zeige Einträge:",selectedItems:"Ausgewählte Einträge:",totalItems:"Einträge gesamt:",size:"Einträge pro Seite:",first:"Erste Seite",next:"Nächste Seite",previous:"Vorherige Seite",last:"Letzte Seite"},menu:{text:"Spalten auswählen:"},sort:{ascending:"aufsteigend sortieren",descending:"absteigend sortieren",remove:"Sortierung zurücksetzen"},column:{hide:"Spalte ausblenden"},aggregation:{count:"Zeilen insgesamt: ",sum:"gesamt: ",avg:"Durchschnitt: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Links anheften",pinRight:"Rechts anheften",unpin:"Lösen"},gridMenu:{columns:"Spalten:",importerTitle:"Datei importieren",exporterAllAsCsv:"Alle Daten als CSV exportieren",exporterVisibleAsCsv:"sichtbare Daten als CSV exportieren",exporterSelectedAsCsv:"markierte Daten als CSV exportieren",exporterAllAsPdf:"Alle Daten als PDF exportieren",exporterVisibleAsPdf:"sichtbare Daten als PDF exportieren",exporterSelectedAsPdf:"markierte Daten als CSV exportieren",clearAllFilters:"Alle filter reinigen"},importer:{noHeaders:"Es konnten keine Spaltennamen ermittelt werden. Sind in der Datei Spaltendefinitionen enthalten?",noObjects:"Es konnten keine Zeileninformationen gelesen werden, Sind in der Datei außer den Spaltendefinitionen auch Daten enthalten?",invalidCsv:"Die Datei konnte nicht eingelesen werden, ist es eine gültige CSV-Datei?",invalidJson:"Die Datei konnte nicht eingelesen werden. Enthält sie gültiges JSON?",jsonNotArray:"Die importierte JSON-Datei muß ein Array enthalten. Breche Import ab."},pagination:{sizes:"Einträge pro Seite",totalItems:"Einträge"},grouping:{group:"Gruppieren",ungroup:"Gruppierung aufheben",aggregate_count:"Agg: Anzahl",aggregate_sum:"Agg: Summe",aggregate_max:"Agg: Maximum",aggregate_min:"Agg: Minimum",aggregate_avg:"Agg: Mittelwert",aggregate_remove:"Aggregation entfernen"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("en",{headerCell:{aria:{defaultFilterLabel:"Filter for column",removeFilter:"Remove Filter",columnMenuButtonLabel:"Column Menu"},priority:"Priority:",filterLabel:"Filter for column: "},aggregate:{label:"items"},groupPanel:{description:"Drag a column header here and drop it to group by that column."},search:{placeholder:"Search...",showingItems:"Showing Items:",selectedItems:"Selected Items:",totalItems:"Total Items:",size:"Page Size:",first:"First Page",next:"Next Page",previous:"Previous Page",last:"Last Page"},menu:{text:"Choose Columns:"},sort:{ascending:"Sort Ascending",descending:"Sort Descending",none:"Sort None",remove:"Remove Sort"},column:{hide:"Hide Column"},aggregation:{count:"total rows: ",sum:"total: ",avg:"avg: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Pin Left",pinRight:"Pin Right",unpin:"Unpin"},columnMenu:{close:"Close"},gridMenu:{aria:{buttonLabel:"Grid Menu"},columns:"Columns:",importerTitle:"Import file",exporterAllAsCsv:"Export all data as csv",exporterVisibleAsCsv:"Export visible data as csv",exporterSelectedAsCsv:"Export selected data as csv",exporterAllAsPdf:"Export all data as pdf",exporterVisibleAsPdf:"Export visible data as pdf",exporterSelectedAsPdf:"Export selected data as pdf",clearAllFilters:"Clear all filters"},importer:{noHeaders:"Column names were unable to be derived, does the file have a header?",noObjects:"Objects were not able to be derived, was there data in the file other than headers?",invalidCsv:"File was unable to be processed, is it valid CSV?",invalidJson:"File was unable to be processed, is it valid Json?",jsonNotArray:"Imported json file must contain an array, aborting."},pagination:{aria:{pageToFirst:"Page to first",pageBack:"Page back",pageSelected:"Selected page",pageForward:"Page forward",pageToLast:"Page to last"},sizes:"items per page",totalItems:"items",through:"through",of:"of"},grouping:{group:"Group",ungroup:"Ungroup",aggregate_count:"Agg: Count",aggregate_sum:"Agg: Sum",aggregate_max:"Agg: Max",aggregate_min:"Agg: Min",aggregate_avg:"Agg: Avg",aggregate_remove:"Agg: Remove"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("es",{aggregate:{label:"Artículos"},groupPanel:{description:"Arrastre un encabezado de columna aquí y suéltelo para agrupar por esa columna."},search:{placeholder:"Buscar...",showingItems:"Artículos Mostrados:",selectedItems:"Artículos Seleccionados:",totalItems:"Artículos Totales:",size:"Tamaño de Página:",first:"Primera Página",next:"Página Siguiente",previous:"Página Anterior",last:"Última Página"},menu:{text:"Elegir columnas:"},sort:{ascending:"Orden Ascendente",descending:"Orden Descendente",remove:"Sin Ordenar"},column:{hide:"Ocultar la columna"},aggregation:{count:"filas totales: ",sum:"total: ",avg:"media: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Fijar a la Izquierda",pinRight:"Fijar a la Derecha",unpin:"Quitar Fijación"},gridMenu:{columns:"Columnas:",importerTitle:"Importar archivo",
exporterAllAsCsv:"Exportar todo como csv",exporterVisibleAsCsv:"Exportar vista como csv",exporterSelectedAsCsv:"Exportar selección como csv",exporterAllAsPdf:"Exportar todo como pdf",exporterVisibleAsPdf:"Exportar vista como pdf",exporterSelectedAsPdf:"Exportar selección como pdf",clearAllFilters:"Limpiar todos los filtros"},importer:{noHeaders:"No fue posible derivar los nombres de las columnas, ¿tiene encabezados el archivo?",noObjects:"No fue posible obtener registros, ¿contiene datos el archivo, aparte de los encabezados?",invalidCsv:"No fue posible procesar el archivo, ¿es un CSV válido?",invalidJson:"No fue posible procesar el archivo, ¿es un Json válido?",jsonNotArray:"El archivo json importado debe contener un array, abortando."},pagination:{sizes:"registros por página",totalItems:"registros",of:"de"},grouping:{group:"Agrupar",ungroup:"Desagrupar",aggregate_count:"Agr: Cont",aggregate_sum:"Agr: Sum",aggregate_max:"Agr: Máx",aggregate_min:"Agr: Min",aggregate_avg:"Agr: Prom",aggregate_remove:"Agr: Quitar"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("fa",{aggregate:{label:"قلم"},groupPanel:{description:"عنوان یک ستون را بگیر و به گروهی از آن ستون رها کن."},search:{placeholder:"جستجو...",showingItems:"نمایش اقلام:",selectedItems:"قلم‌های انتخاب شده:",totalItems:"مجموع اقلام:",size:"اندازه‌ی صفحه:",first:"اولین صفحه",next:"صفحه‌ی‌بعدی",previous:"صفحه‌ی‌ قبلی",last:"آخرین صفحه"},menu:{text:"ستون‌های انتخابی:"},sort:{ascending:"ترتیب صعودی",descending:"ترتیب نزولی",remove:"حذف مرتب کردن"},column:{hide:"پنهان‌کردن ستون"},aggregation:{count:"تعداد: ",sum:"مجموع: ",avg:"میانگین: ",min:"کمترین: ",max:"بیشترین: "},pinning:{pinLeft:"پین کردن سمت چپ",pinRight:"پین کردن سمت راست",unpin:"حذف پین"},gridMenu:{columns:"ستون‌ها:",importerTitle:"وارد کردن فایل",exporterAllAsCsv:"خروجی تمام داده‌ها در فایل csv",exporterVisibleAsCsv:"خروجی داده‌های قابل مشاهده در فایل csv",exporterSelectedAsCsv:"خروجی داده‌های انتخاب‌شده در فایل csv",exporterAllAsPdf:"خروجی تمام داده‌ها در فایل pdf",exporterVisibleAsPdf:"خروجی داده‌های قابل مشاهده در فایل pdf",exporterSelectedAsPdf:"خروجی داده‌های انتخاب‌شده در فایل pdf",clearAllFilters:"پاک کردن تمام فیلتر"},importer:{noHeaders:"نام ستون قابل استخراج نیست. آیا فایل عنوان دارد؟",noObjects:"اشیا قابل استخراج نیستند. آیا به جز عنوان‌ها در فایل داده وجود دارد؟",invalidCsv:"فایل قابل پردازش نیست. آیا فرمت  csv  معتبر است؟",invalidJson:"فایل قابل پردازش نیست. آیا فرمت json   معتبر است؟",jsonNotArray:"فایل json وارد شده باید حاوی آرایه باشد. عملیات ساقط شد."},pagination:{sizes:"اقلام در هر صفحه",totalItems:"اقلام",of:"از"},grouping:{group:"گروه‌بندی",ungroup:"حذف گروه‌بندی",aggregate_count:"Agg: تعداد",aggregate_sum:"Agg: جمع",aggregate_max:"Agg: بیشینه",aggregate_min:"Agg: کمینه",aggregate_avg:"Agg: میانگین",aggregate_remove:"Agg: حذف"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("fi",{aggregate:{label:"rivit"},groupPanel:{description:"Raahaa ja pudota otsikko tähän ryhmittääksesi sarakkeen mukaan."},search:{placeholder:"Hae...",showingItems:"Näytetään rivejä:",selectedItems:"Valitut rivit:",totalItems:"Rivejä yht.:",size:"Näytä:",first:"Ensimmäinen sivu",next:"Seuraava sivu",previous:"Edellinen sivu",last:"Viimeinen sivu"},menu:{text:"Valitse sarakkeet:"},sort:{ascending:"Järjestä nouseva",descending:"Järjestä laskeva",remove:"Poista järjestys"},column:{hide:"Piilota sarake"},aggregation:{count:"Rivejä yht.: ",sum:"Summa: ",avg:"K.a.: ",min:"Min: ",max:"Max: "},pinning:{pinLeft:"Lukitse vasemmalle",pinRight:"Lukitse oikealle",unpin:"Poista lukitus"},gridMenu:{columns:"Sarakkeet:",importerTitle:"Tuo tiedosto",exporterAllAsCsv:"Vie tiedot csv-muodossa",exporterVisibleAsCsv:"Vie näkyvä tieto csv-muodossa",exporterSelectedAsCsv:"Vie valittu tieto csv-muodossa",exporterAllAsPdf:"Vie tiedot pdf-muodossa",exporterVisibleAsPdf:"Vie näkyvä tieto pdf-muodossa",exporterSelectedAsPdf:"Vie valittu tieto pdf-muodossa",clearAllFilters:"Puhdista kaikki suodattimet"},importer:{noHeaders:"Sarakkeen nimiä ei voitu päätellä, onko tiedostossa otsikkoriviä?",noObjects:"Tietoja ei voitu lukea, onko tiedostossa muuta kuin otsikkot?",invalidCsv:"Tiedostoa ei voitu käsitellä, oliko se CSV-muodossa?",invalidJson:"Tiedostoa ei voitu käsitellä, oliko se JSON-muodossa?",jsonNotArray:"Tiedosto ei sisältänyt taulukkoa, lopetetaan."}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("fr",{aggregate:{label:"éléments"},groupPanel:{description:"Faites glisser une en-tête de colonne ici pour créer un groupe de colonnes."},search:{placeholder:"Recherche...",showingItems:"Affichage des éléments :",selectedItems:"Éléments sélectionnés :",totalItems:"Nombre total d'éléments:",size:"Taille de page:",first:"Première page",next:"Page Suivante",previous:"Page précédente",last:"Dernière page"},menu:{text:"Choisir des colonnes :"},sort:{ascending:"Trier par ordre croissant",descending:"Trier par ordre décroissant",remove:"Enlever le tri"},column:{hide:"Cacher la colonne"},aggregation:{count:"lignes totales: ",sum:"total: ",avg:"moy: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Épingler à gauche",pinRight:"Épingler à droite",unpin:"Détacher"},gridMenu:{columns:"Colonnes:",importerTitle:"Importer un fichier",exporterAllAsCsv:"Exporter toutes les données en CSV",exporterVisibleAsCsv:"Exporter les données visibles en CSV",exporterSelectedAsCsv:"Exporter les données sélectionnées en CSV",exporterAllAsPdf:"Exporter toutes les données en PDF",exporterVisibleAsPdf:"Exporter les données visibles en PDF",exporterSelectedAsPdf:"Exporter les données sélectionnées en PDF",clearAllFilters:"Nettoyez tous les filtres"},importer:{noHeaders:"Impossible de déterminer le nom des colonnes, le fichier possède-t-il une en-tête ?",noObjects:"Aucun objet trouvé, le fichier possède-t-il des données autres que l'en-tête ?",invalidCsv:"Le fichier n'a pas pu être traité, le CSV est-il valide ?",invalidJson:"Le fichier n'a pas pu être traité, le JSON est-il valide ?",jsonNotArray:"Le fichier JSON importé doit contenir un tableau, abandon."},pagination:{sizes:"éléments par page",totalItems:"éléments",of:"sur"},grouping:{group:"Grouper",ungroup:"Dégrouper",aggregate_count:"Agg: Compte",aggregate_sum:"Agg: Somme",aggregate_max:"Agg: Max",aggregate_min:"Agg: Min",aggregate_avg:"Agg: Moy",aggregate_remove:"Agg: Retirer"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("he",{aggregate:{label:"items"},groupPanel:{description:"גרור עמודה לכאן ושחרר בכדי לקבץ עמודה זו."},search:{placeholder:"חפש...",showingItems:"מציג:",selectedItems:'סה"כ נבחרו:',totalItems:'סה"כ רשומות:',size:"תוצאות בדף:",first:"דף ראשון",next:"דף הבא",previous:"דף קודם",last:"דף אחרון"},menu:{text:"בחר עמודות:"},sort:{ascending:"סדר עולה",descending:"סדר יורד",remove:"בטל"},column:{hide:"טור הסתר"},aggregation:{count:"total rows: ",sum:"total: ",avg:"avg: ",min:"min: ",max:"max: "},gridMenu:{columns:"Columns:",importerTitle:"Import file",exporterAllAsCsv:"Export all data as csv",exporterVisibleAsCsv:"Export visible data as csv",exporterSelectedAsCsv:"Export selected data as csv",exporterAllAsPdf:"Export all data as pdf",exporterVisibleAsPdf:"Export visible data as pdf",exporterSelectedAsPdf:"Export selected data as pdf",clearAllFilters:"Clean all filters"},importer:{noHeaders:"Column names were unable to be derived, does the file have a header?",noObjects:"Objects were not able to be derived, was there data in the file other than headers?",invalidCsv:"File was unable to be processed, is it valid CSV?",invalidJson:"File was unable to be processed, is it valid Json?",jsonNotArray:"Imported json file must contain an array, aborting."}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("hy",{aggregate:{label:"տվյալներ"},groupPanel:{description:"Ըստ սյան խմբավորելու համար քաշեք և գցեք վերնագիրն այստեղ։"},search:{placeholder:"Փնտրում...",showingItems:"Ցուցադրված տվյալներ՝",selectedItems:"Ընտրված:",totalItems:"Ընդամենը՝",size:"Տողերի քանակը էջում՝",first:"Առաջին էջ",next:"Հաջորդ էջ",previous:"Նախորդ էջ",last:"Վերջին էջ"},menu:{text:"Ընտրել սյուները:"},sort:{ascending:"Աճման կարգով",descending:"Նվազման կարգով",remove:"Հանել "},column:{hide:"Թաքցնել սյունը"},aggregation:{count:"ընդամենը տող՝ ",sum:"ընդամենը՝ ",avg:"միջին՝ ",min:"մին՝ ",max:"մաքս՝ "},pinning:{pinLeft:"Կպցնել ձախ կողմում",pinRight:"Կպցնել աջ կողմում",unpin:"Արձակել"},gridMenu:{columns:"Սյուներ:",importerTitle:"Ներմուծել ֆայլ",exporterAllAsCsv:"Արտահանել ամբողջը CSV",exporterVisibleAsCsv:"Արտահանել երևացող տվյալները CSV",exporterSelectedAsCsv:"Արտահանել ընտրված տվյալները CSV",exporterAllAsPdf:"Արտահանել PDF",exporterVisibleAsPdf:"Արտահանել երևացող տվյալները PDF",exporterSelectedAsPdf:"Արտահանել ընտրված տվյալները PDF",clearAllFilters:"Մաքրել բոլոր ֆիլտրերը"},importer:{noHeaders:"Հնարավոր չեղավ որոշել սյան վերնագրերը։ Արդյո՞ք ֆայլը ունի վերնագրեր։",noObjects:"Հնարավոր չեղավ կարդալ տվյալները։ Արդյո՞ք ֆայլում կան տվյալներ։",invalidCsv:"Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր CSV է։",invalidJson:"Հնարավոր չեղավ մշակել ֆայլը։ Արդյո՞ք այն վավեր Json է։",jsonNotArray:"Ներմուծված json ֆայլը պետք է պարունակի զանգված, կասեցվում է։"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("it",{aggregate:{label:"elementi"},groupPanel:{description:"Trascina un'intestazione all'interno del gruppo della colonna."},search:{placeholder:"Ricerca...",showingItems:"Mostra:",selectedItems:"Selezionati:",totalItems:"Totali:",size:"Tot Pagine:",first:"Prima",next:"Prossima",previous:"Precedente",last:"Ultima"},menu:{text:"Scegli le colonne:"},sort:{ascending:"Asc.",descending:"Desc.",remove:"Annulla ordinamento"},column:{hide:"Nascondi"},aggregation:{count:"righe totali: ",sum:"tot: ",avg:"media: ",min:"minimo: ",max:"massimo: "},pinning:{pinLeft:"Blocca a sx",pinRight:"Blocca a dx",unpin:"Blocca in alto"},gridMenu:{columns:"Colonne:",importerTitle:"Importa",exporterAllAsCsv:"Esporta tutti i dati in CSV",exporterVisibleAsCsv:"Esporta i dati visibili in CSV",exporterSelectedAsCsv:"Esporta i dati selezionati in CSV",exporterAllAsPdf:"Esporta tutti i dati in PDF",exporterVisibleAsPdf:"Esporta i dati visibili in PDF",exporterSelectedAsPdf:"Esporta i dati selezionati in PDF",clearAllFilters:"Pulire tutti i filtri"},importer:{noHeaders:"Impossibile reperire i nomi delle colonne, sicuro che siano indicati all'interno del file?",noObjects:"Impossibile reperire gli oggetti, sicuro che siano indicati all'interno del file?",invalidCsv:"Impossibile elaborare il file, sicuro che sia un CSV?",invalidJson:"Impossibile elaborare il file, sicuro che sia un JSON valido?",jsonNotArray:"Errore! Il file JSON da importare deve contenere un array."},grouping:{group:"Raggruppa",ungroup:"Separa",aggregate_count:"Agg: N. Elem.",aggregate_sum:"Agg: Somma",aggregate_max:"Agg: Massimo",aggregate_min:"Agg: Minimo",aggregate_avg:"Agg: Media",aggregate_remove:"Agg: Rimuovi"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("ja",{aggregate:{label:"項目"},groupPanel:{description:"ここに列ヘッダをドラッグアンドドロップして、その列でグループ化します。"},search:{placeholder:"検索...",showingItems:"表示中の項目:",selectedItems:"選択した項目:",totalItems:"項目の総数:",size:"ページサイズ:",first:"最初のページ",next:"次のページ",previous:"前のページ",last:"前のページ"},menu:{text:"列の選択:"},sort:{ascending:"昇順に並べ替え",descending:"降順に並べ替え",remove:"並べ替えの解除"},column:{hide:"列の非表示"},aggregation:{count:"合計行数: ",sum:"合計: ",avg:"平均: ",min:"最小: ",max:"最大: "},pinning:{pinLeft:"左に固定",pinRight:"右に固定",unpin:"固定解除"},gridMenu:{columns:"列:",importerTitle:"ファイルのインポート",exporterAllAsCsv:"すべてのデータをCSV形式でエクスポート",exporterVisibleAsCsv:"表示中のデータをCSV形式でエクスポート",exporterSelectedAsCsv:"選択したデータをCSV形式でエクスポート",exporterAllAsPdf:"すべてのデータをPDF形式でエクスポート",exporterVisibleAsPdf:"表示中のデータをPDF形式でエクスポート",exporterSelectedAsPdf:"選択したデータをPDF形式でエクスポート",clearAllFilters:"すべてのフィルタを清掃してください"},importer:{noHeaders:"列名を取得できません。ファイルにヘッダが含まれていることを確認してください。",noObjects:"オブジェクトを取得できません。ファイルにヘッダ以外のデータが含まれていることを確認してください。",invalidCsv:"ファイルを処理できません。ファイルが有効なCSV形式であることを確認してください。",invalidJson:"ファイルを処理できません。ファイルが有効なJSON形式であることを確認してください。",jsonNotArray:"インポートしたJSONファイルには配列が含まれている必要があります。処理を中止します。"},pagination:{sizes:"項目/ページ",totalItems:"項目"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("ko",{aggregate:{label:"아이템"},groupPanel:{description:"컬럼으로 그룹핑하기 위해서는 컬럼 헤더를 끌어 떨어뜨려 주세요."},search:{placeholder:"검색...",showingItems:"항목 보여주기:",selectedItems:"선택 항목:",totalItems:"전체 항목:",size:"페이지 크기:",first:"첫번째 페이지",next:"다음 페이지",previous:"이전 페이지",last:"마지막 페이지"},menu:{text:"컬럼을 선택하세요:"},sort:{ascending:"오름차순 정렬",descending:"내림차순 정렬",remove:"소팅 제거"},column:{hide:"컬럼 제거"},aggregation:{count:"전체 갯수: ",sum:"전체: ",avg:"평균: ",min:"최소: ",max:"최대: "},pinning:{pinLeft:"왼쪽 핀",pinRight:"오른쪽 핀",unpin:"핀 제거"},gridMenu:{columns:"컬럼:",importerTitle:"파일 가져오기",exporterAllAsCsv:"csv로 모든 데이터 내보내기",exporterVisibleAsCsv:"csv로 보이는 데이터 내보내기",exporterSelectedAsCsv:"csv로 선택된 데이터 내보내기",exporterAllAsPdf:"pdf로 모든 데이터 내보내기",exporterVisibleAsPdf:"pdf로 보이는 데이터 내보내기",exporterSelectedAsPdf:"pdf로 선택 데이터 내보내기",clearAllFilters:"모든 필터를 청소"},importer:{noHeaders:"컬럼명이 지정되어 있지 않습니다. 파일에 헤더가 명시되어 있는지 확인해 주세요.",noObjects:"데이터가 지정되어 있지 않습니다. 데이터가 파일에 있는지 확인해 주세요.",invalidCsv:"파일을 처리할 수 없습니다. 올바른 csv인지 확인해 주세요.",invalidJson:"파일을 처리할 수 없습니다. 올바른 json인지 확인해 주세요.",jsonNotArray:"json 파일은 배열을 포함해야 합니다."},pagination:{sizes:"페이지당 항목",totalItems:"전체 항목"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("nl",{aggregate:{label:"items"},groupPanel:{description:"Sleep hier een kolomnaam heen om op te groeperen."},search:{placeholder:"Zoeken...",showingItems:"Getoonde items:",selectedItems:"Geselecteerde items:",totalItems:"Totaal aantal items:",size:"Items per pagina:",first:"Eerste pagina",next:"Volgende pagina",previous:"Vorige pagina",last:"Laatste pagina"},menu:{text:"Kies kolommen:"},sort:{ascending:"Sorteer oplopend",descending:"Sorteer aflopend",remove:"Verwijder sortering"},column:{hide:"Verberg kolom"},aggregation:{count:"Aantal rijen: ",sum:"Som: ",avg:"Gemiddelde: ",min:"Min: ",max:"Max: "},pinning:{pinLeft:"Zet links vast",pinRight:"Zet rechts vast",unpin:"Maak los"},gridMenu:{columns:"Kolommen:",importerTitle:"Importeer bestand",exporterAllAsCsv:"Exporteer alle data als csv",exporterVisibleAsCsv:"Exporteer zichtbare data als csv",exporterSelectedAsCsv:"Exporteer geselecteerde data als csv",exporterAllAsPdf:"Exporteer alle data als pdf",exporterVisibleAsPdf:"Exporteer zichtbare data als pdf",exporterSelectedAsPdf:"Exporteer geselecteerde data als pdf",clearAllFilters:"Reinig alle filters"},importer:{noHeaders:"Kolomnamen kunnen niet worden afgeleid. Heeft het bestand een header?",noObjects:"Objecten kunnen niet worden afgeleid. Bevat het bestand data naast de headers?",invalidCsv:"Het bestand kan niet verwerkt worden. Is het een valide csv bestand?",invalidJson:"Het bestand kan niet verwerkt worden. Is het valide json?",jsonNotArray:"Het json bestand moet een array bevatten. De actie wordt geannuleerd."},pagination:{sizes:"items per pagina",totalItems:"items",of:"van de"},grouping:{group:"Groepeer",ungroup:"Groepering opheffen",aggregate_count:"Agg: Aantal",aggregate_sum:"Agg: Som",aggregate_max:"Agg: Max",aggregate_min:"Agg: Min",aggregate_avg:"Agg: Gem",aggregate_remove:"Agg: Verwijder"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("pt-br",{aggregate:{label:"itens"},groupPanel:{description:"Arraste e solte uma coluna aqui para agrupar por essa coluna"},search:{placeholder:"Procurar...",showingItems:"Mostrando os Itens:",selectedItems:"Items Selecionados:",totalItems:"Total de Itens:",size:"Tamanho da Página:",first:"Primeira Página",next:"Próxima Página",previous:"Página Anterior",last:"Última Página"},menu:{text:"Selecione as colunas:"},sort:{ascending:"Ordenar Ascendente",descending:"Ordenar Descendente",remove:"Remover Ordenação"},column:{hide:"Esconder coluna"},aggregation:{count:"total de linhas: ",sum:"total: ",avg:"med: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Fixar Esquerda",pinRight:"Fixar Direita",unpin:"Desprender"},gridMenu:{columns:"Colunas:",importerTitle:"Importar arquivo",exporterAllAsCsv:"Exportar todos os dados como csv",exporterVisibleAsCsv:"Exportar dados visíveis como csv",exporterSelectedAsCsv:"Exportar dados selecionados como csv",exporterAllAsPdf:"Exportar todos os dados como pdf",exporterVisibleAsPdf:"Exportar dados visíveis como pdf",exporterSelectedAsPdf:"Exportar dados selecionados como pdf",clearAllFilters:"Limpar todos os filtros"},importer:{noHeaders:"Nomes de colunas não puderam ser derivados. O arquivo tem um cabeçalho?",noObjects:"Objetos não puderam ser derivados. Havia dados no arquivo, além dos cabeçalhos?",invalidCsv:"Arquivo não pode ser processado. É um CSV válido?",invalidJson:"Arquivo não pode ser processado. É um Json válido?",jsonNotArray:"Arquivo json importado tem que conter um array. Abortando."},pagination:{sizes:"itens por página",totalItems:"itens"},grouping:{group:"Agrupar",ungroup:"Desagrupar",aggregate_count:"Agr: Contar",aggregate_sum:"Agr: Soma",aggregate_max:"Agr: Max",aggregate_min:"Agr: Min",aggregate_avg:"Agr: Med",aggregate_remove:"Agr: Remover"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("pt",{aggregate:{label:"itens"},groupPanel:{description:"Arraste e solte uma coluna aqui para agrupar por essa coluna"},search:{placeholder:"Procurar...",showingItems:"Mostrando os Itens:",selectedItems:"Itens Selecionados:",totalItems:"Total de Itens:",size:"Tamanho da Página:",first:"Primeira Página",next:"Próxima Página",previous:"Página Anterior",last:"Última Página"},menu:{text:"Selecione as colunas:"},sort:{ascending:"Ordenar Ascendente",descending:"Ordenar Descendente",remove:"Remover Ordenação"},column:{hide:"Esconder coluna"},aggregation:{count:"total de linhas: ",sum:"total: ",avg:"med: ",min:"min: ",max:"max: "},pinning:{pinLeft:"Fixar Esquerda",pinRight:"Fixar Direita",unpin:"Desprender"},gridMenu:{columns:"Colunas:",importerTitle:"Importar ficheiro",exporterAllAsCsv:"Exportar todos os dados como csv",exporterVisibleAsCsv:"Exportar dados visíveis como csv",exporterSelectedAsCsv:"Exportar dados selecionados como csv",exporterAllAsPdf:"Exportar todos os dados como pdf",exporterVisibleAsPdf:"Exportar dados visíveis como pdf",exporterSelectedAsPdf:"Exportar dados selecionados como pdf",clearAllFilters:"Limpar todos os filtros"},importer:{noHeaders:"Nomes de colunas não puderam ser derivados. O ficheiro tem um cabeçalho?",noObjects:"Objetos não puderam ser derivados. Havia dados no ficheiro, além dos cabeçalhos?",invalidCsv:"Ficheiro não pode ser processado. É um CSV válido?",invalidJson:"Ficheiro não pode ser processado. É um Json válido?",jsonNotArray:"Ficheiro json importado tem que conter um array. Interrompendo."},pagination:{sizes:"itens por página",totalItems:"itens",of:"de"},grouping:{group:"Agrupar",ungroup:"Desagrupar",aggregate_count:"Agr: Contar",aggregate_sum:"Agr: Soma",aggregate_max:"Agr: Max",aggregate_min:"Agr: Min",aggregate_avg:"Agr: Med",aggregate_remove:"Agr: Remover"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("ru",{aggregate:{label:"элементы"},groupPanel:{description:"Для группировки по столбцу перетащите сюда его название."},search:{placeholder:"Поиск...",showingItems:"Показать элементы:",selectedItems:"Выбранные элементы:",totalItems:"Всего элементов:",size:"Размер страницы:",first:"Первая страница",next:"Следующая страница",previous:"Предыдущая страница",last:"Последняя страница"},menu:{text:"Выбрать столбцы:"},sort:{ascending:"По возрастанию",descending:"По убыванию",remove:"Убрать сортировку"},column:{hide:"Спрятать столбец"},aggregation:{count:"всего строк: ",sum:"итого: ",avg:"среднее: ",min:"мин: ",max:"макс: "},pinning:{pinLeft:"Закрепить слева",pinRight:"Закрепить справа",unpin:"Открепить"},gridMenu:{columns:"Столбцы:",importerTitle:"Import file",exporterAllAsCsv:"Экспортировать всё в CSV",exporterVisibleAsCsv:"Экспортировать видимые данные в CSV",exporterSelectedAsCsv:"Экспортировать выбранные данные в CSV",exporterAllAsPdf:"Экспортировать всё в PDF",exporterVisibleAsPdf:"Экспортировать видимые данные в PDF",exporterSelectedAsPdf:"Экспортировать выбранные данные в PDF",clearAllFilters:"Очистите все фильтры"},importer:{noHeaders:"Column names were unable to be derived, does the file have a header?",noObjects:"Objects were not able to be derived, was there data in the file other than headers?",invalidCsv:"File was unable to be processed, is it valid CSV?",invalidJson:"File was unable to be processed, is it valid Json?",jsonNotArray:"Imported json file must contain an array, aborting."}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("sk",{aggregate:{label:"items"},groupPanel:{description:"Pretiahni sem názov stĺpca pre zoskupenie podľa toho stĺpca."},search:{placeholder:"Hľadaj...",showingItems:"Zobrazujem položky:",selectedItems:"Vybraté položky:",totalItems:"Počet položiek:",size:"Počet:",first:"Prvá strana",next:"Ďalšia strana",previous:"Predchádzajúca strana",last:"Posledná strana"},menu:{text:"Vyberte stĺpce:"},sort:{ascending:"Zotriediť vzostupne",descending:"Zotriediť zostupne",remove:"Vymazať triedenie"},aggregation:{count:"total rows: ",sum:"total: ",avg:"avg: ",min:"min: ",max:"max: "},gridMenu:{columns:"Columns:",importerTitle:"Import file",exporterAllAsCsv:"Export all data as csv",exporterVisibleAsCsv:"Export visible data as csv",exporterSelectedAsCsv:"Export selected data as csv",exporterAllAsPdf:"Export all data as pdf",exporterVisibleAsPdf:"Export visible data as pdf",exporterSelectedAsPdf:"Export selected data as pdf",clearAllFilters:"Clear all filters"},importer:{noHeaders:"Column names were unable to be derived, does the file have a header?",noObjects:"Objects were not able to be derived, was there data in the file other than headers?",invalidCsv:"File was unable to be processed, is it valid CSV?",invalidJson:"File was unable to be processed, is it valid Json?",jsonNotArray:"Imported json file must contain an array, aborting."}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("sv",{aggregate:{label:"Artiklar"},groupPanel:{description:"Dra en kolumnrubrik hit och släpp den för att gruppera efter den kolumnen."},search:{placeholder:"Sök...",showingItems:"Visar artiklar:",selectedItems:"Valda artiklar:",totalItems:"Antal artiklar:",size:"Sidstorlek:",first:"Första sidan",next:"Nästa sida",previous:"Föregående sida",last:"Sista sidan"},menu:{text:"Välj kolumner:"},sort:{ascending:"Sortera stigande",descending:"Sortera fallande",remove:"Inaktivera sortering"},column:{hide:"Göm kolumn"},aggregation:{count:"Antal rader: ",sum:"Summa: ",avg:"Genomsnitt: ",min:"Min: ",max:"Max: "},pinning:{pinLeft:"Fäst vänster",pinRight:"Fäst höger",unpin:"Lösgör"},gridMenu:{columns:"Kolumner:",importerTitle:"Importera fil",exporterAllAsCsv:"Exportera all data som CSV",exporterVisibleAsCsv:"Exportera synlig data som CSV",exporterSelectedAsCsv:"Exportera markerad data som CSV",exporterAllAsPdf:"Exportera all data som PDF",exporterVisibleAsPdf:"Exportera synlig data som PDF",exporterSelectedAsPdf:"Exportera markerad data som PDF",clearAllFilters:"Rengör alla filter"},importer:{noHeaders:"Kolumnnamn kunde inte härledas. Har filen ett sidhuvud?",noObjects:"Objekt kunde inte härledas. Har filen data undantaget sidhuvud?",invalidCsv:"Filen kunde inte behandlas, är den en giltig CSV?",invalidJson:"Filen kunde inte behandlas, är den en giltig JSON?",jsonNotArray:"Importerad JSON-fil måste innehålla ett fält. Import avbruten."},pagination:{sizes:"Artiklar per sida",totalItems:"Artiklar"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("ta",{aggregate:{label:"உருப்படிகள்"},groupPanel:{description:"ஒரு பத்தியை குழுவாக அமைக்க அப்பத்தியின் தலைப்பை இங்கே  இழுத்து வரவும் "},search:{placeholder:"தேடல் ...",showingItems:"உருப்படிகளை காண்பித்தல்:",selectedItems:"தேர்ந்தெடுக்கப்பட்ட  உருப்படிகள்:",totalItems:"மொத்த உருப்படிகள்:",size:"பக்க அளவு: ",first:"முதல் பக்கம்",next:"அடுத்த பக்கம்",previous:"முந்தைய பக்கம் ",last:"இறுதி பக்கம்"},menu:{text:"பத்திகளை தேர்ந்தெடு:"},sort:{ascending:"மேலிருந்து கீழாக",descending:"கீழிருந்து மேலாக",remove:"வரிசையை நீக்கு"},column:{hide:"பத்தியை மறைத்து வை "},aggregation:{count:"மொத்த வரிகள்:",sum:"மொத்தம்: ",avg:"சராசரி: ",min:"குறைந்தபட்ச: ",max:"அதிகபட்ச: "},pinning:{pinLeft:"இடதுபுறமாக தைக்க ",pinRight:"வலதுபுறமாக தைக்க",unpin:"பிரி"},gridMenu:{columns:"பத்திகள்:",importerTitle:"கோப்பு : படித்தல்",exporterAllAsCsv:"எல்லா தரவுகளையும் கோப்பாக்கு: csv",exporterVisibleAsCsv:"இருக்கும் தரவுகளை கோப்பாக்கு: csv",exporterSelectedAsCsv:"தேர்ந்தெடுத்த தரவுகளை கோப்பாக்கு: csv",exporterAllAsPdf:"எல்லா தரவுகளையும் கோப்பாக்கு: pdf",exporterVisibleAsPdf:"இருக்கும் தரவுகளை கோப்பாக்கு: pdf",exporterSelectedAsPdf:"தேர்ந்தெடுத்த தரவுகளை கோப்பாக்கு: pdf",clearAllFilters:"Clear all filters"},importer:{noHeaders:"பத்தியின் தலைப்புகளை பெற இயலவில்லை, கோப்பிற்கு தலைப்பு உள்ளதா?",noObjects:"இலக்குகளை உருவாக்க முடியவில்லை, கோப்பில் தலைப்புகளை தவிர தரவு ஏதேனும் உள்ளதா? ",invalidCsv:"சரிவர நடைமுறை படுத்த இயலவில்லை, கோப்பு சரிதானா? - csv",invalidJson:"சரிவர நடைமுறை படுத்த இயலவில்லை, கோப்பு சரிதானா? - json",jsonNotArray:"படித்த கோப்பில் வரிசைகள் உள்ளது, நடைமுறை ரத்து செய் : json"},pagination:{sizes:"உருப்படிகள் / பக்கம்",totalItems:"உருப்படிகள் "},grouping:{group:"குழு",ungroup:"பிரி",aggregate_count:"மதிப்பீட்டு : எண்ணு",aggregate_sum:"மதிப்பீட்டு : கூட்டல்",aggregate_max:"மதிப்பீட்டு : அதிகபட்சம்",aggregate_min:"மதிப்பீட்டு : குறைந்தபட்சம்",aggregate_avg:"மதிப்பீட்டு : சராசரி",aggregate_remove:"மதிப்பீட்டு : நீக்கு"}}),$delegate}])}])}(),function(){var DIRECTIVE_ALIASES=["uiT","uiTranslate"],FILTER_ALIASES=["t","uiTranslate"],module=angular.module("ui.grid.i18n");module.constant("i18nConstants",{MISSING:"[MISSING]",UPDATE_EVENT:"$uiI18n",LOCALE_DIRECTIVE_ALIAS:"uiI18n",DEFAULT_LANG:"en"}),module.service("i18nService",["$log","i18nConstants","$rootScope",function($log,i18nConstants,$rootScope){var langCache={_langs:{},current:null,get:function(lang){return this._langs[lang.toLowerCase()]},add:function(lang,strings){var lower=lang.toLowerCase();this._langs[lower]||(this._langs[lower]={}),angular.extend(this._langs[lower],strings)},getAllLangs:function(){var langs=[];if(!this._langs)return langs;for(var key in this._langs)langs.push(key);return langs},setCurrent:function(lang){this.current=lang.toLowerCase()},getCurrentLang:function(){return this.current}},service={add:function(langs,stringMaps){"object"==typeof langs?angular.forEach(langs,function(lang){lang&&langCache.add(lang,stringMaps)}):langCache.add(langs,stringMaps)},getAllLangs:function(){return langCache.getAllLangs()},get:function(lang){var language=lang?lang:service.getCurrentLang();return langCache.get(language)},getSafeText:function(path,lang){var language=lang?lang:service.getCurrentLang(),trans=langCache.get(language);if(!trans)return i18nConstants.MISSING;for(var paths=path.split("."),current=trans,i=0;i<paths.length;++i){if(void 0===current[paths[i]]||null===current[paths[i]])return i18nConstants.MISSING;current=current[paths[i]]}return current},setCurrentLang:function(lang){lang&&(langCache.setCurrent(lang),$rootScope.$broadcast(i18nConstants.UPDATE_EVENT))},getCurrentLang:function(){var lang=langCache.getCurrentLang();return lang||(lang=i18nConstants.DEFAULT_LANG,langCache.setCurrent(lang)),lang}};return service}]);var localeDirective=function(i18nService,i18nConstants){return{compile:function(){return{pre:function($scope,$elm,$attrs){var alias=i18nConstants.LOCALE_DIRECTIVE_ALIAS,lang=$scope.$eval($attrs[alias]);lang?$scope.$watch($attrs[alias],function(){i18nService.setCurrentLang(lang)}):$attrs.$$observers&&$attrs.$observe(alias,function(){i18nService.setCurrentLang($attrs[alias]||i18nConstants.DEFAULT_LANG)})}}}}};module.directive("uiI18n",["i18nService","i18nConstants",localeDirective]);var uitDirective=function($parse,i18nService,i18nConstants){return{restrict:"EA",compile:function(){return{pre:function($scope,$elm,$attrs){var observer,alias1=DIRECTIVE_ALIASES[0],alias2=DIRECTIVE_ALIASES[1],token=$attrs[alias1]||$attrs[alias2]||$elm.html(),missing=i18nConstants.MISSING+token;if($attrs.$$observers){var prop=$attrs[alias1]?alias1:alias2;observer=$attrs.$observe(prop,function(result){result&&$elm.html($parse(result)(i18nService.getCurrentLang())||missing)})}var getter=$parse(token),listener=$scope.$on(i18nConstants.UPDATE_EVENT,function(evt){observer?observer($attrs[alias1]||$attrs[alias2]):$elm.html(getter(i18nService.get())||missing)});$scope.$on("$destroy",listener),$elm.html(getter(i18nService.get())||missing)}}}}};angular.forEach(DIRECTIVE_ALIASES,function(alias){module.directive(alias,["$parse","i18nService","i18nConstants",uitDirective])});var uitFilter=function($parse,i18nService,i18nConstants){return function(data){var getter=$parse(data);return getter(i18nService.get())||i18nConstants.MISSING+data}};angular.forEach(FILTER_ALIASES,function(alias){module.filter(alias,["$parse","i18nService","i18nConstants",uitFilter])})}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("zh-cn",{headerCell:{aria:{defaultFilterLabel:"列过滤器",removeFilter:"移除过滤器",columnMenuButtonLabel:"列菜单"},priority:"优先级:",filterLabel:"列过滤器: "},aggregate:{label:"行"},groupPanel:{description:"拖曳表头到此处进行分组"},search:{placeholder:"查找",showingItems:"已显示行数：",selectedItems:"已选择行数：",totalItems:"总行数：",size:"每页显示行数：",first:"首页",next:"下一页",previous:"上一页",last:"末页"},menu:{text:"选择列："},sort:{ascending:"升序",descending:"降序",none:"无序",remove:"取消排序"},column:{hide:"隐藏列"},aggregation:{count:"计数：",sum:"求和：",avg:"均值：",min:"最小值：",max:"最大值："},pinning:{pinLeft:"左侧固定",pinRight:"右侧固定",unpin:"取消固定"},columnMenu:{close:"关闭"},gridMenu:{aria:{buttonLabel:"表格菜单"},columns:"列：",importerTitle:"导入文件",exporterAllAsCsv:"导出全部数据到CSV",exporterVisibleAsCsv:"导出可见数据到CSV",exporterSelectedAsCsv:"导出已选数据到CSV",exporterAllAsPdf:"导出全部数据到PDF",exporterVisibleAsPdf:"导出可见数据到PDF",exporterSelectedAsPdf:"导出已选数据到PDF",clearAllFilters:"清除所有过滤器"},importer:{noHeaders:"无法获取列名，确定文件包含表头？",noObjects:"无法获取数据，确定文件包含数据？",invalidCsv:"无法处理文件，确定是合法的CSV文件？",invalidJson:"无法处理文件，确定是合法的JSON文件？",jsonNotArray:"导入的文件不是JSON数组！"},pagination:{aria:{pageToFirst:"第一页",
pageBack:"上一页",pageSelected:"当前页",pageForward:"下一页",pageToLast:"最后一页"},sizes:"行每页",totalItems:"行",through:"至",of:"共"},grouping:{group:"分组",ungroup:"取消分组",aggregate_count:"合计: 计数",aggregate_sum:"合计: 求和",aggregate_max:"合计: 最大",aggregate_min:"合计: 最小",aggregate_avg:"合计: 平均",aggregate_remove:"合计: 移除"}}),$delegate}])}])}(),function(){angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("i18nService",["$delegate",function($delegate){return $delegate.add("zh-tw",{aggregate:{label:"行"},groupPanel:{description:"拖曳表頭到此處進行分組"},search:{placeholder:"查找",showingItems:"已顯示行數：",selectedItems:"已選擇行數：",totalItems:"總行數：",size:"每頁顯示行數：",first:"首頁",next:"下壹頁",previous:"上壹頁",last:"末頁"},menu:{text:"選擇列："},sort:{ascending:"升序",descending:"降序",remove:"取消排序"},column:{hide:"隱藏列"},aggregation:{count:"計數：",sum:"求和：",avg:"均值：",min:"最小值：",max:"最大值："},pinning:{pinLeft:"左側固定",pinRight:"右側固定",unpin:"取消固定"},gridMenu:{columns:"列：",importerTitle:"導入文件",exporterAllAsCsv:"導出全部數據到CSV",exporterVisibleAsCsv:"導出可見數據到CSV",exporterSelectedAsCsv:"導出已選數據到CSV",exporterAllAsPdf:"導出全部數據到PDF",exporterVisibleAsPdf:"導出可見數據到PDF",exporterSelectedAsPdf:"導出已選數據到PDF",clearAllFilters:"清除所有过滤器"},importer:{noHeaders:"無法獲取列名，確定文件包含表頭？",noObjects:"無法獲取數據，確定文件包含數據？",invalidCsv:"無法處理文件，確定是合法的CSV文件？",invalidJson:"無法處理文件，確定是合法的JSON文件？",jsonNotArray:"導入的文件不是JSON數組！"},pagination:{sizes:"行每頁",totalItems:"行"}}),$delegate}])}])}(),function(){"use strict";var module=angular.module("ui.grid.autoResize",["ui.grid"]);module.directive("uiGridAutoResize",["$timeout","gridUtil",function($timeout,gridUtil){return{require:"uiGrid",scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){function getDimensions(){prevGridHeight=gridUtil.elementHeight($elm),prevGridWidth=gridUtil.elementWidth($elm)}function startTimeout(){clearTimeout(resizeTimeoutId),resizeTimeoutId=setTimeout(function(){var newGridHeight=gridUtil.elementHeight($elm),newGridWidth=gridUtil.elementWidth($elm);newGridHeight!==prevGridHeight||newGridWidth!==prevGridWidth?(uiGridCtrl.grid.gridHeight=newGridHeight,uiGridCtrl.grid.gridWidth=newGridWidth,$scope.$apply(function(){uiGridCtrl.grid.refresh().then(function(){getDimensions(),startTimeout()})})):startTimeout()},250)}var prevGridWidth,prevGridHeight;getDimensions();var resizeTimeoutId;startTimeout(),$scope.$on("$destroy",function(){clearTimeout(resizeTimeoutId)})}}}])}(),function(){"use strict";var module=angular.module("ui.grid.cellNav",["ui.grid"]);module.constant("uiGridCellNavConstants",{FEATURE_NAME:"gridCellNav",CELL_NAV_EVENT:"cellNav",direction:{LEFT:0,RIGHT:1,UP:2,DOWN:3,PG_UP:4,PG_DOWN:5},EVENT_TYPE:{KEYDOWN:0,CLICK:1,CLEAR:2}}),module.factory("uiGridCellNavFactory",["gridUtil","uiGridConstants","uiGridCellNavConstants","GridRowColumn","$q",function(gridUtil,uiGridConstants,uiGridCellNavConstants,GridRowColumn,$q){var UiGridCellNav=function(rowContainer,colContainer,leftColContainer,rightColContainer){this.rows=rowContainer.visibleRowCache,this.columns=colContainer.visibleColumnCache,this.leftColumns=leftColContainer?leftColContainer.visibleColumnCache:[],this.rightColumns=rightColContainer?rightColContainer.visibleColumnCache:[],this.bodyContainer=rowContainer};return UiGridCellNav.prototype.getFocusableCols=function(){var allColumns=this.leftColumns.concat(this.columns,this.rightColumns);return allColumns.filter(function(col){return col.colDef.allowCellFocus})},UiGridCellNav.prototype.getFocusableRows=function(){return this.rows.filter(function(row){return row.allowCellFocus!==!1})},UiGridCellNav.prototype.getNextRowCol=function(direction,curRow,curCol){switch(direction){case uiGridCellNavConstants.direction.LEFT:return this.getRowColLeft(curRow,curCol);case uiGridCellNavConstants.direction.RIGHT:return this.getRowColRight(curRow,curCol);case uiGridCellNavConstants.direction.UP:return this.getRowColUp(curRow,curCol);case uiGridCellNavConstants.direction.DOWN:return this.getRowColDown(curRow,curCol);case uiGridCellNavConstants.direction.PG_UP:return this.getRowColPageUp(curRow,curCol);case uiGridCellNavConstants.direction.PG_DOWN:return this.getRowColPageDown(curRow,curCol)}},UiGridCellNav.prototype.initializeSelection=function(){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows();if(0===focusableCols.length||0===focusableRows.length)return null;return new GridRowColumn(focusableRows[0],focusableCols[0])},UiGridCellNav.prototype.getRowColLeft=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);curColIndex===-1&&(curColIndex=1);var nextColIndex=0===curColIndex?focusableCols.length-1:curColIndex-1;return nextColIndex>curColIndex?0===curRowIndex?new GridRowColumn(curRow,focusableCols[nextColIndex]):new GridRowColumn(focusableRows[curRowIndex-1],focusableCols[nextColIndex]):new GridRowColumn(curRow,focusableCols[nextColIndex])},UiGridCellNav.prototype.getRowColRight=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);curColIndex===-1&&(curColIndex=0);var nextColIndex=curColIndex===focusableCols.length-1?0:curColIndex+1;return nextColIndex<curColIndex?curRowIndex===focusableRows.length-1?new GridRowColumn(curRow,focusableCols[nextColIndex]):new GridRowColumn(focusableRows[curRowIndex+1],focusableCols[nextColIndex]):new GridRowColumn(curRow,focusableCols[nextColIndex])},UiGridCellNav.prototype.getRowColDown=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);return curColIndex===-1&&(curColIndex=0),curRowIndex===focusableRows.length-1?new GridRowColumn(curRow,focusableCols[curColIndex]):new GridRowColumn(focusableRows[curRowIndex+1],focusableCols[curColIndex])},UiGridCellNav.prototype.getRowColPageDown=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);curColIndex===-1&&(curColIndex=0);var pageSize=this.bodyContainer.minRowsToRender();return curRowIndex>=focusableRows.length-pageSize?new GridRowColumn(focusableRows[focusableRows.length-1],focusableCols[curColIndex]):new GridRowColumn(focusableRows[curRowIndex+pageSize],focusableCols[curColIndex])},UiGridCellNav.prototype.getRowColUp=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);return curColIndex===-1&&(curColIndex=0),0===curRowIndex?new GridRowColumn(curRow,focusableCols[curColIndex]):new GridRowColumn(focusableRows[curRowIndex-1],focusableCols[curColIndex])},UiGridCellNav.prototype.getRowColPageUp=function(curRow,curCol){var focusableCols=this.getFocusableCols(),focusableRows=this.getFocusableRows(),curColIndex=focusableCols.indexOf(curCol),curRowIndex=focusableRows.indexOf(curRow);curColIndex===-1&&(curColIndex=0);var pageSize=this.bodyContainer.minRowsToRender();return curRowIndex-pageSize<0?new GridRowColumn(focusableRows[0],focusableCols[curColIndex]):new GridRowColumn(focusableRows[curRowIndex-pageSize],focusableCols[curColIndex])},UiGridCellNav}]),module.service("uiGridCellNavService",["gridUtil","uiGridConstants","uiGridCellNavConstants","$q","uiGridCellNavFactory","GridRowColumn","ScrollEvent",function(gridUtil,uiGridConstants,uiGridCellNavConstants,$q,UiGridCellNav,GridRowColumn,ScrollEvent){var service={initializeGrid:function(grid){grid.registerColumnBuilder(service.cellNavColumnBuilder),grid.cellNav={},grid.cellNav.lastRowCol=null,grid.cellNav.focusedCells=[],service.defaultGridOptions(grid.options);var publicApi={events:{cellNav:{navigate:function(newRowCol,oldRowCol){},viewPortKeyDown:function(event,rowCol){},viewPortKeyPress:function(event,rowCol){}}},methods:{cellNav:{scrollToFocus:function(rowEntity,colDef){return service.scrollToFocus(grid,rowEntity,colDef)},getFocusedCell:function(){return grid.cellNav.lastRowCol},getCurrentSelection:function(){return grid.cellNav.focusedCells},rowColSelectIndex:function(rowCol){for(var index=-1,i=0;i<grid.cellNav.focusedCells.length;i++)if(grid.cellNav.focusedCells[i].col.uid===rowCol.col.uid&&grid.cellNav.focusedCells[i].row.uid===rowCol.row.uid){index=i;break}return index}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.modifierKeysToMultiSelectCells=gridOptions.modifierKeysToMultiSelectCells===!0},decorateRenderContainers:function(grid){var rightContainer=grid.hasRightContainer()?grid.renderContainers.right:null,leftContainer=grid.hasLeftContainer()?grid.renderContainers.left:null;null!==leftContainer&&(grid.renderContainers.left.cellNav=new UiGridCellNav(grid.renderContainers.body,leftContainer,rightContainer,grid.renderContainers.body)),null!==rightContainer&&(grid.renderContainers.right.cellNav=new UiGridCellNav(grid.renderContainers.body,rightContainer,grid.renderContainers.body,leftContainer)),grid.renderContainers.body.cellNav=new UiGridCellNav(grid.renderContainers.body,grid.renderContainers.body,leftContainer,rightContainer)},getDirection:function(evt){return evt.keyCode===uiGridConstants.keymap.LEFT||evt.keyCode===uiGridConstants.keymap.TAB&&evt.shiftKey?uiGridCellNavConstants.direction.LEFT:evt.keyCode===uiGridConstants.keymap.RIGHT||evt.keyCode===uiGridConstants.keymap.TAB?uiGridCellNavConstants.direction.RIGHT:evt.keyCode===uiGridConstants.keymap.UP||evt.keyCode===uiGridConstants.keymap.ENTER&&evt.shiftKey?uiGridCellNavConstants.direction.UP:evt.keyCode===uiGridConstants.keymap.PG_UP?uiGridCellNavConstants.direction.PG_UP:evt.keyCode===uiGridConstants.keymap.DOWN||evt.keyCode===uiGridConstants.keymap.ENTER&&!evt.ctrlKey&&!evt.altKey?uiGridCellNavConstants.direction.DOWN:evt.keyCode===uiGridConstants.keymap.PG_DOWN?uiGridCellNavConstants.direction.PG_DOWN:null},cellNavColumnBuilder:function(colDef,col,gridOptions){var promises=[];return colDef.allowCellFocus=void 0===colDef.allowCellFocus||colDef.allowCellFocus,$q.all(promises)},scrollToFocus:function(grid,rowEntity,colDef){var gridRow=null,gridCol=null;return"undefined"!=typeof rowEntity&&null!==rowEntity&&(gridRow=grid.getRow(rowEntity)),"undefined"!=typeof colDef&&null!==colDef&&(gridCol=grid.getColumn(colDef.name?colDef.name:colDef.field)),grid.api.core.scrollToIfNecessary(gridRow,gridCol).then(function(){var rowCol={row:gridRow,col:gridCol};null!==gridRow&&null!==gridCol&&grid.cellNav.broadcastCellNav(rowCol)})},getLeftWidth:function(grid,upToCol){var width=0;if(!upToCol)return width;var lastIndex=grid.renderContainers.body.visibleColumnCache.indexOf(upToCol);grid.renderContainers.body.visibleColumnCache.forEach(function(col,index){index<lastIndex&&(width+=col.drawnWidth)});var percentage=0===lastIndex?0:(lastIndex+1)/grid.renderContainers.body.visibleColumnCache.length;return width+=upToCol.drawnWidth*percentage}};return service}]),module.directive("uiGridCellnav",["gridUtil","uiGridCellNavService","uiGridCellNavConstants","uiGridConstants","GridRowColumn","$timeout","$compile",function(gridUtil,uiGridCellNavService,uiGridCellNavConstants,uiGridConstants,GridRowColumn,$timeout,$compile){return{replace:!0,priority:-150,require:"^uiGrid",scope:!1,controller:function(){},compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){var _scope=$scope,grid=uiGridCtrl.grid;uiGridCellNavService.initializeGrid(grid),uiGridCtrl.cellNav={},uiGridCtrl.cellNav.makeRowCol=function(obj){return obj instanceof GridRowColumn||(obj=new GridRowColumn(obj.row,obj.col)),obj},uiGridCtrl.cellNav.getActiveCell=function(){var elms=$elm[0].getElementsByClassName("ui-grid-cell-focus");if(elms.length>0)return elms[0]},uiGridCtrl.cellNav.broadcastCellNav=grid.cellNav.broadcastCellNav=function(newRowCol,modifierDown,originEvt){modifierDown=!(void 0===modifierDown||!modifierDown),newRowCol=uiGridCtrl.cellNav.makeRowCol(newRowCol),uiGridCtrl.cellNav.broadcastFocus(newRowCol,modifierDown,originEvt),_scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT,newRowCol,modifierDown,originEvt)},uiGridCtrl.cellNav.clearFocus=grid.cellNav.clearFocus=function(){grid.cellNav.focusedCells=[],_scope.$broadcast(uiGridCellNavConstants.CELL_NAV_EVENT)},uiGridCtrl.cellNav.broadcastFocus=function(rowCol,modifierDown,originEvt){modifierDown=!(void 0===modifierDown||!modifierDown),rowCol=uiGridCtrl.cellNav.makeRowCol(rowCol);var row=rowCol.row,col=rowCol.col,rowColSelectIndex=uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol);if(null===grid.cellNav.lastRowCol||rowColSelectIndex===-1){var newRowCol=new GridRowColumn(row,col);grid.api.cellNav.raise.navigate(newRowCol,grid.cellNav.lastRowCol),grid.cellNav.lastRowCol=newRowCol,uiGridCtrl.grid.options.modifierKeysToMultiSelectCells&&modifierDown?grid.cellNav.focusedCells.push(rowCol):grid.cellNav.focusedCells=[rowCol]}else grid.options.modifierKeysToMultiSelectCells&&modifierDown&&rowColSelectIndex>=0&&grid.cellNav.focusedCells.splice(rowColSelectIndex,1)},uiGridCtrl.cellNav.handleKeyDown=function(evt){var direction=uiGridCellNavService.getDirection(evt);if(null===direction)return null;var containerId="body";evt.uiGridTargetRenderContainerId&&(containerId=evt.uiGridTargetRenderContainerId);var lastRowCol=uiGridCtrl.grid.api.cellNav.getFocusedCell();if(lastRowCol){var rowCol=uiGridCtrl.grid.renderContainers[containerId].cellNav.getNextRowCol(direction,lastRowCol.row,lastRowCol.col),focusableCols=uiGridCtrl.grid.renderContainers[containerId].cellNav.getFocusableCols(),rowColSelectIndex=uiGridCtrl.grid.api.cellNav.rowColSelectIndex(rowCol);return direction===uiGridCellNavConstants.direction.LEFT&&rowCol.col===focusableCols[focusableCols.length-1]&&rowCol.row===lastRowCol.row&&evt.keyCode===uiGridConstants.keymap.TAB&&evt.shiftKey?(grid.cellNav.focusedCells.splice(rowColSelectIndex,1),uiGridCtrl.cellNav.clearFocus(),!0):direction!==uiGridCellNavConstants.direction.RIGHT||rowCol.col!==focusableCols[0]||rowCol.row!==lastRowCol.row||evt.keyCode!==uiGridConstants.keymap.TAB||evt.shiftKey?(grid.scrollToIfNecessary(rowCol.row,rowCol.col).then(function(){uiGridCtrl.cellNav.broadcastCellNav(rowCol)}),evt.stopPropagation(),evt.preventDefault(),!1):(grid.cellNav.focusedCells.splice(rowColSelectIndex,1),uiGridCtrl.cellNav.clearFocus(),!0)}}},post:function($scope,$elm,$attrs,uiGridCtrl){function addAriaLiveRegion(){var ariaNotifierDomElt='<div id="'+grid.id+'-aria-speakable" class="ui-grid-a11y-ariascreenreader-speakable ui-grid-offscreen" aria-live="assertive" role="region" aria-atomic="true" aria-hidden="false" aria-relevant="additions" >&nbsp;</div>',ariaNotifier=$compile(ariaNotifierDomElt)($scope);$elm.prepend(ariaNotifier),$scope.$on(uiGridCellNavConstants.CELL_NAV_EVENT,function(evt,rowCol,modifierDown,originEvt){function setNotifyText(text){text!==ariaNotifier.text()&&(ariaNotifier[0].style.clip="rect(0px,0px,0px,0px)",ariaNotifier[0].innerHTML="",ariaNotifier[0].style.visibility="hidden",ariaNotifier[0].style.visibility="visible",""!==text&&(ariaNotifier[0].style.clip="auto",ariaNotifier[0].appendChild(document.createTextNode(text+" ")),ariaNotifier[0].style.visibility="hidden",ariaNotifier[0].style.visibility="visible"))}if(!originEvt||"focus"!==originEvt.type){for(var values=[],currentSelection=grid.api.cellNav.getCurrentSelection(),i=0;i<currentSelection.length;i++)values.push(currentSelection[i].getIntersectionValueFiltered());var cellText=values.toString();setNotifyText(cellText)}})}var grid=uiGridCtrl.grid;addAriaLiveRegion()}}}}}]),module.directive("uiGridRenderContainer",["$timeout","$document","gridUtil","uiGridConstants","uiGridCellNavService","$compile","uiGridCellNavConstants",function($timeout,$document,gridUtil,uiGridConstants,uiGridCellNavService,$compile,uiGridCellNavConstants){return{replace:!0,priority:-99999,require:["^uiGrid","uiGridRenderContainer","?^uiGridCellnav"],scope:!1,compile:function(){return{post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],renderContainerCtrl=controllers[1],uiGridCellnavCtrl=controllers[2];if(uiGridCtrl.grid.api.cellNav){var containerId=renderContainerCtrl.containerId,grid=uiGridCtrl.grid;if(uiGridCellNavService.decorateRenderContainers(grid),"body"===containerId){uiGridCtrl.grid.options.modifierKeysToMultiSelectCells?$elm.attr("aria-multiselectable",!0):$elm.attr("aria-multiselectable",!1);var focuser=$compile('<div class="ui-grid-focuser" role="region" aria-live="assertive" aria-atomic="false" tabindex="0" aria-controls="'+grid.id+"-aria-speakable "+grid.id+'-grid-container" aria-owns="'+grid.id+'-grid-container"></div>')($scope);$elm.append(focuser),focuser.on("focus",function(evt){evt.uiGridTargetRenderContainerId=containerId;var rowCol=uiGridCtrl.grid.api.cellNav.getFocusedCell();null===rowCol&&(rowCol=uiGridCtrl.grid.renderContainers[containerId].cellNav.getNextRowCol(uiGridCellNavConstants.direction.DOWN,null,null),rowCol.row&&rowCol.col&&uiGridCtrl.cellNav.broadcastCellNav(rowCol))}),uiGridCellnavCtrl.setAriaActivedescendant=function(id){$elm.attr("aria-activedescendant",id)},uiGridCellnavCtrl.removeAriaActivedescendant=function(id){$elm.attr("aria-activedescendant")===id&&$elm.attr("aria-activedescendant","")},uiGridCtrl.focus=function(){gridUtil.focus.byElement(focuser[0])};var viewPortKeyDownWasRaisedForRowCol=null;focuser.on("keydown",function(evt){evt.uiGridTargetRenderContainerId=containerId;var rowCol=uiGridCtrl.grid.api.cellNav.getFocusedCell(),result=uiGridCtrl.cellNav.handleKeyDown(evt);null===result&&(uiGridCtrl.grid.api.cellNav.raise.viewPortKeyDown(evt,rowCol),viewPortKeyDownWasRaisedForRowCol=rowCol)}),focuser.on("keypress",function(evt){viewPortKeyDownWasRaisedForRowCol&&($timeout(function(){uiGridCtrl.grid.api.cellNav.raise.viewPortKeyPress(evt,viewPortKeyDownWasRaisedForRowCol)},4),viewPortKeyDownWasRaisedForRowCol=null)}),$scope.$on("$destroy",function(){focuser.off()})}}}}}}}]),module.directive("uiGridViewport",["$timeout","$document","gridUtil","uiGridConstants","uiGridCellNavService","uiGridCellNavConstants","$log","$compile",function($timeout,$document,gridUtil,uiGridConstants,uiGridCellNavService,uiGridCellNavConstants,$log,$compile){return{replace:!0,priority:-99999,require:["^uiGrid","^uiGridRenderContainer","?^uiGridCellnav"],scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],renderContainerCtrl=controllers[1];if(uiGridCtrl.grid.api.cellNav){var containerId=renderContainerCtrl.containerId;if("body"===containerId){var grid=uiGridCtrl.grid;grid.api.core.on.scrollBegin($scope,function(args){var lastRowCol=uiGridCtrl.grid.api.cellNav.getFocusedCell();null!==lastRowCol&&renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)&&uiGridCtrl.cellNav.clearFocus()}),grid.api.core.on.scrollEnd($scope,function(args){var lastRowCol=uiGridCtrl.grid.api.cellNav.getFocusedCell();null!==lastRowCol&&renderContainerCtrl.colContainer.containsColumn(lastRowCol.col)&&uiGridCtrl.cellNav.broadcastCellNav(lastRowCol)}),grid.api.cellNav.on.navigate($scope,function(){uiGridCtrl.focus()})}}}}}}}]),module.directive("uiGridCell",["$timeout","$document","uiGridCellNavService","gridUtil","uiGridCellNavConstants","uiGridConstants","GridRowColumn",function($timeout,$document,uiGridCellNavService,gridUtil,uiGridCellNavConstants,uiGridConstants,GridRowColumn){return{priority:-150,restrict:"A",require:["^uiGrid","?^uiGridCellnav"],scope:!1,link:function($scope,$elm,$attrs,controllers){function preventMouseDown(evt){evt.preventDefault()}function setFocused(){if(!$scope.focused){var div=$elm.find("div");div.addClass("ui-grid-cell-focus"),$elm.attr("aria-selected",!0),uiGridCellnavCtrl.setAriaActivedescendant($elm.attr("id")),$scope.focused=!0}}function clearFocus(){if($scope.focused){var div=$elm.find("div");div.removeClass("ui-grid-cell-focus"),$elm.attr("aria-selected",!1),uiGridCellnavCtrl.removeAriaActivedescendant($elm.attr("id")),$scope.focused=!1}}var uiGridCtrl=controllers[0],uiGridCellnavCtrl=controllers[1];if(uiGridCtrl.grid.api.cellNav&&$scope.col.colDef.allowCellFocus){var grid=uiGridCtrl.grid;$scope.focused=!1,$elm.attr("tabindex",-1),$elm.find("div").on("click",function(evt){uiGridCtrl.cellNav.broadcastCellNav(new GridRowColumn($scope.row,$scope.col),evt.ctrlKey||evt.metaKey,evt),evt.stopPropagation(),$scope.$apply()}),$elm.on("mousedown",preventMouseDown),uiGridCtrl.grid.api.edit&&(uiGridCtrl.grid.api.edit.on.beginCellEdit($scope,function(){$elm.off("mousedown",preventMouseDown)}),uiGridCtrl.grid.api.edit.on.afterCellEdit($scope,function(){$elm.on("mousedown",preventMouseDown)}),uiGridCtrl.grid.api.edit.on.cancelCellEdit($scope,function(){$elm.on("mousedown",preventMouseDown)})),$elm.on("focus",function(evt){uiGridCtrl.cellNav.broadcastCellNav(new GridRowColumn($scope.row,$scope.col),!1,evt),evt.stopPropagation(),$scope.$apply()}),$scope.$on(uiGridCellNavConstants.CELL_NAV_EVENT,function(evt,rowCol,modifierDown){var isFocused=grid.cellNav.focusedCells.some(function(focusedRowCol,index){return focusedRowCol.row===$scope.row&&focusedRowCol.col===$scope.col});isFocused?setFocused():clearFocus()}),$scope.$on("$destroy",function(){$elm.find("div").off(),$elm.off()})}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.edit",["ui.grid"]);module.constant("uiGridEditConstants",{EDITABLE_CELL_TEMPLATE:/EDITABLE_CELL_TEMPLATE/g,EDITABLE_CELL_DIRECTIVE:/editable_cell_directive/g,events:{BEGIN_CELL_EDIT:"uiGridEventBeginCellEdit",END_CELL_EDIT:"uiGridEventEndCellEdit",CANCEL_CELL_EDIT:"uiGridEventCancelCellEdit"}}),module.service("uiGridEditService",["$q","uiGridConstants","gridUtil",function($q,uiGridConstants,gridUtil){var service={initializeGrid:function(grid){service.defaultGridOptions(grid.options),grid.registerColumnBuilder(service.editColumnBuilder),grid.edit={};var publicApi={events:{edit:{afterCellEdit:function(rowEntity,colDef,newValue,oldValue){},beginCellEdit:function(rowEntity,colDef,triggerEvent){},cancelCellEdit:function(rowEntity,colDef){}}},methods:{edit:{}}};grid.api.registerEventsFromObject(publicApi.events)},defaultGridOptions:function(gridOptions){gridOptions.cellEditableCondition=void 0===gridOptions.cellEditableCondition||gridOptions.cellEditableCondition,gridOptions.enableCellEditOnFocus=void 0!==gridOptions.enableCellEditOnFocus&&gridOptions.enableCellEditOnFocus},editColumnBuilder:function(colDef,col,gridOptions){var promises=[];return colDef.enableCellEdit=void 0===colDef.enableCellEdit?void 0===gridOptions.enableCellEdit?"object"!==colDef.type:gridOptions.enableCellEdit:colDef.enableCellEdit,colDef.cellEditableCondition=void 0===colDef.cellEditableCondition?gridOptions.cellEditableCondition:colDef.cellEditableCondition,colDef.enableCellEdit&&(colDef.editableCellTemplate=colDef.editableCellTemplate||gridOptions.editableCellTemplate||"ui-grid/cellEditor",promises.push(gridUtil.getTemplate(colDef.editableCellTemplate).then(function(template){col.editableCellTemplate=template},function(res){throw new Error("Couldn't fetch/use colDef.editableCellTemplate '"+colDef.editableCellTemplate+"'")}))),colDef.enableCellEditOnFocus=void 0===colDef.enableCellEditOnFocus?gridOptions.enableCellEditOnFocus:colDef.enableCellEditOnFocus,$q.all(promises)},isStartEditKey:function(evt){return!(evt.metaKey||evt.keyCode===uiGridConstants.keymap.ESC||evt.keyCode===uiGridConstants.keymap.SHIFT||evt.keyCode===uiGridConstants.keymap.CTRL||evt.keyCode===uiGridConstants.keymap.ALT||evt.keyCode===uiGridConstants.keymap.WIN||evt.keyCode===uiGridConstants.keymap.CAPSLOCK||evt.keyCode===uiGridConstants.keymap.LEFT||evt.keyCode===uiGridConstants.keymap.TAB&&evt.shiftKey||evt.keyCode===uiGridConstants.keymap.RIGHT||evt.keyCode===uiGridConstants.keymap.TAB||evt.keyCode===uiGridConstants.keymap.UP||evt.keyCode===uiGridConstants.keymap.ENTER&&evt.shiftKey||evt.keyCode===uiGridConstants.keymap.DOWN||evt.keyCode===uiGridConstants.keymap.ENTER)}};return service}]),module.directive("uiGridEdit",["gridUtil","uiGridEditService",function(gridUtil,uiGridEditService){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridEditService.initializeGrid(uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridViewport",["uiGridEditConstants",function(uiGridEditConstants){return{replace:!0,priority:-99998,require:["^uiGrid","^uiGridRenderContainer"],scope:!1,compile:function(){return{post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0];if(uiGridCtrl.grid.api.edit&&uiGridCtrl.grid.api.cellNav){var containerId=controllers[1].containerId;"body"===containerId&&($scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT,function(){uiGridCtrl.focus()}),$scope.$on(uiGridEditConstants.events.END_CELL_EDIT,function(){uiGridCtrl.focus()}))}}}}}}]),module.directive("uiGridCell",["$compile","$injector","$timeout","uiGridConstants","uiGridEditConstants","gridUtil","$parse","uiGridEditService","$rootScope",function($compile,$injector,$timeout,uiGridConstants,uiGridEditConstants,gridUtil,$parse,uiGridEditService,$rootScope){var touchstartTimeout=500;if($injector.has("uiGridCellNavService")){$injector.get("uiGridCellNavService")}return{priority:-100,restrict:"A",scope:!1,require:"?^uiGrid",link:function($scope,$elm,$attrs,uiGridCtrl){function registerBeginEditEvents(){$elm.on("dblclick",beginEdit),$elm.on("touchstart",touchStart),uiGridCtrl&&uiGridCtrl.grid.api.cellNav&&(viewPortKeyDownDereg=uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope,function(evt,rowCol){null!==rowCol&&(rowCol.row!==$scope.row||rowCol.col!==$scope.col||$scope.col.colDef.enableCellEditOnFocus||beginEditKeyDown(evt))}),cellNavNavigateDereg=uiGridCtrl.grid.api.cellNav.on.navigate($scope,function(newRowCol,oldRowCol){$scope.col.colDef.enableCellEditOnFocus&&(oldRowCol&&newRowCol.row===oldRowCol.row&&newRowCol.col===oldRowCol.col||newRowCol.row!==$scope.row||newRowCol.col!==$scope.col||$timeout(function(){beginEdit()}))})),$scope.beginEditEventsWired=!0}function touchStart(event){"undefined"!=typeof event.originalEvent&&void 0!==event.originalEvent&&(event=event.originalEvent),$elm.on("touchend",touchEnd),cancelTouchstartTimeout=$timeout(function(){},touchstartTimeout),cancelTouchstartTimeout.then(function(){setTimeout(beginEdit,0),$elm.off("touchend",touchEnd)})}function touchEnd(event){$timeout.cancel(cancelTouchstartTimeout),$elm.off("touchend",touchEnd)}function cancelBeginEditEvents(){$elm.off("dblclick",beginEdit),$elm.off("keydown",beginEditKeyDown),$elm.off("touchstart",touchStart),cellNavNavigateDereg(),viewPortKeyDownDereg(),$scope.beginEditEventsWired=!1}function beginEditKeyDown(evt){uiGridEditService.isStartEditKey(evt)&&beginEdit(evt)}function shouldEdit(col,row){return!row.isSaving&&(angular.isFunction(col.colDef.cellEditableCondition)?col.colDef.cellEditableCondition($scope):col.colDef.cellEditableCondition)}function beginEdit(triggerEvent){$scope.grid.api.core.scrollToIfNecessary($scope.row,$scope.col).then(function(){beginEditAfterScroll(triggerEvent)})}function beginEditAfterScroll(triggerEvent){if(!inEdit&&shouldEdit($scope.col,$scope.row)){cellModel=$parse($scope.row.getQualifiedColField($scope.col)),origCellValue=cellModel($scope),html=$scope.col.editableCellTemplate,html=$scope.col.colDef.editModelField?html.replace(uiGridConstants.MODEL_COL_FIELD,gridUtil.preEval("row.entity."+$scope.col.colDef.editModelField)):html.replace(uiGridConstants.MODEL_COL_FIELD,$scope.row.getQualifiedColField($scope.col)),html=html.replace(uiGridConstants.COL_FIELD,"grid.getCellValue(row, col)");var optionFilter=$scope.col.colDef.editDropdownFilter?"|"+$scope.col.colDef.editDropdownFilter:"";html=html.replace(uiGridConstants.CUSTOM_FILTERS,optionFilter);var inputType="text";switch($scope.col.colDef.type){case"boolean":inputType="checkbox";break;case"number":inputType="number";break;case"date":inputType="date"}html=html.replace("INPUT_TYPE",inputType);var editDropdownRowEntityOptionsArrayPath=$scope.col.colDef.editDropdownRowEntityOptionsArrayPath;editDropdownRowEntityOptionsArrayPath?$scope.editDropdownOptionsArray=resolveObjectFromPath($scope.row.entity,editDropdownRowEntityOptionsArrayPath):$scope.editDropdownOptionsArray=$scope.col.colDef.editDropdownOptionsArray,$scope.editDropdownIdLabel=$scope.col.colDef.editDropdownIdLabel?$scope.col.colDef.editDropdownIdLabel:"id",$scope.editDropdownValueLabel=$scope.col.colDef.editDropdownValueLabel?$scope.col.colDef.editDropdownValueLabel:"value";var createEditor=function(){inEdit=!0,cancelBeginEditEvents();var cellElement=angular.element(html);$elm.append(cellElement),editCellScope=$scope.$new(),$compile(cellElement)(editCellScope);var gridCellContentsEl=angular.element($elm.children()[0]);gridCellContentsEl.addClass("ui-grid-cell-contents-hidden")};$rootScope.$$phase?createEditor():$scope.$apply(createEditor);var deregOnGridScroll=$scope.col.grid.api.core.on.scrollBegin($scope,function(){$scope.grid.disableScrolling||(endEdit(),$scope.grid.api.edit.raise.afterCellEdit($scope.row.entity,$scope.col.colDef,cellModel($scope),origCellValue),deregOnGridScroll(),deregOnEndCellEdit(),deregOnCancelCellEdit())}),deregOnEndCellEdit=$scope.$on(uiGridEditConstants.events.END_CELL_EDIT,function(){endEdit(),$scope.grid.api.edit.raise.afterCellEdit($scope.row.entity,$scope.col.colDef,cellModel($scope),origCellValue),deregOnEndCellEdit(),deregOnGridScroll(),deregOnCancelCellEdit()}),deregOnCancelCellEdit=$scope.$on(uiGridEditConstants.events.CANCEL_CELL_EDIT,function(){cancelEdit(),deregOnCancelCellEdit(),deregOnGridScroll(),deregOnEndCellEdit()});$scope.$broadcast(uiGridEditConstants.events.BEGIN_CELL_EDIT,triggerEvent),$timeout(function(){$scope.grid.api.edit.raise.beginCellEdit($scope.row.entity,$scope.col.colDef,triggerEvent)})}}function endEdit(){if($scope.grid.disableScrolling=!1,inEdit){uiGridCtrl&&uiGridCtrl.grid.api.cellNav&&uiGridCtrl.focus();var gridCellContentsEl=angular.element($elm.children()[0]);editCellScope.$destroy(),angular.element($elm.children()[1]).remove(),gridCellContentsEl.removeClass("ui-grid-cell-contents-hidden"),inEdit=!1,registerBeginEditEvents(),$scope.grid.api.core.notifyDataChange(uiGridConstants.dataChange.EDIT)}}function cancelEdit(){$scope.grid.disableScrolling=!1,inEdit&&(cellModel.assign($scope,origCellValue),$scope.$apply(),$scope.grid.api.edit.raise.cancelCellEdit($scope.row.entity,$scope.col.colDef),endEdit())}function resolveObjectFromPath(object,path){path=path.replace(/\[(\w+)\]/g,".$1"),path=path.replace(/^\./,"");for(var a=path.split(".");a.length;){var n=a.shift();if(!(n in object))return;object=object[n]}return object}var html,origCellValue,cellModel,cancelTouchstartTimeout,editCellScope,inEdit=!1;if($scope.col.colDef.enableCellEdit){var cellNavNavigateDereg=function(){},viewPortKeyDownDereg=function(){},setEditable=function(){$scope.col.colDef.enableCellEdit&&$scope.row.enableCellEdit!==!1?$scope.beginEditEventsWired||registerBeginEditEvents():$scope.beginEditEventsWired&&cancelBeginEditEvents()};setEditable();var rowWatchDereg=$scope.$watch("row",function(n,o){n!==o&&setEditable()});$scope.$on("$destroy",rowWatchDereg)}}}}]),module.directive("uiGridEditor",["gridUtil","uiGridConstants","uiGridEditConstants","$timeout","uiGridEditService",function(gridUtil,uiGridConstants,uiGridEditConstants,$timeout,uiGridEditService){return{scope:!0,require:["?^uiGrid","?^uiGridRenderContainer","ngModel"],compile:function(){return{pre:function($scope,$elm,$attrs){},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl,renderContainerCtrl,ngModel;controllers[0]&&(uiGridCtrl=controllers[0]),controllers[1]&&(renderContainerCtrl=controllers[1]),
controllers[2]&&(ngModel=controllers[2]),$scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT,function(evt,triggerEvent){if($timeout(function(){if($elm[0].focus(),!$scope.col.colDef.enableCellEditOnFocus&&uiGridCtrl&&uiGridCtrl.grid.api.cellNav)try{$elm[0].setSelectionRange($elm[0].value.length,$elm[0].value.length)}catch(ex){}else $elm[0].select()}),uiGridCtrl&&uiGridCtrl.grid.api.cellNav)var viewPortKeyDownUnregister=uiGridCtrl.grid.api.cellNav.on.viewPortKeyPress($scope,function(evt,rowCol){uiGridEditService.isStartEditKey(evt)&&(ngModel.$setViewValue(String.fromCharCode(evt.keyCode),evt),ngModel.$render()),viewPortKeyDownUnregister()});$elm.on("blur",function(evt){$scope.stopEdit(evt)})}),$scope.deepEdit=!1,$scope.stopEdit=function(evt){$scope.inputForm&&!$scope.inputForm.$valid?(evt.stopPropagation(),$scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT)):$scope.$emit(uiGridEditConstants.events.END_CELL_EDIT),$scope.deepEdit=!1},$elm.on("click",function(evt){"checkbox"!==$elm[0].type&&($scope.deepEdit=!0,$timeout(function(){$scope.grid.disableScrolling=!0}))}),$elm.on("keydown",function(evt){switch(evt.keyCode){case uiGridConstants.keymap.ESC:evt.stopPropagation(),$scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT)}if(!$scope.deepEdit||evt.keyCode!==uiGridConstants.keymap.LEFT&&evt.keyCode!==uiGridConstants.keymap.RIGHT&&evt.keyCode!==uiGridConstants.keymap.UP&&evt.keyCode!==uiGridConstants.keymap.DOWN)if(uiGridCtrl&&uiGridCtrl.grid.api.cellNav)evt.uiGridTargetRenderContainerId=renderContainerCtrl.containerId,null!==uiGridCtrl.cellNav.handleKeyDown(evt)&&$scope.stopEdit(evt);else switch(evt.keyCode){case uiGridConstants.keymap.ENTER:case uiGridConstants.keymap.TAB:evt.stopPropagation(),evt.preventDefault(),$scope.stopEdit(evt)}else evt.stopPropagation();return!0})}}}}}]),module.directive("uiGridEditor",["$filter",function($filter){function parseDateString(dateString){if("undefined"==typeof dateString||""===dateString)return null;var parts=dateString.split("-");if(3!==parts.length)return null;var year=parseInt(parts[0],10),month=parseInt(parts[1],10),day=parseInt(parts[2],10);return month<1||year<1||day<1?null:new Date(year,month-1,day)}return{priority:-100,require:"?ngModel",link:function(scope,element,attrs,ngModel){2===angular.version.minor&&attrs.type&&"date"===attrs.type&&ngModel&&(ngModel.$formatters.push(function(modelValue){return ngModel.$setValidity(null,!modelValue||!isNaN(modelValue.getTime())),$filter("date")(modelValue,"yyyy-MM-dd")}),ngModel.$parsers.push(function(viewValue){if(viewValue&&viewValue.length>0){var dateValue=parseDateString(viewValue);return ngModel.$setValidity(null,dateValue&&!isNaN(dateValue.getTime())),dateValue}return ngModel.$setValidity(null,!0),null}))}}}]),module.directive("uiGridEditDropdown",["uiGridConstants","uiGridEditConstants",function(uiGridConstants,uiGridEditConstants){return{require:["?^uiGrid","?^uiGridRenderContainer"],scope:!0,compile:function(){return{pre:function($scope,$elm,$attrs){},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl=controllers[0],renderContainerCtrl=controllers[1];$scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT,function(){$elm[0].focus(),$elm[0].style.width=$elm[0].parentElement.offsetWidth-1+"px",$elm.on("blur",function(evt){$scope.stopEdit(evt)})}),$scope.stopEdit=function(evt){$scope.$emit(uiGridEditConstants.events.END_CELL_EDIT)},$elm.on("keydown",function(evt){switch(evt.keyCode){case uiGridConstants.keymap.ESC:evt.stopPropagation(),$scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT)}if(uiGridCtrl&&uiGridCtrl.grid.api.cellNav)evt.uiGridTargetRenderContainerId=renderContainerCtrl.containerId,null!==uiGridCtrl.cellNav.handleKeyDown(evt)&&$scope.stopEdit(evt);else switch(evt.keyCode){case uiGridConstants.keymap.ENTER:case uiGridConstants.keymap.TAB:evt.stopPropagation(),evt.preventDefault(),$scope.stopEdit(evt)}return!0})}}}}}]),module.directive("uiGridEditFileChooser",["gridUtil","uiGridConstants","uiGridEditConstants","$timeout",function(gridUtil,uiGridConstants,uiGridEditConstants,$timeout){return{scope:!0,require:["?^uiGrid","?^uiGridRenderContainer"],compile:function(){return{pre:function($scope,$elm,$attrs){},post:function($scope,$elm,$attrs,controllers){var uiGridCtrl,renderContainerCtrl;controllers[0]&&(uiGridCtrl=controllers[0]),controllers[1]&&(renderContainerCtrl=controllers[1]);var handleFileSelect=(uiGridCtrl.grid,function(event){var target=event.srcElement||event.target;target&&target.files&&target.files.length>0?("function"==typeof $scope.col.colDef.editFileChooserCallback?$scope.col.colDef.editFileChooserCallback($scope.row,$scope.col,target.files):gridUtil.logError("You need to set colDef.editFileChooserCallback to use the file chooser"),target.form.reset(),$scope.$emit(uiGridEditConstants.events.END_CELL_EDIT)):$scope.$emit(uiGridEditConstants.events.CANCEL_CELL_EDIT)});$elm[0].addEventListener("change",handleFileSelect,!1),$scope.$on(uiGridEditConstants.events.BEGIN_CELL_EDIT,function(){$elm[0].focus(),$elm[0].select(),$elm.on("blur",function(evt){$scope.$emit(uiGridEditConstants.events.END_CELL_EDIT)})})}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.expandable",["ui.grid"]);module.service("uiGridExpandableService",["gridUtil","$compile",function(gridUtil,$compile){var service={initializeGrid:function(grid){grid.expandable={},grid.expandable.expandedAll=!1,grid.options.enableExpandable=grid.options.enableExpandable!==!1,grid.options.expandableRowHeight=grid.options.expandableRowHeight||150,grid.options.expandableRowHeaderWidth=grid.options.expandableRowHeaderWidth||40,grid.options.enableExpandable&&!grid.options.expandableRowTemplate&&(gridUtil.logError("You have not set the expandableRowTemplate, disabling expandable module"),grid.options.enableExpandable=!1);var publicApi={events:{expandable:{rowExpandedBeforeStateChanged:function(scope,row){},rowExpandedStateChanged:function(scope,row){}}},methods:{expandable:{toggleRowExpansion:function(rowEntity){var row=grid.getRow(rowEntity);null!==row&&service.toggleRowExpansion(grid,row)},expandAllRows:function(){service.expandAllRows(grid)},collapseAllRows:function(){service.collapseAllRows(grid)},toggleAllRows:function(){service.toggleAllRows(grid)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},toggleRowExpansion:function(grid,row){grid.api.expandable.raise.rowExpandedBeforeStateChanged(row),row.isExpanded=!row.isExpanded,angular.isUndefined(row.expandedRowHeight)&&(row.expandedRowHeight=grid.options.expandableRowHeight),row.isExpanded?row.height=row.grid.options.rowHeight+row.expandedRowHeight:(row.height=row.grid.options.rowHeight,grid.expandable.expandedAll=!1),grid.api.expandable.raise.rowExpandedStateChanged(row)},expandAllRows:function(grid,$scope){grid.renderContainers.body.visibleRowCache.forEach(function(row){row.isExpanded||service.toggleRowExpansion(grid,row)}),grid.expandable.expandedAll=!0,grid.queueGridRefresh()},collapseAllRows:function(grid){grid.renderContainers.body.visibleRowCache.forEach(function(row){row.isExpanded&&service.toggleRowExpansion(grid,row)}),grid.expandable.expandedAll=!1,grid.queueGridRefresh()},toggleAllRows:function(grid){grid.expandable.expandedAll?service.collapseAllRows(grid):service.expandAllRows(grid)}};return service}]),module.directive("uiGridExpandable",["uiGridExpandableService","$templateCache",function(uiGridExpandableService,$templateCache){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){if(uiGridCtrl.grid.options.enableExpandableRowHeader!==!1){var expandableRowHeaderColDef={name:"expandableButtons",displayName:"",exporterSuppressExport:!0,enableColumnResizing:!1,enableColumnMenu:!1,width:uiGridCtrl.grid.options.expandableRowHeaderWidth||40};expandableRowHeaderColDef.cellTemplate=$templateCache.get("ui-grid/expandableRowHeader"),expandableRowHeaderColDef.headerCellTemplate=$templateCache.get("ui-grid/expandableTopRowHeader"),uiGridCtrl.grid.addRowHeaderColumn(expandableRowHeaderColDef)}uiGridExpandableService.initializeGrid(uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGrid",["uiGridExpandableService","$templateCache",function(uiGridExpandableService,$templateCache){return{replace:!0,priority:599,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridCtrl.grid.api.core.on.renderingComplete($scope,function(){$scope.row&&$scope.row.grid&&$scope.row.grid.options&&$scope.row.grid.options.enableExpandable&&(uiGridCtrl.grid.parentRow=$scope.row)})},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridExpandableRow",["uiGridExpandableService","$timeout","$compile","uiGridConstants","gridUtil","$interval","$log",function(uiGridExpandableService,$timeout,$compile,uiGridConstants,gridUtil,$interval,$log){return{replace:!1,priority:0,scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){gridUtil.getTemplate($scope.grid.options.expandableRowTemplate).then(function(template){if($scope.grid.options.expandableRowScope){var expandableRowScope=$scope.grid.options.expandableRowScope;for(var property in expandableRowScope)expandableRowScope.hasOwnProperty(property)&&($scope[property]=expandableRowScope[property])}var expandedRowElement=$compile(template)($scope);$elm.append(expandedRowElement),$scope.row.expandedRendered=!0})},post:function($scope,$elm,$attrs,uiGridCtrl){$scope.$on("$destroy",function(){$scope.row.expandedRendered=!1})}}}}}]),module.directive("uiGridRow",["$compile","gridUtil","$templateCache",function($compile,gridUtil,$templateCache){return{priority:-200,scope:!1,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,controllers){$scope.expandableRow={},$scope.expandableRow.shouldRenderExpand=function(){var ret="body"===$scope.colContainer.name&&$scope.grid.options.enableExpandable!==!1&&$scope.row.isExpanded&&(!$scope.grid.isScrollingVertically||$scope.row.expandedRendered);return ret},$scope.expandableRow.shouldRenderFiller=function(){var ret=$scope.row.isExpanded&&("body"!==$scope.colContainer.name||$scope.grid.isScrollingVertically&&!$scope.row.expandedRendered);return ret}},post:function($scope,$elm,$attrs,controllers){}}}}}]),module.directive("uiGridViewport",["$compile","gridUtil","$templateCache",function($compile,gridUtil,$templateCache){return{priority:-200,scope:!1,compile:function($elm,$attrs){var rowRepeatDiv=angular.element($elm.children().children()[0]),expandedRowFillerElement=$templateCache.get("ui-grid/expandableScrollFiller"),expandedRowElement=$templateCache.get("ui-grid/expandableRow");return rowRepeatDiv.append(expandedRowElement),rowRepeatDiv.append(expandedRowFillerElement),{pre:function($scope,$elm,$attrs,controllers){},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.exporter",["ui.grid"]);module.constant("uiGridExporterConstants",{featureName:"exporter",ALL:"all",VISIBLE:"visible",SELECTED:"selected",CSV_CONTENT:"CSV_CONTENT",BUTTON_LABEL:"BUTTON_LABEL",FILE_NAME:"FILE_NAME"}),module.service("uiGridExporterService",["$q","uiGridExporterConstants","gridUtil","$compile","$interval","i18nService",function($q,uiGridExporterConstants,gridUtil,$compile,$interval,i18nService){var service={delay:100,initializeGrid:function(grid){grid.exporter={},this.defaultGridOptions(grid.options);var publicApi={events:{exporter:{}},methods:{exporter:{csvExport:function(rowTypes,colTypes){service.csvExport(grid,rowTypes,colTypes)},pdfExport:function(rowTypes,colTypes){service.pdfExport(grid,rowTypes,colTypes)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods),grid.api.core.addToGridMenu?service.addToMenu(grid):$interval(function(){grid.api.core.addToGridMenu&&service.addToMenu(grid)},this.delay,1)},defaultGridOptions:function(gridOptions){gridOptions.exporterSuppressMenu=gridOptions.exporterSuppressMenu===!0,gridOptions.exporterMenuLabel=gridOptions.exporterMenuLabel?gridOptions.exporterMenuLabel:"Export",gridOptions.exporterSuppressColumns=gridOptions.exporterSuppressColumns?gridOptions.exporterSuppressColumns:[],gridOptions.exporterCsvColumnSeparator=gridOptions.exporterCsvColumnSeparator?gridOptions.exporterCsvColumnSeparator:",",gridOptions.exporterCsvFilename=gridOptions.exporterCsvFilename?gridOptions.exporterCsvFilename:"download.csv",gridOptions.exporterPdfFilename=gridOptions.exporterPdfFilename?gridOptions.exporterPdfFilename:"download.pdf",gridOptions.exporterOlderExcelCompatibility=gridOptions.exporterOlderExcelCompatibility===!0,gridOptions.exporterPdfDefaultStyle=gridOptions.exporterPdfDefaultStyle?gridOptions.exporterPdfDefaultStyle:{fontSize:11},gridOptions.exporterPdfTableStyle=gridOptions.exporterPdfTableStyle?gridOptions.exporterPdfTableStyle:{margin:[0,5,0,15]},gridOptions.exporterPdfTableHeaderStyle=gridOptions.exporterPdfTableHeaderStyle?gridOptions.exporterPdfTableHeaderStyle:{bold:!0,fontSize:12,color:"black"},gridOptions.exporterPdfHeader=gridOptions.exporterPdfHeader?gridOptions.exporterPdfHeader:null,gridOptions.exporterPdfFooter=gridOptions.exporterPdfFooter?gridOptions.exporterPdfFooter:null,gridOptions.exporterPdfOrientation=gridOptions.exporterPdfOrientation?gridOptions.exporterPdfOrientation:"landscape",gridOptions.exporterPdfPageSize=gridOptions.exporterPdfPageSize?gridOptions.exporterPdfPageSize:"A4",gridOptions.exporterPdfMaxGridWidth=gridOptions.exporterPdfMaxGridWidth?gridOptions.exporterPdfMaxGridWidth:720,gridOptions.exporterMenuAllData=void 0===gridOptions.exporterMenuAllData||gridOptions.exporterMenuAllData,gridOptions.exporterMenuCsv=void 0===gridOptions.exporterMenuCsv||gridOptions.exporterMenuCsv,gridOptions.exporterMenuPdf=void 0===gridOptions.exporterMenuPdf||gridOptions.exporterMenuPdf,gridOptions.exporterPdfCustomFormatter=gridOptions.exporterPdfCustomFormatter&&"function"==typeof gridOptions.exporterPdfCustomFormatter?gridOptions.exporterPdfCustomFormatter:function(docDef){return docDef},gridOptions.exporterHeaderFilterUseName=gridOptions.exporterHeaderFilterUseName===!0,gridOptions.exporterFieldCallback=gridOptions.exporterFieldCallback?gridOptions.exporterFieldCallback:function(grid,row,col,value){return value},gridOptions.exporterAllDataFn=gridOptions.exporterAllDataFn?gridOptions.exporterAllDataFn:null,null==gridOptions.exporterAllDataFn&&gridOptions.exporterAllDataPromise&&(gridOptions.exporterAllDataFn=gridOptions.exporterAllDataPromise)},addToMenu:function(grid){grid.api.core.addToGridMenu(grid,[{title:i18nService.getSafeText("gridMenu.exporterAllAsCsv"),action:function($event){this.grid.api.exporter.csvExport(uiGridExporterConstants.ALL,uiGridExporterConstants.ALL)},shown:function(){return this.grid.options.exporterMenuCsv&&this.grid.options.exporterMenuAllData},order:200},{title:i18nService.getSafeText("gridMenu.exporterVisibleAsCsv"),action:function($event){this.grid.api.exporter.csvExport(uiGridExporterConstants.VISIBLE,uiGridExporterConstants.VISIBLE)},shown:function(){return this.grid.options.exporterMenuCsv},order:201},{title:i18nService.getSafeText("gridMenu.exporterSelectedAsCsv"),action:function($event){this.grid.api.exporter.csvExport(uiGridExporterConstants.SELECTED,uiGridExporterConstants.VISIBLE)},shown:function(){return this.grid.options.exporterMenuCsv&&this.grid.api.selection&&this.grid.api.selection.getSelectedRows().length>0},order:202},{title:i18nService.getSafeText("gridMenu.exporterAllAsPdf"),action:function($event){this.grid.api.exporter.pdfExport(uiGridExporterConstants.ALL,uiGridExporterConstants.ALL)},shown:function(){return this.grid.options.exporterMenuPdf&&this.grid.options.exporterMenuAllData},order:203},{title:i18nService.getSafeText("gridMenu.exporterVisibleAsPdf"),action:function($event){this.grid.api.exporter.pdfExport(uiGridExporterConstants.VISIBLE,uiGridExporterConstants.VISIBLE)},shown:function(){return this.grid.options.exporterMenuPdf},order:204},{title:i18nService.getSafeText("gridMenu.exporterSelectedAsPdf"),action:function($event){this.grid.api.exporter.pdfExport(uiGridExporterConstants.SELECTED,uiGridExporterConstants.VISIBLE)},shown:function(){return this.grid.options.exporterMenuPdf&&this.grid.api.selection&&this.grid.api.selection.getSelectedRows().length>0},order:205}])},csvExport:function(grid,rowTypes,colTypes){var self=this;this.loadAllDataIfNeeded(grid,rowTypes,colTypes).then(function(){var exportColumnHeaders=grid.options.showHeader?self.getColumnHeaders(grid,colTypes):[],exportData=self.getData(grid,rowTypes,colTypes),csvContent=self.formatAsCsv(exportColumnHeaders,exportData,grid.options.exporterCsvColumnSeparator);self.downloadFile(grid.options.exporterCsvFilename,csvContent,grid.options.exporterOlderExcelCompatibility)})},loadAllDataIfNeeded:function(grid,rowTypes,colTypes){if(rowTypes===uiGridExporterConstants.ALL&&grid.rows.length!==grid.options.totalItems&&grid.options.exporterAllDataFn)return grid.options.exporterAllDataFn().then(function(){grid.modifyRows(grid.options.data)});var deferred=$q.defer();return deferred.resolve(),deferred.promise},getColumnHeaders:function(grid,colTypes){var columns,headers=[];if(colTypes===uiGridExporterConstants.ALL)columns=grid.columns;else{var leftColumns=grid.renderContainers.left?grid.renderContainers.left.visibleColumnCache.filter(function(column){return column.visible}):[],bodyColumns=grid.renderContainers.body?grid.renderContainers.body.visibleColumnCache.filter(function(column){return column.visible}):[],rightColumns=grid.renderContainers.right?grid.renderContainers.right.visibleColumnCache.filter(function(column){return column.visible}):[];columns=leftColumns.concat(bodyColumns,rightColumns)}return columns.forEach(function(gridCol,index){gridCol.colDef.exporterSuppressExport!==!0&&grid.options.exporterSuppressColumns.indexOf(gridCol.name)===-1&&headers.push({name:gridCol.field,displayName:grid.options.exporterHeaderFilter?grid.options.exporterHeaderFilterUseName?grid.options.exporterHeaderFilter(gridCol.name):grid.options.exporterHeaderFilter(gridCol.displayName):gridCol.displayName,width:gridCol.drawnWidth?gridCol.drawnWidth:gridCol.width,align:"number"===gridCol.colDef.type?"right":"left"})}),headers},getData:function(grid,rowTypes,colTypes){var rows,columns,data=[];switch(rowTypes){case uiGridExporterConstants.ALL:rows=grid.rows;break;case uiGridExporterConstants.VISIBLE:rows=grid.getVisibleRows();break;case uiGridExporterConstants.SELECTED:grid.api.selection?rows=grid.api.selection.getSelectedGridRows():gridUtil.logError("selection feature must be enabled to allow selected rows to be exported")}if(colTypes===uiGridExporterConstants.ALL)columns=grid.columns;else{var leftColumns=grid.renderContainers.left?grid.renderContainers.left.visibleColumnCache.filter(function(column){return column.visible}):[],bodyColumns=grid.renderContainers.body?grid.renderContainers.body.visibleColumnCache.filter(function(column){return column.visible}):[],rightColumns=grid.renderContainers.right?grid.renderContainers.right.visibleColumnCache.filter(function(column){return column.visible}):[];columns=leftColumns.concat(bodyColumns,rightColumns)}return rows.forEach(function(row,index){if(row.exporterEnableExporting!==!1){var extractedRow=[];columns.forEach(function(gridCol,index){if((gridCol.visible||colTypes===uiGridExporterConstants.ALL)&&gridCol.colDef.exporterSuppressExport!==!0&&grid.options.exporterSuppressColumns.indexOf(gridCol.name)===-1){var extractedField={value:grid.options.exporterFieldCallback(grid,row,gridCol,grid.getCellValue(row,gridCol))};gridCol.colDef.exporterPdfAlign&&(extractedField.alignment=gridCol.colDef.exporterPdfAlign),extractedRow.push(extractedField)}}),data.push(extractedRow)}}),data},formatAsCsv:function(exportColumnHeaders,exportData,separator){var self=this,bareHeaders=exportColumnHeaders.map(function(header){return{value:header.displayName}}),csv=bareHeaders.length>0?self.formatRowAsCsv(this,separator)(bareHeaders)+"\n":"";return csv+=exportData.map(this.formatRowAsCsv(this,separator)).join("\n")},formatRowAsCsv:function(exporter,separator){return function(row){return row.map(exporter.formatFieldAsCsv).join(separator)}},formatFieldAsCsv:function(field){return null==field.value?"":"number"==typeof field.value?field.value:"boolean"==typeof field.value?field.value?"TRUE":"FALSE":"string"==typeof field.value?'"'+field.value.replace(/"/g,'""')+'"':JSON.stringify(field.value)},isIE:function(){var match=navigator.userAgent.match(/(?:MSIE |Trident\/.*; rv:)(\d+)/);return!!match&&parseInt(match[1])},downloadFile:function(fileName,csvContent,exporterOlderExcelCompatibility){var rawFile,ieVersion,D=document,a=D.createElement("a"),strMimeType="application/octet-stream;charset=utf-8";if(ieVersion=this.isIE(),ieVersion&&ieVersion<10){var frame=D.createElement("iframe");return document.body.appendChild(frame),frame.contentWindow.document.open("text/html","replace"),frame.contentWindow.document.write("sep=,\r\n"+csvContent),frame.contentWindow.document.close(),frame.contentWindow.focus(),frame.contentWindow.document.execCommand("SaveAs",!0,fileName),document.body.removeChild(frame),!0}if(navigator.msSaveBlob)return navigator.msSaveOrOpenBlob(new Blob([exporterOlderExcelCompatibility?"\ufeff":"",csvContent],{type:strMimeType}),fileName);if("download"in a){var blob=new Blob([exporterOlderExcelCompatibility?"\ufeff":"",csvContent],{type:strMimeType});rawFile=URL.createObjectURL(blob),a.setAttribute("download",fileName)}else rawFile="data:"+strMimeType+","+encodeURIComponent(csvContent),a.setAttribute("target","_blank");a.href=rawFile,a.setAttribute("style","display:none;"),D.body.appendChild(a),setTimeout(function(){if(a.click)a.click();else if(document.createEvent){var eventObj=document.createEvent("MouseEvents");eventObj.initEvent("click",!0,!0),a.dispatchEvent(eventObj)}D.body.removeChild(a)},this.delay)},pdfExport:function(grid,rowTypes,colTypes){var self=this;this.loadAllDataIfNeeded(grid,rowTypes,colTypes).then(function(){var exportColumnHeaders=self.getColumnHeaders(grid,colTypes),exportData=self.getData(grid,rowTypes,colTypes),docDefinition=self.prepareAsPdf(grid,exportColumnHeaders,exportData);self.isIE()?self.downloadPDF(grid.options.exporterPdfFilename,docDefinition):pdfMake.createPdf(docDefinition).open()})},downloadPDF:function(fileName,docDefinition){var ieVersion,D=document;D.createElement("a");ieVersion=this.isIE();var blob,doc=pdfMake.createPdf(docDefinition);doc.getBuffer(function(buffer){if(blob=new Blob([buffer]),ieVersion&&ieVersion<10){var frame=D.createElement("iframe");return document.body.appendChild(frame),frame.contentWindow.document.open("text/html","replace"),frame.contentWindow.document.write(blob),frame.contentWindow.document.close(),frame.contentWindow.focus(),frame.contentWindow.document.execCommand("SaveAs",!0,fileName),document.body.removeChild(frame),!0}if(navigator.msSaveBlob)return navigator.msSaveBlob(blob,fileName)})},prepareAsPdf:function(grid,exportColumnHeaders,exportData){var headerWidths=this.calculatePdfHeaderWidths(grid,exportColumnHeaders),headerColumns=exportColumnHeaders.map(function(header){return{text:header.displayName,style:"tableHeader"}}),stringData=exportData.map(this.formatRowAsPdf(this)),allData=[headerColumns].concat(stringData),docDefinition={pageOrientation:grid.options.exporterPdfOrientation,pageSize:grid.options.exporterPdfPageSize,content:[{style:"tableStyle",table:{headerRows:1,widths:headerWidths,body:allData}}],styles:{tableStyle:grid.options.exporterPdfTableStyle,tableHeader:grid.options.exporterPdfTableHeaderStyle},defaultStyle:grid.options.exporterPdfDefaultStyle};return grid.options.exporterPdfLayout&&(docDefinition.layout=grid.options.exporterPdfLayout),grid.options.exporterPdfHeader&&(docDefinition.header=grid.options.exporterPdfHeader),grid.options.exporterPdfFooter&&(docDefinition.footer=grid.options.exporterPdfFooter),grid.options.exporterPdfCustomFormatter&&(docDefinition=grid.options.exporterPdfCustomFormatter(docDefinition)),docDefinition},calculatePdfHeaderWidths:function(grid,exportHeaders){var baseGridWidth=0;exportHeaders.forEach(function(value){"number"==typeof value.width&&(baseGridWidth+=value.width)});var extraColumns=0;exportHeaders.forEach(function(value){if("*"===value.width&&(extraColumns+=100),"string"==typeof value.width&&value.width.match(/(\d)*%/)){var percent=parseInt(value.width.match(/(\d)*%/)[0]);value.width=baseGridWidth*percent/100,extraColumns+=value.width}});var gridWidth=baseGridWidth+extraColumns;return exportHeaders.map(function(header){return"*"===header.width?header.width:header.width*grid.options.exporterPdfMaxGridWidth/gridWidth})},formatRowAsPdf:function(exporter){return function(row){return row.map(exporter.formatFieldAsPdfString)}},formatFieldAsPdfString:function(field){var returnVal;return returnVal=null==field.value?"":"number"==typeof field.value?field.value.toString():"boolean"==typeof field.value?field.value?"TRUE":"FALSE":"string"==typeof field.value?field.value.replace(/"/g,'""'):JSON.stringify(field.value).replace(/^"/,"").replace(/"$/,""),field.alignment&&"string"==typeof field.alignment&&(returnVal={text:returnVal,alignment:field.alignment}),returnVal}};return service}]),module.directive("uiGridExporter",["uiGridExporterConstants","uiGridExporterService","gridUtil","$compile",function(uiGridExporterConstants,uiGridExporterService,gridUtil,$compile){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){uiGridExporterService.initializeGrid(uiGridCtrl.grid),uiGridCtrl.grid.exporter.$scope=$scope}}}])}(),function(){"use strict";var module=angular.module("ui.grid.grouping",["ui.grid","ui.grid.treeBase"]);module.constant("uiGridGroupingConstants",{featureName:"grouping",rowHeaderColName:"treeBaseRowHeaderCol",EXPANDED:"expanded",COLLAPSED:"collapsed",aggregation:{COUNT:"count",SUM:"sum",MAX:"max",MIN:"min",AVG:"avg"}}),module.service("uiGridGroupingService",["$q","uiGridGroupingConstants","gridUtil","rowSorter","GridRow","gridClassFactory","i18nService","uiGridConstants","uiGridTreeBaseService",function($q,uiGridGroupingConstants,gridUtil,rowSorter,GridRow,gridClassFactory,i18nService,uiGridConstants,uiGridTreeBaseService){var service={initializeGrid:function(grid,$scope){uiGridTreeBaseService.initializeGrid(grid,$scope),grid.grouping={},grid.grouping.groupHeaderCache={},service.defaultGridOptions(grid.options),grid.registerRowsProcessor(service.groupRows,400),grid.registerColumnBuilder(service.groupingColumnBuilder),grid.registerColumnsProcessor(service.groupingColumnProcessor,400);var publicApi={events:{grouping:{aggregationChanged:{},groupingChanged:{}}},methods:{grouping:{getGrouping:function(getExpanded){var grouping=service.getGrouping(grid);return grouping.grouping.forEach(function(group){group.colName=group.col.name,delete group.col}),grouping.aggregations.forEach(function(aggregation){aggregation.colName=aggregation.col.name,delete aggregation.col}),grouping.aggregations=grouping.aggregations.filter(function(aggregation){return!aggregation.aggregation.source||"grouping"!==aggregation.aggregation.source}),getExpanded&&(grouping.rowExpandedStates=service.getRowExpandedStates(grid.grouping.groupingHeaderCache)),grouping},setGrouping:function(config){service.setGrouping(grid,config)},groupColumn:function(columnName){var column=grid.getColumn(columnName);service.groupColumn(grid,column)},ungroupColumn:function(columnName){var column=grid.getColumn(columnName);service.ungroupColumn(grid,column)},clearGrouping:function(){service.clearGrouping(grid)},aggregateColumn:function(columnName,aggregationDef,aggregationLabel){var column=grid.getColumn(columnName);service.aggregateColumn(grid,column,aggregationDef,aggregationLabel)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods),grid.api.core.on.sortChanged($scope,service.tidyPriorities)},defaultGridOptions:function(gridOptions){gridOptions.enableGrouping=gridOptions.enableGrouping!==!1,gridOptions.groupingShowCounts=gridOptions.groupingShowCounts!==!1,gridOptions.groupingNullLabel="undefined"==typeof gridOptions.groupingNullLabel?"Null":gridOptions.groupingNullLabel,gridOptions.enableGroupHeaderSelection=gridOptions.enableGroupHeaderSelection===!0},groupingColumnBuilder:function(colDef,col,gridOptions){if(colDef.enableGrouping!==!1){"undefined"==typeof col.grouping&&"undefined"!=typeof colDef.grouping?(col.grouping=angular.copy(colDef.grouping),"undefined"!=typeof col.grouping.groupPriority&&col.grouping.groupPriority>-1&&(col.treeAggregationFn=uiGridTreeBaseService.nativeAggregations()[uiGridGroupingConstants.aggregation.COUNT].aggregationFn,col.treeAggregationFinalizerFn=service.groupedFinalizerFn)):"undefined"==typeof col.grouping&&(col.grouping={}),"undefined"!=typeof col.grouping&&"undefined"!=typeof col.grouping.groupPriority&&col.grouping.groupPriority>=0&&(col.suppressRemoveSort=!0);var groupColumn={name:"ui.grid.grouping.group",title:i18nService.get().grouping.group,icon:"ui-grid-icon-indent-right",shown:function(){return"undefined"==typeof this.context.col.grouping||"undefined"==typeof this.context.col.grouping.groupPriority||this.context.col.grouping.groupPriority<0},action:function(){service.groupColumn(this.context.col.grid,this.context.col)}},ungroupColumn={name:"ui.grid.grouping.ungroup",title:i18nService.get().grouping.ungroup,icon:"ui-grid-icon-indent-left",shown:function(){return"undefined"!=typeof this.context.col.grouping&&"undefined"!=typeof this.context.col.grouping.groupPriority&&this.context.col.grouping.groupPriority>=0},action:function(){service.ungroupColumn(this.context.col.grid,this.context.col)}},aggregateRemove={name:"ui.grid.grouping.aggregateRemove",title:i18nService.get().grouping.aggregate_remove,shown:function(){return"undefined"!=typeof this.context.col.treeAggregationFn},action:function(){service.aggregateColumn(this.context.col.grid,this.context.col,null)}},addAggregationMenu=function(type,title){title=title||i18nService.get().grouping["aggregate_"+type]||type;var menuItem={name:"ui.grid.grouping.aggregate"+type,title:title,shown:function(){return"undefined"==typeof this.context.col.treeAggregation||"undefined"==typeof this.context.col.treeAggregation.type||this.context.col.treeAggregation.type!==type},action:function(){service.aggregateColumn(this.context.col.grid,this.context.col,type)}};gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.grouping.aggregate"+type)||col.menuItems.push(menuItem)};col.colDef.groupingShowGroupingMenu!==!1&&(gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.grouping.group")||col.menuItems.push(groupColumn),gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.grouping.ungroup")||col.menuItems.push(ungroupColumn)),col.colDef.groupingShowAggregationMenu!==!1&&(angular.forEach(uiGridTreeBaseService.nativeAggregations(),function(aggregationDef,name){addAggregationMenu(name)}),angular.forEach(gridOptions.treeCustomAggregations,function(aggregationDef,name){addAggregationMenu(name,aggregationDef.menuTitle)}),gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.grouping.aggregateRemove")||col.menuItems.push(aggregateRemove))}},groupingColumnProcessor:function(columns,rows){return columns=service.moveGroupColumns(this,columns,rows)},groupedFinalizerFn:function(aggregation){var col=this;"undefined"!=typeof aggregation.groupVal?(aggregation.rendered=aggregation.groupVal,col.grid.options.groupingShowCounts&&"date"!==col.colDef.type&&(aggregation.rendered+=" ("+aggregation.value+")")):aggregation.rendered=null},moveGroupColumns:function(grid,columns,rows){return grid.options.moveGroupColumns===!1?columns:(columns.forEach(function(column,index){column.groupingPosition=index;
}),columns.sort(function(a,b){var a_group,b_group;return a_group=a.isRowHeader?-1e3:"undefined"==typeof a.grouping||"undefined"==typeof a.grouping.groupPriority||a.grouping.groupPriority<0?null:a.grouping.groupPriority,b_group=b.isRowHeader?-1e3:"undefined"==typeof b.grouping||"undefined"==typeof b.grouping.groupPriority||b.grouping.groupPriority<0?null:b.grouping.groupPriority,null!==a_group&&null===b_group?-1:null!==b_group&&null===a_group?1:null!==a_group&&null!==b_group?a_group-b_group:a.groupingPosition-b.groupingPosition}),columns.forEach(function(column,index){delete column.groupingPosition}),columns)},groupColumn:function(grid,column){"undefined"==typeof column.grouping&&(column.grouping={});var existingGrouping=service.getGrouping(grid);column.grouping.groupPriority=existingGrouping.grouping.length,column.sort?"undefined"!=typeof column.sort.direction&&null!==column.sort.direction||(column.sort.direction=uiGridConstants.ASC):column.sort={direction:uiGridConstants.ASC},column.treeAggregation={type:uiGridGroupingConstants.aggregation.COUNT,source:"grouping"},column.treeAggregationFn=uiGridTreeBaseService.nativeAggregations()[uiGridGroupingConstants.aggregation.COUNT].aggregationFn,column.treeAggregationFinalizerFn=service.groupedFinalizerFn,grid.api.grouping.raise.groupingChanged(column),grid.api.core.raise.sortChanged(grid,grid.getColumnSorting()),grid.queueGridRefresh()},ungroupColumn:function(grid,column){"undefined"!=typeof column.grouping&&(delete column.grouping.groupPriority,delete column.treeAggregation,delete column.customTreeAggregationFinalizer,service.tidyPriorities(grid),grid.api.grouping.raise.groupingChanged(column),grid.queueGridRefresh())},aggregateColumn:function(grid,column,aggregationType){"undefined"!=typeof column.grouping&&"undefined"!=typeof column.grouping.groupPriority&&column.grouping.groupPriority>=0&&service.ungroupColumn(grid,column);var aggregationDef={};"undefined"!=typeof grid.options.treeCustomAggregations[aggregationType]?aggregationDef=grid.options.treeCustomAggregations[aggregationType]:"undefined"!=typeof uiGridTreeBaseService.nativeAggregations()[aggregationType]&&(aggregationDef=uiGridTreeBaseService.nativeAggregations()[aggregationType]),column.treeAggregation={type:aggregationType,label:i18nService.get().aggregation[aggregationDef.label]||aggregationDef.label},column.treeAggregationFn=aggregationDef.aggregationFn,column.treeAggregationFinalizerFn=aggregationDef.finalizerFn,grid.api.grouping.raise.aggregationChanged(column),grid.queueGridRefresh()},setGrouping:function(grid,config){"undefined"!=typeof config&&(service.clearGrouping(grid),config.grouping&&config.grouping.length&&config.grouping.length>0&&config.grouping.forEach(function(group){var col=grid.getColumn(group.colName);col&&service.groupColumn(grid,col)}),config.aggregations&&config.aggregations.length&&config.aggregations.forEach(function(aggregation){var col=grid.getColumn(aggregation.colName);col&&service.aggregateColumn(grid,col,aggregation.aggregation.type)}),config.rowExpandedStates&&service.applyRowExpandedStates(grid.grouping.groupingHeaderCache,config.rowExpandedStates))},clearGrouping:function(grid){var currentGrouping=service.getGrouping(grid);currentGrouping.grouping.length>0&&currentGrouping.grouping.forEach(function(group){group.col||(group.col=grid.getColumn(group.colName)),service.ungroupColumn(grid,group.col)}),currentGrouping.aggregations.length>0&&currentGrouping.aggregations.forEach(function(aggregation){aggregation.col||(aggregation.col=grid.getColumn(aggregation.colName)),service.aggregateColumn(grid,aggregation.col,null)})},tidyPriorities:function(grid){"undefined"!=typeof grid&&"undefined"==typeof grid.grid||"undefined"==typeof this.grid||(grid=this.grid);var groupArray=[],sortArray=[];grid.columns.forEach(function(column,index){"undefined"!=typeof column.grouping&&"undefined"!=typeof column.grouping.groupPriority&&column.grouping.groupPriority>=0?groupArray.push(column):"undefined"!=typeof column.sort&&"undefined"!=typeof column.sort.priority&&column.sort.priority>=0&&sortArray.push(column)}),groupArray.sort(function(a,b){return a.grouping.groupPriority-b.grouping.groupPriority}),groupArray.forEach(function(column,index){column.grouping.groupPriority=index,column.suppressRemoveSort=!0,"undefined"==typeof column.sort&&(column.sort={}),column.sort.priority=index});var i=groupArray.length;sortArray.sort(function(a,b){return a.sort.priority-b.sort.priority}),sortArray.forEach(function(column,index){column.sort.priority=i,column.suppressRemoveSort=column.colDef.suppressRemoveSort,i++})},groupRows:function(renderableRows){if(0===renderableRows.length)return renderableRows;var grid=this;grid.grouping.oldGroupingHeaderCache=grid.grouping.groupingHeaderCache||{},grid.grouping.groupingHeaderCache={};for(var processingState=service.initialiseProcessingState(grid),updateProcessingState=function(groupFieldState,stateIndex){var fieldValue=grid.getCellValue(row,groupFieldState.col);groupFieldState.initialised&&0===rowSorter.getSortFn(grid,groupFieldState.col,renderableRows)(fieldValue,groupFieldState.currentValue)||(service.insertGroupHeader(grid,renderableRows,i,processingState,stateIndex),i++)},i=0;i<renderableRows.length;i++){var row=renderableRows[i];row.visible&&processingState.forEach(updateProcessingState)}return delete grid.grouping.oldGroupingHeaderCache,renderableRows},initialiseProcessingState:function(grid){var processingState=[],columnSettings=service.getGrouping(grid);return columnSettings.grouping.forEach(function(groupItem,index){processingState.push({fieldName:groupItem.field,col:groupItem.col,initialised:!1,currentValue:null,currentRow:null})}),processingState},getGrouping:function(grid){var groupArray=[],aggregateArray=[];return grid.columns.forEach(function(column,columnIndex){column.grouping&&"undefined"!=typeof column.grouping.groupPriority&&column.grouping.groupPriority>=0&&groupArray.push({field:column.field,col:column,groupPriority:column.grouping.groupPriority,grouping:column.grouping}),column.treeAggregation&&column.treeAggregation.type&&aggregateArray.push({field:column.field,col:column,aggregation:column.treeAggregation})}),groupArray.sort(function(a,b){return a.groupPriority-b.groupPriority}),groupArray.forEach(function(group,index){group.grouping.groupPriority=index,group.groupPriority=index,delete group.grouping}),{grouping:groupArray,aggregations:aggregateArray}},insertGroupHeader:function(grid,renderableRows,rowIndex,processingState,stateIndex){var col=(processingState[stateIndex].fieldName,processingState[stateIndex].col),newValue=grid.getCellValue(renderableRows[rowIndex],col),newDisplayValue=newValue;"undefined"!=typeof newValue&&null!==newValue||(newDisplayValue=grid.options.groupingNullLabel);for(var cacheItem=grid.grouping.oldGroupingHeaderCache,i=0;i<stateIndex;i++)cacheItem&&cacheItem[processingState[i].currentValue]&&(cacheItem=cacheItem[processingState[i].currentValue].children);var headerRow;for(cacheItem&&cacheItem[newValue]?(headerRow=cacheItem[newValue].row,headerRow.entity={}):(headerRow=new GridRow({},null,grid),gridClassFactory.rowTemplateAssigner.call(grid,headerRow)),headerRow.entity["$$"+processingState[stateIndex].col.uid]={groupVal:newDisplayValue},headerRow.treeLevel=stateIndex,headerRow.groupHeader=!0,headerRow.internalRow=!0,headerRow.enableCellEdit=!1,headerRow.enableSelection=grid.options.enableGroupHeaderSelection,processingState[stateIndex].initialised=!0,processingState[stateIndex].currentValue=newValue,processingState[stateIndex].currentRow=headerRow,service.finaliseProcessingState(processingState,stateIndex+1),renderableRows.splice(rowIndex,0,headerRow),cacheItem=grid.grouping.groupingHeaderCache,i=0;i<stateIndex;i++)cacheItem=cacheItem[processingState[i].currentValue].children;cacheItem[newValue]={row:headerRow,children:{}}},finaliseProcessingState:function(processingState,stateIndex){for(var i=stateIndex;i<processingState.length;i++)processingState[i].initialised=!1,processingState[i].currentRow=null,processingState[i].currentValue=null},getRowExpandedStates:function(treeChildren){if("undefined"==typeof treeChildren)return{};var newChildren={};return angular.forEach(treeChildren,function(value,key){newChildren[key]={state:value.row.treeNode.state},value.children?newChildren[key].children=service.getRowExpandedStates(value.children):newChildren[key].children={}}),newChildren},applyRowExpandedStates:function(currentNode,expandedStates){"undefined"!=typeof expandedStates&&angular.forEach(expandedStates,function(value,key){currentNode[key]&&(currentNode[key].row.treeNode.state=value.state,value.children&&currentNode[key].children&&service.applyRowExpandedStates(currentNode[key].children,value.children))})}};return service}]),module.directive("uiGridGrouping",["uiGridGroupingConstants","uiGridGroupingService","$templateCache",function(uiGridGroupingConstants,uiGridGroupingService,$templateCache){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridCtrl.grid.options.enableGrouping!==!1&&uiGridGroupingService.initializeGrid(uiGridCtrl.grid,$scope)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.importer",["ui.grid"]);module.constant("uiGridImporterConstants",{featureName:"importer"}),module.service("uiGridImporterService",["$q","uiGridConstants","uiGridImporterConstants","gridUtil","$compile","$interval","i18nService","$window",function($q,uiGridConstants,uiGridImporterConstants,gridUtil,$compile,$interval,i18nService,$window){var service={initializeGrid:function($scope,grid){grid.importer={$scope:$scope},this.defaultGridOptions(grid.options);var publicApi={events:{importer:{}},methods:{importer:{importFile:function(fileObject){service.importThisFile(grid,fileObject)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods),grid.options.enableImporter&&grid.options.importerShowMenu&&(grid.api.core.addToGridMenu?service.addToMenu(grid):$interval(function(){grid.api.core.addToGridMenu&&service.addToMenu(grid)},100,1))},defaultGridOptions:function(gridOptions){gridOptions.enableImporter||void 0===gridOptions.enableImporter?$window.hasOwnProperty("File")&&$window.hasOwnProperty("FileReader")&&$window.hasOwnProperty("FileList")&&$window.hasOwnProperty("Blob")?gridOptions.enableImporter=!0:(gridUtil.logError("The File APIs are not fully supported in this browser, grid importer cannot be used."),gridOptions.enableImporter=!1):gridOptions.enableImporter=!1,gridOptions.importerProcessHeaders=gridOptions.importerProcessHeaders||service.processHeaders,gridOptions.importerHeaderFilter=gridOptions.importerHeaderFilter||function(displayName){return displayName},gridOptions.importerErrorCallback&&"function"==typeof gridOptions.importerErrorCallback||delete gridOptions.importerErrorCallback,gridOptions.enableImporter!==!0||gridOptions.importerDataAddCallback||(gridUtil.logError("You have not set an importerDataAddCallback, importer is disabled"),gridOptions.enableImporter=!1),gridOptions.importerShowMenu=gridOptions.importerShowMenu!==!1,gridOptions.importerObjectCallback=gridOptions.importerObjectCallback||function(grid,newObject){return newObject}},addToMenu:function(grid){grid.api.core.addToGridMenu(grid,[{title:i18nService.getSafeText("gridMenu.importerTitle"),order:150},{templateUrl:"ui-grid/importerMenuItemContainer",action:function($event){this.grid.api.importer.importAFile(grid)},order:151}])},importThisFile:function(grid,fileObject){if(!fileObject)return void gridUtil.logError("No file object provided to importThisFile, should be impossible, aborting");var reader=new FileReader;switch(fileObject.type){case"application/json":reader.onload=service.importJsonClosure(grid);break;default:reader.onload=service.importCsvClosure(grid)}reader.readAsText(fileObject)},importJsonClosure:function(grid){return function(importFile){var newObject,newObjects=[],importArray=service.parseJson(grid,importFile);null!==importArray&&(importArray.forEach(function(value,index){newObject=service.newObject(grid),angular.extend(newObject,value),newObject=grid.options.importerObjectCallback(grid,newObject),newObjects.push(newObject)}),service.addObjects(grid,newObjects))}},parseJson:function(grid,importFile){var loadedObjects;try{loadedObjects=JSON.parse(importFile.target.result)}catch(e){return void service.alertError(grid,"importer.invalidJson","File could not be processed, is it valid json? Content was: ",importFile.target.result)}return Array.isArray(loadedObjects)?loadedObjects:(service.alertError(grid,"importer.jsonNotarray","Import failed, file is not an array, file was: ",importFile.target.result),[])},importCsvClosure:function(grid){return function(importFile){var importArray=service.parseCsv(importFile);if(!importArray||importArray.length<1)return void service.alertError(grid,"importer.invalidCsv","File could not be processed, is it valid csv? Content was: ",importFile.target.result);var newObjects=service.createCsvObjects(grid,importArray);return newObjects&&0!==newObjects.length?void service.addObjects(grid,newObjects):void service.alertError(grid,"importer.noObjects","Objects were not able to be derived, content was: ",importFile.target.result)}},parseCsv:function(importFile){var csv=importFile.target.result;return CSV.parse(csv)},createCsvObjects:function(grid,importArray){var headerMapping=grid.options.importerProcessHeaders(grid,importArray.shift());if(!headerMapping||0===headerMapping.length)return service.alertError(grid,"importer.noHeaders","Column names could not be derived, content was: ",importArray),[];var newObject,newObjects=[];return importArray.forEach(function(row,index){newObject=service.newObject(grid),null!==row&&row.forEach(function(field,index){null!==headerMapping[index]&&(newObject[headerMapping[index]]=field)}),newObject=grid.options.importerObjectCallback(grid,newObject),newObjects.push(newObject)}),newObjects},processHeaders:function(grid,headerRow){var headers=[];if(grid.options.columnDefs&&0!==grid.options.columnDefs.length){var lookupHash=service.flattenColumnDefs(grid,grid.options.columnDefs);return headerRow.forEach(function(value,index){lookupHash[value]?headers.push(lookupHash[value]):lookupHash[value.toLowerCase()]?headers.push(lookupHash[value.toLowerCase()]):headers.push(null)}),headers}return headerRow.forEach(function(value,index){headers.push(value.replace(/[^0-9a-zA-Z\-_]/g,"_"))}),headers},flattenColumnDefs:function(grid,columnDefs){var flattenedHash={};return columnDefs.forEach(function(columnDef,index){columnDef.name&&(flattenedHash[columnDef.name]=columnDef.field||columnDef.name,flattenedHash[columnDef.name.toLowerCase()]=columnDef.field||columnDef.name),columnDef.field&&(flattenedHash[columnDef.field]=columnDef.field||columnDef.name,flattenedHash[columnDef.field.toLowerCase()]=columnDef.field||columnDef.name),columnDef.displayName&&(flattenedHash[columnDef.displayName]=columnDef.field||columnDef.name,flattenedHash[columnDef.displayName.toLowerCase()]=columnDef.field||columnDef.name),columnDef.displayName&&grid.options.importerHeaderFilter&&(flattenedHash[grid.options.importerHeaderFilter(columnDef.displayName)]=columnDef.field||columnDef.name,flattenedHash[grid.options.importerHeaderFilter(columnDef.displayName).toLowerCase()]=columnDef.field||columnDef.name)}),flattenedHash},addObjects:function(grid,newObjects,$scope){if(grid.api.rowEdit){var dataChangeDereg=grid.registerDataChangeCallback(function(){grid.api.rowEdit.setRowsDirty(newObjects),dataChangeDereg()},[uiGridConstants.dataChange.ROW]);grid.importer.$scope.$on("$destroy",dataChangeDereg)}grid.importer.$scope.$apply(grid.options.importerDataAddCallback(grid,newObjects))},newObject:function(grid){return"undefined"!=typeof grid.options&&"undefined"!=typeof grid.options.importerNewObject?new grid.options.importerNewObject:{}},alertError:function(grid,alertI18nToken,consoleMessage,context){grid.options.importerErrorCallback?grid.options.importerErrorCallback(grid,alertI18nToken,consoleMessage,context):($window.alert(i18nService.getSafeText(alertI18nToken)),gridUtil.logError(consoleMessage+context))}};return service}]),module.directive("uiGridImporter",["uiGridImporterConstants","uiGridImporterService","gridUtil","$compile",function(uiGridImporterConstants,uiGridImporterService,gridUtil,$compile){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){uiGridImporterService.initializeGrid($scope,uiGridCtrl.grid)}}}]),module.directive("uiGridImporterMenuItem",["uiGridImporterConstants","uiGridImporterService","gridUtil","$compile",function(uiGridImporterConstants,uiGridImporterService,gridUtil,$compile){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,templateUrl:"ui-grid/importerMenuItem",link:function($scope,$elm,$attrs,uiGridCtrl){var handleFileSelect=function(event){var target=event.srcElement||event.target;if(target&&target.files&&1===target.files.length){var fileObject=target.files[0];uiGridImporterService.importThisFile(grid,fileObject),target.form.reset()}},fileChooser=$elm[0].querySelectorAll(".ui-grid-importer-file-chooser"),grid=uiGridCtrl.grid;1!==fileChooser.length?gridUtil.logError("Found > 1 or < 1 file choosers within the menu item, error, cannot continue"):fileChooser[0].addEventListener("change",handleFileSelect,!1)}}}])}(),function(){"use strict";var module=angular.module("ui.grid.infiniteScroll",["ui.grid"]);module.service("uiGridInfiniteScrollService",["gridUtil","$compile","$timeout","uiGridConstants","ScrollEvent","$q",function(gridUtil,$compile,$timeout,uiGridConstants,ScrollEvent,$q){var service={initializeGrid:function(grid,$scope){if(service.defaultGridOptions(grid.options),grid.options.enableInfiniteScroll){grid.infiniteScroll={dataLoading:!1},service.setScrollDirections(grid,grid.options.infiniteScrollUp,grid.options.infiniteScrollDown),grid.api.core.on.scrollEnd($scope,service.handleScroll);var publicApi={events:{infiniteScroll:{needLoadMoreData:function($scope,fn){},needLoadMoreDataTop:function($scope,fn){}}},methods:{infiniteScroll:{dataLoaded:function(scrollUp,scrollDown){service.setScrollDirections(grid,scrollUp,scrollDown);var promise=service.adjustScroll(grid).then(function(){grid.infiniteScroll.dataLoading=!1});return promise},resetScroll:function(scrollUp,scrollDown){return service.setScrollDirections(grid,scrollUp,scrollDown),service.adjustInfiniteScrollPosition(grid,0)},saveScrollPercentage:function(){grid.infiniteScroll.prevScrollTop=grid.renderContainers.body.prevScrollTop,grid.infiniteScroll.previousVisibleRows=grid.getVisibleRowCount()},dataRemovedTop:function(scrollUp,scrollDown){service.dataRemovedTop(grid,scrollUp,scrollDown)},dataRemovedBottom:function(scrollUp,scrollDown){service.dataRemovedBottom(grid,scrollUp,scrollDown)},setScrollDirections:function(scrollUp,scrollDown){service.setScrollDirections(grid,scrollUp,scrollDown)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)}},defaultGridOptions:function(gridOptions){gridOptions.enableInfiniteScroll=gridOptions.enableInfiniteScroll!==!1,gridOptions.infiniteScrollRowsFromEnd=gridOptions.infiniteScrollRowsFromEnd||20,gridOptions.infiniteScrollUp=gridOptions.infiniteScrollUp===!0,gridOptions.infiniteScrollDown=gridOptions.infiniteScrollDown!==!1},setScrollDirections:function(grid,scrollUp,scrollDown){grid.infiniteScroll.scrollUp=scrollUp===!0,grid.suppressParentScrollUp=scrollUp===!0,grid.infiniteScroll.scrollDown=scrollDown!==!1,grid.suppressParentScrollDown=scrollDown!==!1},handleScroll:function(args){if(!(args.grid.infiniteScroll&&args.grid.infiniteScroll.dataLoading||"ui.grid.adjustInfiniteScrollPosition"===args.source)&&args.y){var percentage,targetPercentage=args.grid.options.infiniteScrollRowsFromEnd/args.grid.renderContainers.body.visibleRowCache.length;args.grid.scrollDirection===uiGridConstants.scrollDirection.UP?(percentage=args.y.percentage,percentage<=targetPercentage&&service.loadData(args.grid)):args.grid.scrollDirection===uiGridConstants.scrollDirection.DOWN&&(percentage=1-args.y.percentage,percentage<=targetPercentage&&service.loadData(args.grid))}},loadData:function(grid){grid.infiniteScroll.previousVisibleRows=grid.renderContainers.body.visibleRowCache.length,grid.infiniteScroll.direction=grid.scrollDirection,delete grid.infiniteScroll.prevScrollTop,grid.scrollDirection===uiGridConstants.scrollDirection.UP&&grid.infiniteScroll.scrollUp?(grid.infiniteScroll.dataLoading=!0,grid.api.infiniteScroll.raise.needLoadMoreDataTop()):grid.scrollDirection===uiGridConstants.scrollDirection.DOWN&&grid.infiniteScroll.scrollDown&&(grid.infiniteScroll.dataLoading=!0,grid.api.infiniteScroll.raise.needLoadMoreData())},adjustScroll:function(grid){var promise=$q.defer();return $timeout(function(){var viewportHeight,rowHeight,newVisibleRows,oldTop,newTop;viewportHeight=grid.getViewportHeight()+grid.headerHeight-grid.renderContainers.body.headerHeight-grid.scrollbarHeight,rowHeight=grid.options.rowHeight,void 0===grid.infiniteScroll.direction&&service.adjustInfiniteScrollPosition(grid,0),newVisibleRows=grid.getVisibleRowCount();var canvasHeight=rowHeight*newVisibleRows;grid.infiniteScroll.scrollDown&&viewportHeight>canvasHeight&&grid.api.infiniteScroll.raise.needLoadMoreData(),grid.infiniteScroll.direction===uiGridConstants.scrollDirection.UP&&(oldTop=grid.infiniteScroll.prevScrollTop||0,newTop=oldTop+(newVisibleRows-grid.infiniteScroll.previousVisibleRows)*rowHeight,service.adjustInfiniteScrollPosition(grid,newTop),$timeout(function(){promise.resolve()})),grid.infiniteScroll.direction===uiGridConstants.scrollDirection.DOWN&&(newTop=grid.infiniteScroll.prevScrollTop||grid.infiniteScroll.previousVisibleRows*rowHeight-viewportHeight,service.adjustInfiniteScrollPosition(grid,newTop),$timeout(function(){promise.resolve()}))},0),promise.promise},adjustInfiniteScrollPosition:function(grid,scrollTop){var scrollEvent=new ScrollEvent(grid,null,null,"ui.grid.adjustInfiniteScrollPosition"),visibleRows=grid.getVisibleRowCount(),viewportHeight=grid.getViewportHeight()+grid.headerHeight-grid.renderContainers.body.headerHeight-grid.scrollbarHeight,rowHeight=grid.options.rowHeight,scrollHeight=visibleRows*rowHeight-viewportHeight;0===scrollTop&&grid.infiniteScroll.scrollUp?scrollEvent.y={percentage:1/scrollHeight}:scrollEvent.y={percentage:scrollTop/scrollHeight},grid.scrollContainers("",scrollEvent)},dataRemovedTop:function(grid,scrollUp,scrollDown){var newVisibleRows,oldTop,newTop,rowHeight;return service.setScrollDirections(grid,scrollUp,scrollDown),newVisibleRows=grid.renderContainers.body.visibleRowCache.length,oldTop=grid.infiniteScroll.prevScrollTop,rowHeight=grid.options.rowHeight,newTop=oldTop-(grid.infiniteScroll.previousVisibleRows-newVisibleRows)*rowHeight,service.adjustInfiniteScrollPosition(grid,newTop)},dataRemovedBottom:function(grid,scrollUp,scrollDown){var newTop;return service.setScrollDirections(grid,scrollUp,scrollDown),newTop=grid.infiniteScroll.prevScrollTop,service.adjustInfiniteScrollPosition(grid,newTop)}};return service}]),module.directive("uiGridInfiniteScroll",["uiGridInfiniteScrollService",function(uiGridInfiniteScrollService){return{priority:-200,scope:!1,require:"^uiGrid",compile:function($scope,$elm,$attr){return{pre:function($scope,$elm,$attr,uiGridCtrl){uiGridInfiniteScrollService.initializeGrid(uiGridCtrl.grid,$scope)},post:function($scope,$elm,$attr){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.moveColumns",["ui.grid"]);module.service("uiGridMoveColumnService",["$q","$timeout","$log","ScrollEvent","uiGridConstants","gridUtil",function($q,$timeout,$log,ScrollEvent,uiGridConstants,gridUtil){var service={initializeGrid:function(grid){var self=this;this.registerPublicApi(grid),this.defaultGridOptions(grid.options),grid.moveColumns={orderCache:[]},grid.registerColumnBuilder(self.movableColumnBuilder),grid.registerDataChangeCallback(self.verifyColumnOrder,[uiGridConstants.dataChange.COLUMN])},registerPublicApi:function(grid){var self=this,publicApi={events:{colMovable:{columnPositionChanged:function(colDef,originalPosition,newPosition){}}},methods:{colMovable:{moveColumn:function(originalPosition,finalPosition){var columns=grid.columns;if(!angular.isNumber(originalPosition)||!angular.isNumber(finalPosition))return void gridUtil.logError("MoveColumn: Please provide valid values for originalPosition and finalPosition");for(var nonMovableColumns=0,i=0;i<columns.length;i++)(angular.isDefined(columns[i].colDef.visible)&&columns[i].colDef.visible===!1||columns[i].isRowHeader===!0)&&nonMovableColumns++;if(originalPosition>=columns.length-nonMovableColumns||finalPosition>=columns.length-nonMovableColumns)return void gridUtil.logError("MoveColumn: Invalid values for originalPosition, finalPosition");var findPositionForRenderIndex=function(index){for(var position=index,i=0;i<=position;i++)angular.isDefined(columns[i])&&(angular.isDefined(columns[i].colDef.visible)&&columns[i].colDef.visible===!1||columns[i].isRowHeader===!0)&&position++;return position};self.redrawColumnAtPosition(grid,findPositionForRenderIndex(originalPosition),findPositionForRenderIndex(finalPosition))}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.enableColumnMoving=gridOptions.enableColumnMoving!==!1},movableColumnBuilder:function(colDef,col,gridOptions){var promises=[];return colDef.enableColumnMoving=void 0===colDef.enableColumnMoving?gridOptions.enableColumnMoving:colDef.enableColumnMoving,$q.all(promises)},updateColumnCache:function(grid){grid.moveColumns.orderCache=grid.getOnlyDataColumns()},verifyColumnOrder:function(grid){var newIndex,headerRowOffset=grid.rowHeaderColumns.length;angular.forEach(grid.moveColumns.orderCache,function(cacheCol,cacheIndex){if(newIndex=grid.columns.indexOf(cacheCol),newIndex!==-1&&newIndex-headerRowOffset!==cacheIndex){var column=grid.columns.splice(newIndex,1)[0];grid.columns.splice(cacheIndex+headerRowOffset,0,column)}})},redrawColumnAtPosition:function(grid,originalPosition,newPosition){var columns=grid.columns,originalColumn=columns[originalPosition];if(originalColumn.colDef.enableColumnMoving){if(originalPosition>newPosition)for(var i1=originalPosition;i1>newPosition;i1--)columns[i1]=columns[i1-1];else if(newPosition>originalPosition)for(var i2=originalPosition;i2<newPosition;i2++)columns[i2]=columns[i2+1];columns[newPosition]=originalColumn,service.updateColumnCache(grid),grid.queueGridRefresh(),$timeout(function(){grid.api.core.notifyDataChange(uiGridConstants.dataChange.COLUMN),grid.api.colMovable.raise.columnPositionChanged(originalColumn.colDef,originalPosition,newPosition)})}}};return service}]),module.directive("uiGridMoveColumns",["uiGridMoveColumnService",function(uiGridMoveColumnService){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridMoveColumnService.initializeGrid(uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridHeaderCell",["$q","gridUtil","uiGridMoveColumnService","$document","$log","uiGridConstants","ScrollEvent",function($q,gridUtil,uiGridMoveColumnService,$document,$log,uiGridConstants,ScrollEvent){return{priority:-10,require:"^uiGrid",compile:function(){return{post:function($scope,$elm,$attrs,uiGridCtrl){if($scope.col.colDef.enableColumnMoving){var gridLeft,previousMouseX,totalMouseMovement,rightMoveLimit,movingElm,reducedWidth,$contentsElm=angular.element($elm[0].querySelectorAll(".ui-grid-cell-contents")),elmCloned=!1,moveOccurred=!1,downFn=function(event){gridLeft=$scope.grid.element[0].getBoundingClientRect().left,$scope.grid.hasLeftContainer()&&(gridLeft+=$scope.grid.renderContainers.left.header[0].getBoundingClientRect().width),previousMouseX=event.pageX,totalMouseMovement=0,rightMoveLimit=gridLeft+$scope.grid.getViewportWidth(),"mousedown"===event.type?($document.on("mousemove",moveFn),$document.on("mouseup",upFn)):"touchstart"===event.type&&($document.on("touchmove",moveFn),$document.on("touchend",upFn))},moveFn=function(event){var changeValue=event.pageX-previousMouseX;0!==changeValue&&(document.onselectstart=function(){return!1},moveOccurred=!0,elmCloned?elmCloned&&(moveElement(changeValue),previousMouseX=event.pageX):cloneElement())},upFn=function(event){if(document.onselectstart=null,movingElm&&(movingElm.remove(),elmCloned=!1),offAllEvents(),onDownEvents(),moveOccurred){for(var columns=$scope.grid.columns,columnIndex=0,i=0;i<columns.length&&columns[i].colDef.name!==$scope.col.colDef.name;i++)columnIndex++;if(totalMouseMovement<0){for(var totalColumnsLeftWidth=0,il=columnIndex-1;il>=0;il--)if((angular.isUndefined(columns[il].colDef.visible)||columns[il].colDef.visible===!0)&&(totalColumnsLeftWidth+=columns[il].drawnWidth||columns[il].width||columns[il].colDef.width,totalColumnsLeftWidth>Math.abs(totalMouseMovement))){uiGridMoveColumnService.redrawColumnAtPosition($scope.grid,columnIndex,il+1);break}totalColumnsLeftWidth<Math.abs(totalMouseMovement)&&uiGridMoveColumnService.redrawColumnAtPosition($scope.grid,columnIndex,0)}else if(totalMouseMovement>0){for(var totalColumnsRightWidth=0,ir=columnIndex+1;ir<columns.length;ir++)if((angular.isUndefined(columns[ir].colDef.visible)||columns[ir].colDef.visible===!0)&&(totalColumnsRightWidth+=columns[ir].drawnWidth||columns[ir].width||columns[ir].colDef.width,totalColumnsRightWidth>totalMouseMovement)){uiGridMoveColumnService.redrawColumnAtPosition($scope.grid,columnIndex,ir-1);break}totalColumnsRightWidth<totalMouseMovement&&uiGridMoveColumnService.redrawColumnAtPosition($scope.grid,columnIndex,columns.length-1)}}},onDownEvents=function(){$contentsElm.on("touchstart",downFn),$contentsElm.on("mousedown",downFn)},offAllEvents=function(){$contentsElm.off("touchstart",downFn),$contentsElm.off("mousedown",downFn),$document.off("mousemove",moveFn),$document.off("touchmove",moveFn),$document.off("mouseup",upFn),$document.off("touchend",upFn)};onDownEvents();var cloneElement=function(){elmCloned=!0,movingElm=$elm.clone(),$elm.parent().append(movingElm),movingElm.addClass("movingColumn");var elmLeft,movingElementStyles={};elmLeft="safari"===gridUtil.detectBrowser()?$elm[0].offsetLeft+$elm[0].offsetWidth-$elm[0].getBoundingClientRect().width:$elm[0].getBoundingClientRect().left,movingElementStyles.left=elmLeft-gridLeft+"px";var gridRight=$scope.grid.element[0].getBoundingClientRect().right,elmRight=$elm[0].getBoundingClientRect().right;elmRight>gridRight&&(reducedWidth=$scope.col.drawnWidth+(gridRight-elmRight),movingElementStyles.width=reducedWidth+"px"),movingElm.css(movingElementStyles)},moveElement=function(changeValue){for(var columns=$scope.grid.columns,totalColumnWidth=0,i=0;i<columns.length;i++)(angular.isUndefined(columns[i].colDef.visible)||columns[i].colDef.visible===!0)&&(totalColumnWidth+=columns[i].drawnWidth||columns[i].width||columns[i].colDef.width);var newElementLeft,currentElmLeft=movingElm[0].getBoundingClientRect().left-1,currentElmRight=movingElm[0].getBoundingClientRect().right;if(newElementLeft=currentElmLeft-gridLeft+changeValue,newElementLeft=newElementLeft<rightMoveLimit?newElementLeft:rightMoveLimit,(currentElmLeft>=gridLeft||changeValue>0)&&(currentElmRight<=rightMoveLimit||changeValue<0))movingElm.css({visibility:"visible",left:newElementLeft+"px"});else if(totalColumnWidth>Math.ceil(uiGridCtrl.grid.gridWidth)){changeValue*=8;var scrollEvent=new ScrollEvent($scope.col.grid,null,null,"uiGridHeaderCell.moveElement");scrollEvent.x={pixels:changeValue},scrollEvent.grid.scrollContainers("",scrollEvent)}for(var totalColumnsLeftWidth=0,il=0;il<columns.length;il++)if(angular.isUndefined(columns[il].colDef.visible)||columns[il].colDef.visible===!0){if(columns[il].colDef.name===$scope.col.colDef.name)break;
totalColumnsLeftWidth+=columns[il].drawnWidth||columns[il].width||columns[il].colDef.width}void 0===$scope.newScrollLeft?totalMouseMovement+=changeValue:totalMouseMovement=$scope.newScrollLeft+newElementLeft-totalColumnsLeftWidth,reducedWidth<$scope.col.drawnWidth&&(reducedWidth+=Math.abs(changeValue),movingElm.css({width:reducedWidth+"px"}))}}}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.pagination",["ng","ui.grid"]);module.service("uiGridPaginationService",["gridUtil",function(gridUtil){var service={initializeGrid:function(grid){service.defaultGridOptions(grid.options);var publicApi={events:{pagination:{paginationChanged:function(currentPage,pageSize){}}},methods:{pagination:{getPage:function(){return grid.options.enablePagination?grid.options.paginationCurrentPage:null},getTotalPages:function(){return grid.options.enablePagination?0===grid.options.totalItems?1:Math.ceil(grid.options.totalItems/grid.options.paginationPageSize):null},nextPage:function(){grid.options.enablePagination&&(grid.options.totalItems>0?grid.options.paginationCurrentPage=Math.min(grid.options.paginationCurrentPage+1,publicApi.methods.pagination.getTotalPages()):grid.options.paginationCurrentPage++)},previousPage:function(){grid.options.enablePagination&&(grid.options.paginationCurrentPage=Math.max(grid.options.paginationCurrentPage-1,1))},seek:function(page){if(grid.options.enablePagination){if(!angular.isNumber(page)||page<1)throw"Invalid page number: "+page;grid.options.paginationCurrentPage=Math.min(page,publicApi.methods.pagination.getTotalPages())}}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods);var processPagination=function(renderableRows){if(grid.options.useExternalPagination||!grid.options.enablePagination)return renderableRows;var pageSize=parseInt(grid.options.paginationPageSize,10),currentPage=parseInt(grid.options.paginationCurrentPage,10),visibleRows=renderableRows.filter(function(row){return row.visible});grid.options.totalItems=visibleRows.length;var firstRow=(currentPage-1)*pageSize;return firstRow>visibleRows.length&&(currentPage=grid.options.paginationCurrentPage=1,firstRow=(currentPage-1)*pageSize),visibleRows.slice(firstRow,firstRow+pageSize)};grid.registerRowsProcessor(processPagination,900)},defaultGridOptions:function(gridOptions){gridOptions.enablePagination=gridOptions.enablePagination!==!1,gridOptions.enablePaginationControls=gridOptions.enablePaginationControls!==!1,gridOptions.useExternalPagination=gridOptions.useExternalPagination===!0,gridUtil.isNullOrUndefined(gridOptions.totalItems)&&(gridOptions.totalItems=0),gridUtil.isNullOrUndefined(gridOptions.paginationPageSizes)&&(gridOptions.paginationPageSizes=[250,500,1e3]),gridUtil.isNullOrUndefined(gridOptions.paginationPageSize)&&(gridOptions.paginationPageSizes.length>0?gridOptions.paginationPageSize=gridOptions.paginationPageSizes[0]:gridOptions.paginationPageSize=0),gridUtil.isNullOrUndefined(gridOptions.paginationCurrentPage)&&(gridOptions.paginationCurrentPage=1),gridUtil.isNullOrUndefined(gridOptions.paginationTemplate)&&(gridOptions.paginationTemplate="ui-grid/pagination")},onPaginationChanged:function(grid,currentPage,pageSize){grid.api.pagination.raise.paginationChanged(currentPage,pageSize),grid.options.useExternalPagination||grid.queueGridRefresh()}};return service}]),module.directive("uiGridPagination",["gridUtil","uiGridPaginationService",function(gridUtil,uiGridPaginationService){return{priority:-200,scope:!1,require:"uiGrid",link:{pre:function($scope,$elm,$attr,uiGridCtrl){uiGridPaginationService.initializeGrid(uiGridCtrl.grid),gridUtil.getTemplate(uiGridCtrl.grid.options.paginationTemplate).then(function(contents){var template=angular.element(contents);$elm.append(template),uiGridCtrl.innerCompile(template)})}}}}]),module.directive("uiGridPager",["uiGridPaginationService","uiGridConstants","gridUtil","i18nService",function(uiGridPaginationService,uiGridConstants,gridUtil,i18nService){return{priority:-200,scope:!0,require:"^uiGrid",link:function($scope,$elm,$attr,uiGridCtrl){var defaultFocusElementSelector=".ui-grid-pager-control-input";$scope.aria=i18nService.getSafeText("pagination.aria"),$scope.paginationApi=uiGridCtrl.grid.api.pagination,$scope.sizesLabel=i18nService.getSafeText("pagination.sizes"),$scope.totalItemsLabel=i18nService.getSafeText("pagination.totalItems"),$scope.paginationOf=i18nService.getSafeText("pagination.of"),$scope.paginationThrough=i18nService.getSafeText("pagination.through");var options=uiGridCtrl.grid.options;uiGridCtrl.grid.renderContainers.body.registerViewportAdjuster(function(adjustment){return adjustment.height=adjustment.height-gridUtil.elementHeight($elm),adjustment});var dataChangeDereg=uiGridCtrl.grid.registerDataChangeCallback(function(grid){grid.options.useExternalPagination||(grid.options.totalItems=grid.rows.length)},[uiGridConstants.dataChange.ROW]);$scope.$on("$destroy",dataChangeDereg);var setShowing=function(){$scope.showingLow=(options.paginationCurrentPage-1)*options.paginationPageSize+1,$scope.showingHigh=Math.min(options.paginationCurrentPage*options.paginationPageSize,options.totalItems)},deregT=$scope.$watch("grid.options.totalItems + grid.options.paginationPageSize",setShowing),deregP=$scope.$watch("grid.options.paginationCurrentPage + grid.options.paginationPageSize",function(newValues,oldValues){if(newValues!==oldValues&&void 0!==oldValues){if(!angular.isNumber(options.paginationCurrentPage)||options.paginationCurrentPage<1)return void(options.paginationCurrentPage=1);if(options.totalItems>0&&options.paginationCurrentPage>$scope.paginationApi.getTotalPages())return void(options.paginationCurrentPage=$scope.paginationApi.getTotalPages());setShowing(),uiGridPaginationService.onPaginationChanged($scope.grid,options.paginationCurrentPage,options.paginationPageSize)}});$scope.$on("$destroy",function(){deregT(),deregP()}),$scope.cantPageForward=function(){return options.totalItems>0?options.paginationCurrentPage>=$scope.paginationApi.getTotalPages():options.data.length<1},$scope.cantPageToLast=function(){return!(options.totalItems>0)||$scope.cantPageForward()},$scope.cantPageBackward=function(){return options.paginationCurrentPage<=1};var focusToInputIf=function(condition){condition&&gridUtil.focus.bySelector($elm,defaultFocusElementSelector)};$scope.pageFirstPageClick=function(){$scope.paginationApi.seek(1),focusToInputIf($scope.cantPageBackward())},$scope.pagePreviousPageClick=function(){$scope.paginationApi.previousPage(),focusToInputIf($scope.cantPageBackward())},$scope.pageNextPageClick=function(){$scope.paginationApi.nextPage(),focusToInputIf($scope.cantPageForward())},$scope.pageLastPageClick=function(){$scope.paginationApi.seek($scope.paginationApi.getTotalPages()),focusToInputIf($scope.cantPageToLast())}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.pinning",["ui.grid"]);module.constant("uiGridPinningConstants",{container:{LEFT:"left",RIGHT:"right",NONE:""}}),module.service("uiGridPinningService",["gridUtil","GridRenderContainer","i18nService","uiGridPinningConstants",function(gridUtil,GridRenderContainer,i18nService,uiGridPinningConstants){var service={initializeGrid:function(grid){service.defaultGridOptions(grid.options),grid.registerColumnBuilder(service.pinningColumnBuilder);var publicApi={events:{pinning:{columnPinned:function(colDef,container){}}},methods:{pinning:{pinColumn:function(col,container){service.pinColumn(grid,col,container)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.enablePinning=gridOptions.enablePinning!==!1},pinningColumnBuilder:function(colDef,col,gridOptions){if(colDef.enablePinning=void 0===colDef.enablePinning?gridOptions.enablePinning:colDef.enablePinning,colDef.pinnedLeft?(col.renderContainer="left",col.grid.createLeftContainer()):colDef.pinnedRight&&(col.renderContainer="right",col.grid.createRightContainer()),colDef.enablePinning){var pinColumnLeftAction={name:"ui.grid.pinning.pinLeft",title:i18nService.get().pinning.pinLeft,icon:"ui-grid-icon-left-open",shown:function(){return"undefined"==typeof this.context.col.renderContainer||!this.context.col.renderContainer||"left"!==this.context.col.renderContainer},action:function(){service.pinColumn(this.context.col.grid,this.context.col,uiGridPinningConstants.container.LEFT)}},pinColumnRightAction={name:"ui.grid.pinning.pinRight",title:i18nService.get().pinning.pinRight,icon:"ui-grid-icon-right-open",shown:function(){return"undefined"==typeof this.context.col.renderContainer||!this.context.col.renderContainer||"right"!==this.context.col.renderContainer},action:function(){service.pinColumn(this.context.col.grid,this.context.col,uiGridPinningConstants.container.RIGHT)}},removePinAction={name:"ui.grid.pinning.unpin",title:i18nService.get().pinning.unpin,icon:"ui-grid-icon-cancel",shown:function(){return"undefined"!=typeof this.context.col.renderContainer&&null!==this.context.col.renderContainer&&"body"!==this.context.col.renderContainer},action:function(){service.pinColumn(this.context.col.grid,this.context.col,uiGridPinningConstants.container.UNPIN)}};gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.pinning.pinLeft")||col.menuItems.push(pinColumnLeftAction),gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.pinning.pinRight")||col.menuItems.push(pinColumnRightAction),gridUtil.arrayContainsObjectWithProperty(col.menuItems,"name","ui.grid.pinning.unpin")||col.menuItems.push(removePinAction)}},pinColumn:function(grid,col,container){container===uiGridPinningConstants.container.NONE?col.renderContainer=null:(col.renderContainer=container,container===uiGridPinningConstants.container.LEFT?grid.createLeftContainer():container===uiGridPinningConstants.container.RIGHT&&grid.createRightContainer()),grid.refresh().then(function(){grid.api.pinning.raise.columnPinned(col.colDef,container)})}};return service}]),module.directive("uiGridPinning",["gridUtil","uiGridPinningService",function(gridUtil,uiGridPinningService){return{require:"uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridPinningService.initializeGrid(uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.resizeColumns",["ui.grid"]);module.service("uiGridResizeColumnsService",["gridUtil","$q","$timeout",function(gridUtil,$q,$timeout){var service={defaultGridOptions:function(gridOptions){gridOptions.enableColumnResizing=gridOptions.enableColumnResizing!==!1,gridOptions.enableColumnResize===!1&&(gridOptions.enableColumnResizing=!1)},colResizerColumnBuilder:function(colDef,col,gridOptions){var promises=[];return colDef.enableColumnResizing=void 0===colDef.enableColumnResizing?gridOptions.enableColumnResizing:colDef.enableColumnResizing,colDef.enableColumnResize===!1&&(colDef.enableColumnResizing=!1),$q.all(promises)},registerPublicApi:function(grid){var publicApi={events:{colResizable:{columnSizeChanged:function(colDef,deltaChange){}}}};grid.api.registerEventsFromObject(publicApi.events)},fireColumnSizeChanged:function(grid,colDef,deltaChange){$timeout(function(){grid.api.colResizable?grid.api.colResizable.raise.columnSizeChanged(colDef,deltaChange):gridUtil.logError("The resizeable api is not registered, this may indicate that you've included the module but not added the 'ui-grid-resize-columns' directive to your grid definition.  Cannot raise any events.")})},findTargetCol:function(col,position,rtlMultiplier){var renderContainer=col.getRenderContainer();if("left"===position){var colIndex=renderContainer.visibleColumnCache.indexOf(col);return renderContainer.visibleColumnCache[colIndex-1*rtlMultiplier]}return col}};return service}]),module.directive("uiGridResizeColumns",["gridUtil","uiGridResizeColumnsService",function(gridUtil,uiGridResizeColumnsService){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridResizeColumnsService.defaultGridOptions(uiGridCtrl.grid.options),uiGridCtrl.grid.registerColumnBuilder(uiGridResizeColumnsService.colResizerColumnBuilder),uiGridResizeColumnsService.registerPublicApi(uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridHeaderCell",["gridUtil","$templateCache","$compile","$q","uiGridResizeColumnsService","uiGridConstants","$timeout",function(gridUtil,$templateCache,$compile,$q,uiGridResizeColumnsService,uiGridConstants,$timeout){return{priority:-10,require:"^uiGrid",compile:function(){return{post:function($scope,$elm,$attrs,uiGridCtrl){var grid=uiGridCtrl.grid;if(grid.options.enableColumnResizing){var columnResizerElm=$templateCache.get("ui-grid/columnResizer"),rtlMultiplier=1;grid.isRTL()&&($scope.position="left",rtlMultiplier=-1);var displayResizers=function(){for(var resizers=$elm[0].getElementsByClassName("ui-grid-column-resizer"),i=0;i<resizers.length;i++)angular.element(resizers[i]).remove();var otherCol=uiGridResizeColumnsService.findTargetCol($scope.col,"left",rtlMultiplier),renderContainer=$scope.col.getRenderContainer();if(otherCol&&0!==renderContainer.visibleColumnCache.indexOf($scope.col)&&otherCol.colDef.enableColumnResizing!==!1){var resizerLeft=angular.element(columnResizerElm).clone();resizerLeft.attr("position","left"),$elm.prepend(resizerLeft),$compile(resizerLeft)($scope)}if($scope.col.colDef.enableColumnResizing!==!1){var resizerRight=angular.element(columnResizerElm).clone();resizerRight.attr("position","right"),$elm.append(resizerRight),$compile(resizerRight)($scope)}};displayResizers();var waitDisplay=function(){$timeout(displayResizers)},dataChangeDereg=grid.registerDataChangeCallback(waitDisplay,[uiGridConstants.dataChange.COLUMN]);$scope.$on("$destroy",dataChangeDereg)}}}}}}]),module.directive("uiGridColumnResizer",["$document","gridUtil","uiGridConstants","uiGridResizeColumnsService",function($document,gridUtil,uiGridConstants,uiGridResizeColumnsService){var resizeOverlay=angular.element('<div class="ui-grid-resize-overlay"></div>'),resizer={priority:0,scope:{col:"=",position:"@",renderIndex:"="},require:"?^uiGrid",link:function($scope,$elm,$attrs,uiGridCtrl){function refreshCanvas(xDiff){uiGridCtrl.grid.refreshCanvas(!0).then(function(){uiGridCtrl.grid.queueGridRefresh()})}function constrainWidth(col,width){var newWidth=width;return col.minWidth&&newWidth<col.minWidth?newWidth=col.minWidth:col.maxWidth&&newWidth>col.maxWidth&&(newWidth=col.maxWidth),newWidth}function moveFunction(event,args){event.originalEvent&&(event=event.originalEvent),event.preventDefault(),x=(event.targetTouches?event.targetTouches[0]:event).clientX-gridLeft,x<0?x=0:x>uiGridCtrl.grid.gridWidth&&(x=uiGridCtrl.grid.gridWidth);var col=uiGridResizeColumnsService.findTargetCol($scope.col,$scope.position,rtlMultiplier);if(col.colDef.enableColumnResizing!==!1){uiGridCtrl.grid.element.hasClass("column-resizing")||uiGridCtrl.grid.element.addClass("column-resizing");var xDiff=x-startX,newWidth=parseInt(col.drawnWidth+xDiff*rtlMultiplier,10);x+=(constrainWidth(col,newWidth)-newWidth)*rtlMultiplier,resizeOverlay.css({left:x+"px"}),uiGridCtrl.fireEvent(uiGridConstants.events.ITEM_DRAGGING)}}function upFunction(event,args){event.originalEvent&&(event=event.originalEvent),event.preventDefault(),uiGridCtrl.grid.element.removeClass("column-resizing"),resizeOverlay.remove(),x=(event.changedTouches?event.changedTouches[0]:event).clientX-gridLeft;var xDiff=x-startX;if(0===xDiff)return offAllEvents(),void onDownEvents();var col=uiGridResizeColumnsService.findTargetCol($scope.col,$scope.position,rtlMultiplier);if(col.colDef.enableColumnResizing!==!1){var newWidth=parseInt(col.drawnWidth+xDiff*rtlMultiplier,10);col.width=constrainWidth(col,newWidth),col.hasCustomWidth=!0,refreshCanvas(xDiff),uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid,col.colDef,xDiff),offAllEvents(),onDownEvents()}}var startX=0,x=0,gridLeft=0,rtlMultiplier=1;uiGridCtrl.grid.isRTL()&&($scope.position="left",rtlMultiplier=-1),"left"===$scope.position?$elm.addClass("left"):"right"===$scope.position&&$elm.addClass("right");var downFunction=function(event,args){event.originalEvent&&(event=event.originalEvent),event.stopPropagation(),gridLeft=uiGridCtrl.grid.element[0].getBoundingClientRect().left,startX=(event.targetTouches?event.targetTouches[0]:event).clientX-gridLeft,uiGridCtrl.grid.element.append(resizeOverlay),resizeOverlay.css({left:startX}),"touchstart"===event.type?($document.on("touchend",upFunction),$document.on("touchmove",moveFunction),$elm.off("mousedown",downFunction)):($document.on("mouseup",upFunction),$document.on("mousemove",moveFunction),$elm.off("touchstart",downFunction))},onDownEvents=function(){$elm.on("mousedown",downFunction),$elm.on("touchstart",downFunction)},offAllEvents=function(){$document.off("mouseup",upFunction),$document.off("touchend",upFunction),$document.off("mousemove",moveFunction),$document.off("touchmove",moveFunction),$elm.off("mousedown",downFunction),$elm.off("touchstart",downFunction)};onDownEvents();var dblClickFn=function(event,args){event.stopPropagation();var col=uiGridResizeColumnsService.findTargetCol($scope.col,$scope.position,rtlMultiplier);if(col.colDef.enableColumnResizing!==!1){var maxWidth=0,xDiff=0,renderContainerElm=gridUtil.closestElm($elm,".ui-grid-render-container"),cells=renderContainerElm.querySelectorAll("."+uiGridConstants.COL_CLASS_PREFIX+col.uid+" .ui-grid-cell-contents");Array.prototype.forEach.call(cells,function(cell){var menuButton;angular.element(cell).parent().hasClass("ui-grid-header-cell")&&(menuButton=angular.element(cell).parent()[0].querySelectorAll(".ui-grid-column-menu-button")),gridUtil.fakeElement(cell,{},function(newElm){var e=angular.element(newElm);e.attr("style","float: left");var width=gridUtil.elementWidth(e);if(menuButton){var menuButtonWidth=gridUtil.elementWidth(menuButton);width+=menuButtonWidth}width>maxWidth&&(maxWidth=width,xDiff=maxWidth-width)})}),col.width=constrainWidth(col,maxWidth),col.hasCustomWidth=!0,refreshCanvas(xDiff),uiGridResizeColumnsService.fireColumnSizeChanged(uiGridCtrl.grid,col.colDef,xDiff)}};$elm.on("dblclick",dblClickFn),$elm.on("$destroy",function(){$elm.off("dblclick",dblClickFn),offAllEvents()})}};return resizer}])}(),function(){"use strict";var module=angular.module("ui.grid.rowEdit",["ui.grid","ui.grid.edit","ui.grid.cellNav"]);module.constant("uiGridRowEditConstants",{}),module.service("uiGridRowEditService",["$interval","$q","uiGridConstants","uiGridRowEditConstants","gridUtil",function($interval,$q,uiGridConstants,uiGridRowEditConstants,gridUtil){var service={initializeGrid:function(scope,grid){grid.rowEdit={};var publicApi={events:{rowEdit:{saveRow:function(rowEntity){}}},methods:{rowEdit:{setSavePromise:function(rowEntity,savePromise){service.setSavePromise(grid,rowEntity,savePromise)},getDirtyRows:function(){return grid.rowEdit.dirtyRows?grid.rowEdit.dirtyRows:[]},getErrorRows:function(){return grid.rowEdit.errorRows?grid.rowEdit.errorRows:[]},flushDirtyRows:function(){return service.flushDirtyRows(grid)},setRowsDirty:function(dataRows){service.setRowsDirty(grid,dataRows)},setRowsClean:function(dataRows){service.setRowsClean(grid,dataRows)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods),grid.api.core.on.renderingComplete(scope,function(gridApi){grid.api.edit.on.afterCellEdit(scope,service.endEditCell),grid.api.edit.on.beginCellEdit(scope,service.beginEditCell),grid.api.edit.on.cancelCellEdit(scope,service.cancelEditCell),grid.api.cellNav&&grid.api.cellNav.on.navigate(scope,service.navigate)})},defaultGridOptions:function(gridOptions){},saveRow:function(grid,gridRow){var self=this;return function(){if(gridRow.isSaving=!0,gridRow.rowEditSavePromise)return gridRow.rowEditSavePromise;var promise=grid.api.rowEdit.raise.saveRow(gridRow.entity);return gridRow.rowEditSavePromise?gridRow.rowEditSavePromise.then(self.processSuccessPromise(grid,gridRow),self.processErrorPromise(grid,gridRow)):gridUtil.logError("A promise was not returned when saveRow event was raised, either nobody is listening to event, or event handler did not return a promise"),promise}},setSavePromise:function(grid,rowEntity,savePromise){var gridRow=grid.getRow(rowEntity);gridRow.rowEditSavePromise=savePromise},processSuccessPromise:function(grid,gridRow){var self=this;return function(){delete gridRow.isSaving,delete gridRow.isDirty,delete gridRow.isError,delete gridRow.rowEditSaveTimer,delete gridRow.rowEditSavePromise,self.removeRow(grid.rowEdit.errorRows,gridRow),self.removeRow(grid.rowEdit.dirtyRows,gridRow)}},processErrorPromise:function(grid,gridRow){return function(){delete gridRow.isSaving,delete gridRow.rowEditSaveTimer,delete gridRow.rowEditSavePromise,gridRow.isError=!0,grid.rowEdit.errorRows||(grid.rowEdit.errorRows=[]),service.isRowPresent(grid.rowEdit.errorRows,gridRow)||grid.rowEdit.errorRows.push(gridRow)}},removeRow:function(rowArray,removeGridRow){"undefined"!=typeof rowArray&&null!==rowArray&&rowArray.forEach(function(gridRow,index){gridRow.uid===removeGridRow.uid&&rowArray.splice(index,1)})},isRowPresent:function(rowArray,removeGridRow){var present=!1;return rowArray.forEach(function(gridRow,index){gridRow.uid===removeGridRow.uid&&(present=!0)}),present},flushDirtyRows:function(grid){var promises=[];return grid.api.rowEdit.getDirtyRows().forEach(function(gridRow){service.saveRow(grid,gridRow)(),promises.push(gridRow.rowEditSavePromise)}),$q.all(promises)},endEditCell:function(rowEntity,colDef,newValue,previousValue){var grid=this.grid,gridRow=grid.getRow(rowEntity);return gridRow?void((newValue!==previousValue||gridRow.isDirty)&&(grid.rowEdit.dirtyRows||(grid.rowEdit.dirtyRows=[]),gridRow.isDirty||(gridRow.isDirty=!0,grid.rowEdit.dirtyRows.push(gridRow)),delete gridRow.isError,service.considerSetTimer(grid,gridRow))):void gridUtil.logError("Unable to find rowEntity in grid data, dirty flag cannot be set")},beginEditCell:function(rowEntity,colDef){var grid=this.grid,gridRow=grid.getRow(rowEntity);return gridRow?void service.cancelTimer(grid,gridRow):void gridUtil.logError("Unable to find rowEntity in grid data, timer cannot be cancelled")},cancelEditCell:function(rowEntity,colDef){var grid=this.grid,gridRow=grid.getRow(rowEntity);return gridRow?void service.considerSetTimer(grid,gridRow):void gridUtil.logError("Unable to find rowEntity in grid data, timer cannot be set")},navigate:function(newRowCol,oldRowCol){var grid=this.grid;newRowCol.row.rowEditSaveTimer&&service.cancelTimer(grid,newRowCol.row),oldRowCol&&oldRowCol.row&&oldRowCol.row!==newRowCol.row&&service.considerSetTimer(grid,oldRowCol.row)},considerSetTimer:function(grid,gridRow){if(service.cancelTimer(grid,gridRow),gridRow.isDirty&&!gridRow.isSaving&&grid.options.rowEditWaitInterval!==-1){var waitTime=grid.options.rowEditWaitInterval?grid.options.rowEditWaitInterval:2e3;gridRow.rowEditSaveTimer=$interval(service.saveRow(grid,gridRow),waitTime,1)}},cancelTimer:function(grid,gridRow){gridRow.rowEditSaveTimer&&!gridRow.isSaving&&($interval.cancel(gridRow.rowEditSaveTimer),delete gridRow.rowEditSaveTimer)},setRowsDirty:function(grid,myDataRows){var gridRow;myDataRows.forEach(function(value,index){gridRow=grid.getRow(value),gridRow?(grid.rowEdit.dirtyRows||(grid.rowEdit.dirtyRows=[]),gridRow.isDirty||(gridRow.isDirty=!0,grid.rowEdit.dirtyRows.push(gridRow)),delete gridRow.isError,service.considerSetTimer(grid,gridRow)):gridUtil.logError("requested row not found in rowEdit.setRowsDirty, row was: "+value)})},setRowsClean:function(grid,myDataRows){var gridRow;myDataRows.forEach(function(value,index){gridRow=grid.getRow(value),gridRow?(delete gridRow.isDirty,service.removeRow(grid.rowEdit.dirtyRows,gridRow),service.cancelTimer(grid,gridRow),delete gridRow.isError,service.removeRow(grid.rowEdit.errorRows,gridRow)):gridUtil.logError("requested row not found in rowEdit.setRowsClean, row was: "+value)})}};return service}]),module.directive("uiGridRowEdit",["gridUtil","uiGridRowEditService","uiGridEditConstants",function(gridUtil,uiGridRowEditService,uiGridEditConstants){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridRowEditService.initializeGrid($scope,uiGridCtrl.grid)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridViewport",["$compile","uiGridConstants","gridUtil","$parse",function($compile,uiGridConstants,gridUtil,$parse){return{priority:-200,scope:!1,compile:function($elm,$attrs){var rowRepeatDiv=angular.element($elm.children().children()[0]),existingNgClass=rowRepeatDiv.attr("ng-class"),newNgClass="";return newNgClass=existingNgClass?existingNgClass.slice(0,-1)+", 'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}":"{'ui-grid-row-dirty': row.isDirty, 'ui-grid-row-saving': row.isSaving, 'ui-grid-row-error': row.isError}",rowRepeatDiv.attr("ng-class",newNgClass),{pre:function($scope,$elm,$attrs,controllers){},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.saveState",["ui.grid","ui.grid.selection","ui.grid.cellNav","ui.grid.grouping","ui.grid.pinning","ui.grid.treeView"]);module.constant("uiGridSaveStateConstants",{featureName:"saveState"}),module.service("uiGridSaveStateService",["$q","uiGridSaveStateConstants","gridUtil","$compile","$interval","uiGridConstants",function($q,uiGridSaveStateConstants,gridUtil,$compile,$interval,uiGridConstants){var service={initializeGrid:function(grid){grid.saveState={},this.defaultGridOptions(grid.options);var publicApi={events:{saveState:{}},methods:{saveState:{save:function(){return service.save(grid)},restore:function($scope,state){service.restore(grid,$scope,state)}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.saveWidths=gridOptions.saveWidths!==!1,gridOptions.saveOrder=gridOptions.saveOrder!==!1,gridOptions.saveScroll=gridOptions.saveScroll===!0,gridOptions.saveFocus=gridOptions.saveScroll!==!0&&gridOptions.saveFocus!==!1,gridOptions.saveVisible=gridOptions.saveVisible!==!1,gridOptions.saveSort=gridOptions.saveSort!==!1,gridOptions.saveFilter=gridOptions.saveFilter!==!1,gridOptions.saveSelection=gridOptions.saveSelection!==!1,gridOptions.saveGrouping=gridOptions.saveGrouping!==!1,gridOptions.saveGroupingExpandedStates=gridOptions.saveGroupingExpandedStates===!0,gridOptions.savePinning=gridOptions.savePinning!==!1,gridOptions.saveTreeView=gridOptions.saveTreeView!==!1},save:function(grid){var savedState={};return savedState.columns=service.saveColumns(grid),savedState.scrollFocus=service.saveScrollFocus(grid),savedState.selection=service.saveSelection(grid),savedState.grouping=service.saveGrouping(grid),savedState.treeView=service.saveTreeView(grid),savedState},restore:function(grid,$scope,state){state.columns&&service.restoreColumns(grid,state.columns),state.scrollFocus&&service.restoreScrollFocus(grid,$scope,state.scrollFocus),state.selection&&service.restoreSelection(grid,state.selection),state.grouping&&service.restoreGrouping(grid,state.grouping),state.treeView&&service.restoreTreeView(grid,state.treeView),grid.refresh()},saveColumns:function(grid){var columns=[];return grid.getOnlyDataColumns().forEach(function(column){var savedColumn={};savedColumn.name=column.name,grid.options.saveVisible&&(savedColumn.visible=column.visible),grid.options.saveWidths&&(savedColumn.width=column.width),grid.options.saveSort&&(savedColumn.sort=angular.copy(column.sort)),grid.options.saveFilter&&(savedColumn.filters=[],column.filters.forEach(function(filter){var copiedFilter={};angular.forEach(filter,function(value,key){"condition"!==key&&"$$hashKey"!==key&&"placeholder"!==key&&(copiedFilter[key]=value)}),savedColumn.filters.push(copiedFilter)})),grid.api.pinning&&grid.options.savePinning&&(savedColumn.pinned=column.renderContainer?column.renderContainer:""),columns.push(savedColumn)}),columns},saveScrollFocus:function(grid){if(!grid.api.cellNav)return{};var scrollFocus={};if(grid.options.saveFocus){scrollFocus.focus=!0;var rowCol=grid.api.cellNav.getFocusedCell();null!==rowCol&&(null!==rowCol.col&&(scrollFocus.colName=rowCol.col.colDef.name),null!==rowCol.row&&(scrollFocus.rowVal=service.getRowVal(grid,rowCol.row)))}return(grid.options.saveScroll||grid.options.saveFocus&&!scrollFocus.colName&&!scrollFocus.rowVal)&&(scrollFocus.focus=!1,grid.renderContainers.body.prevRowScrollIndex&&(scrollFocus.rowVal=service.getRowVal(grid,grid.renderContainers.body.visibleRowCache[grid.renderContainers.body.prevRowScrollIndex])),grid.renderContainers.body.prevColScrollIndex&&(scrollFocus.colName=grid.renderContainers.body.visibleColumnCache[grid.renderContainers.body.prevColScrollIndex].name)),scrollFocus},saveSelection:function(grid){if(!grid.api.selection||!grid.options.saveSelection)return[];var selection=grid.api.selection.getSelectedGridRows().map(function(gridRow){return service.getRowVal(grid,gridRow)});return selection},saveGrouping:function(grid){return grid.api.grouping&&grid.options.saveGrouping?grid.api.grouping.getGrouping(grid.options.saveGroupingExpandedStates):{}},saveTreeView:function(grid){return grid.api.treeView&&grid.options.saveTreeView?grid.api.treeView.getTreeView():{}},getRowVal:function(grid,gridRow){if(!gridRow)return null;var rowVal={};return grid.options.saveRowIdentity?(rowVal.identity=!0,rowVal.row=grid.options.saveRowIdentity(gridRow.entity)):(rowVal.identity=!1,rowVal.row=grid.renderContainers.body.visibleRowCache.indexOf(gridRow)),rowVal},restoreColumns:function(grid,columnsState){var isSortChanged=!1;columnsState.forEach(function(columnState,index){var currentCol=grid.getColumn(columnState.name);if(currentCol&&!grid.isRowHeaderColumn(currentCol)){!grid.options.saveVisible||currentCol.visible===columnState.visible&&currentCol.colDef.visible===columnState.visible||(currentCol.visible=columnState.visible,currentCol.colDef.visible=columnState.visible,grid.api.core.raise.columnVisibilityChanged(currentCol)),grid.options.saveWidths&&(currentCol.width=columnState.width),!grid.options.saveSort||angular.equals(currentCol.sort,columnState.sort)||void 0===currentCol.sort&&angular.isEmpty(columnState.sort)||(currentCol.sort=angular.copy(columnState.sort),isSortChanged=!0),grid.options.saveFilter&&!angular.equals(currentCol.filters,columnState.filters)&&(columnState.filters.forEach(function(filter,index){angular.extend(currentCol.filters[index],filter),"undefined"!=typeof filter.term&&null!==filter.term||delete currentCol.filters[index].term}),grid.api.core.raise.filterChanged()),grid.api.pinning&&grid.options.savePinning&&currentCol.renderContainer!==columnState.pinned&&grid.api.pinning.pinColumn(currentCol,columnState.pinned);var currentIndex=grid.getOnlyDataColumns().indexOf(currentCol);if(currentIndex!==-1&&grid.options.saveOrder&&currentIndex!==index){var column=grid.columns.splice(currentIndex+grid.rowHeaderColumns.length,1)[0];grid.columns.splice(index+grid.rowHeaderColumns.length,0,column)}}}),isSortChanged&&grid.api.core.raise.sortChanged(grid,grid.getColumnSorting())},restoreScrollFocus:function(grid,$scope,scrollFocusState){if(grid.api.cellNav){var colDef,row;if(scrollFocusState.colName){var colDefs=grid.options.columnDefs.filter(function(colDef){return colDef.name===scrollFocusState.colName});colDefs.length>0&&(colDef=colDefs[0])}scrollFocusState.rowVal&&scrollFocusState.rowVal.row&&(row=scrollFocusState.rowVal.identity?service.findRowByIdentity(grid,scrollFocusState.rowVal):grid.renderContainers.body.visibleRowCache[scrollFocusState.rowVal.row]);var entity=row&&row.entity?row.entity:null;(colDef||entity)&&(scrollFocusState.focus?grid.api.cellNav.scrollToFocus(entity,colDef):grid.scrollTo(entity,colDef));
}},restoreSelection:function(grid,selectionState){grid.api.selection&&(grid.api.selection.clearSelectedRows(),selectionState.forEach(function(rowVal){if(rowVal.identity){var foundRow=service.findRowByIdentity(grid,rowVal);foundRow&&grid.api.selection.selectRow(foundRow.entity)}else grid.api.selection.selectRowByVisibleIndex(rowVal.row)}))},restoreGrouping:function(grid,groupingState){grid.api.grouping&&"undefined"!=typeof groupingState&&null!==groupingState&&!angular.equals(groupingState,{})&&grid.api.grouping.setGrouping(groupingState)},restoreTreeView:function(grid,treeViewState){grid.api.treeView&&"undefined"!=typeof treeViewState&&null!==treeViewState&&!angular.equals(treeViewState,{})&&grid.api.treeView.setTreeView(treeViewState)},findRowByIdentity:function(grid,rowVal){if(!grid.options.saveRowIdentity)return null;var filteredRows=grid.rows.filter(function(gridRow){return grid.options.saveRowIdentity(gridRow.entity)===rowVal.row});return filteredRows.length>0?filteredRows[0]:null}};return service}]),module.directive("uiGridSaveState",["uiGridSaveStateConstants","uiGridSaveStateService","gridUtil","$compile",function(uiGridSaveStateConstants,uiGridSaveStateService,gridUtil,$compile){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){uiGridSaveStateService.initializeGrid(uiGridCtrl.grid)}}}])}(),function(){"use strict";var module=angular.module("ui.grid.selection",["ui.grid"]);module.constant("uiGridSelectionConstants",{featureName:"selection",selectionRowHeaderColName:"selectionRowHeaderCol"}),angular.module("ui.grid").config(["$provide",function($provide){$provide.decorator("GridRow",["$delegate",function($delegate){return $delegate.prototype.setSelected=function(selected){this.isSelected=selected,selected?this.grid.selection.selectedCount++:this.grid.selection.selectedCount--},$delegate}])}]),module.service("uiGridSelectionService",["$q","$templateCache","uiGridSelectionConstants","gridUtil",function($q,$templateCache,uiGridSelectionConstants,gridUtil){var service={initializeGrid:function(grid){grid.selection={},grid.selection.lastSelectedRow=null,grid.selection.selectAll=!1,grid.selection.selectedCount=0,service.defaultGridOptions(grid.options);var publicApi={events:{selection:{rowSelectionChanged:function(scope,row,evt){},rowSelectionChangedBatch:function(scope,rows,evt){}}},methods:{selection:{toggleRowSelection:function(rowEntity,evt){var row=grid.getRow(rowEntity);null!==row&&service.toggleRowSelection(grid,row,evt,grid.options.multiSelect,grid.options.noUnselect)},selectRow:function(rowEntity,evt){var row=grid.getRow(rowEntity);null===row||row.isSelected||service.toggleRowSelection(grid,row,evt,grid.options.multiSelect,grid.options.noUnselect)},selectRowByVisibleIndex:function(rowNum,evt){var row=grid.renderContainers.body.visibleRowCache[rowNum];null===row||"undefined"==typeof row||row.isSelected||service.toggleRowSelection(grid,row,evt,grid.options.multiSelect,grid.options.noUnselect)},unSelectRow:function(rowEntity,evt){var row=grid.getRow(rowEntity);null!==row&&row.isSelected&&service.toggleRowSelection(grid,row,evt,grid.options.multiSelect,grid.options.noUnselect)},selectAllRows:function(evt){if(grid.options.multiSelect!==!1){var changedRows=[];grid.rows.forEach(function(row){row.isSelected||row.enableSelection===!1||(row.setSelected(!0),service.decideRaiseSelectionEvent(grid,row,changedRows,evt))}),service.decideRaiseSelectionBatchEvent(grid,changedRows,evt),grid.selection.selectAll=!0}},selectAllVisibleRows:function(evt){if(grid.options.multiSelect!==!1){var changedRows=[];grid.rows.forEach(function(row){row.visible?row.isSelected||row.enableSelection===!1||(row.setSelected(!0),service.decideRaiseSelectionEvent(grid,row,changedRows,evt)):row.isSelected&&(row.setSelected(!1),service.decideRaiseSelectionEvent(grid,row,changedRows,evt))}),service.decideRaiseSelectionBatchEvent(grid,changedRows,evt),grid.selection.selectAll=!0}},clearSelectedRows:function(evt){service.clearSelectedRows(grid,evt)},getSelectedRows:function(){return service.getSelectedRows(grid).map(function(gridRow){return gridRow.entity})},getSelectedGridRows:function(){return service.getSelectedRows(grid)},setMultiSelect:function(multiSelect){grid.options.multiSelect=multiSelect},setModifierKeysToMultiSelect:function(modifierKeysToMultiSelect){grid.options.modifierKeysToMultiSelect=modifierKeysToMultiSelect},getSelectAllState:function(){return grid.selection.selectAll}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.enableRowSelection=gridOptions.enableRowSelection!==!1,gridOptions.multiSelect=gridOptions.multiSelect!==!1,gridOptions.noUnselect=gridOptions.noUnselect===!0,gridOptions.modifierKeysToMultiSelect=gridOptions.modifierKeysToMultiSelect===!0,gridOptions.enableRowHeaderSelection=gridOptions.enableRowHeaderSelection!==!1,"undefined"==typeof gridOptions.enableFullRowSelection&&(gridOptions.enableFullRowSelection=!gridOptions.enableRowHeaderSelection),gridOptions.enableSelectAll=gridOptions.enableSelectAll!==!1,gridOptions.enableSelectionBatchEvent=gridOptions.enableSelectionBatchEvent!==!1,gridOptions.selectionRowHeaderWidth=angular.isDefined(gridOptions.selectionRowHeaderWidth)?gridOptions.selectionRowHeaderWidth:30,gridOptions.enableFooterTotalSelected=gridOptions.enableFooterTotalSelected!==!1,gridOptions.isRowSelectable=angular.isDefined(gridOptions.isRowSelectable)?gridOptions.isRowSelectable:angular.noop},toggleRowSelection:function(grid,row,evt,multiSelect,noUnselect){var selected=row.isSelected;if(row.enableSelection!==!1||selected){var selectedRows;multiSelect||selected?!multiSelect&&selected&&(selectedRows=service.getSelectedRows(grid),selectedRows.length>1&&(selected=!1,service.clearSelectedRows(grid,evt))):service.clearSelectedRows(grid,evt),selected&&noUnselect||(row.setSelected(!selected),row.isSelected===!0&&(grid.selection.lastSelectedRow=row),selectedRows=service.getSelectedRows(grid),grid.selection.selectAll=grid.rows.length===selectedRows.length,grid.api.selection.raise.rowSelectionChanged(row,evt))}},shiftSelect:function(grid,row,evt,multiSelect){if(multiSelect){var selectedRows=service.getSelectedRows(grid),fromRow=selectedRows.length>0?grid.renderContainers.body.visibleRowCache.indexOf(grid.selection.lastSelectedRow):0,toRow=grid.renderContainers.body.visibleRowCache.indexOf(row);if(fromRow>toRow){var tmp=fromRow;fromRow=toRow,toRow=tmp}for(var changedRows=[],i=fromRow;i<=toRow;i++){var rowToSelect=grid.renderContainers.body.visibleRowCache[i];rowToSelect&&(rowToSelect.isSelected||rowToSelect.enableSelection===!1||(rowToSelect.setSelected(!0),grid.selection.lastSelectedRow=rowToSelect,service.decideRaiseSelectionEvent(grid,rowToSelect,changedRows,evt)))}service.decideRaiseSelectionBatchEvent(grid,changedRows,evt)}},getSelectedRows:function(grid){return grid.rows.filter(function(row){return row.isSelected})},clearSelectedRows:function(grid,evt){var changedRows=[];service.getSelectedRows(grid).forEach(function(row){row.isSelected&&(row.setSelected(!1),service.decideRaiseSelectionEvent(grid,row,changedRows,evt))}),service.decideRaiseSelectionBatchEvent(grid,changedRows,evt),grid.selection.selectAll=!1,grid.selection.selectedCount=0},decideRaiseSelectionEvent:function(grid,row,changedRows,evt){grid.options.enableSelectionBatchEvent?changedRows.push(row):grid.api.selection.raise.rowSelectionChanged(row,evt)},decideRaiseSelectionBatchEvent:function(grid,changedRows,evt){changedRows.length>0&&grid.api.selection.raise.rowSelectionChangedBatch(changedRows,evt)}};return service}]),module.directive("uiGridSelection",["uiGridSelectionConstants","uiGridSelectionService","$templateCache","uiGridConstants",function(uiGridSelectionConstants,uiGridSelectionService,$templateCache,uiGridConstants){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){if(uiGridSelectionService.initializeGrid(uiGridCtrl.grid),uiGridCtrl.grid.options.enableRowHeaderSelection){var selectionRowHeaderDef={name:uiGridSelectionConstants.selectionRowHeaderColName,displayName:"",width:uiGridCtrl.grid.options.selectionRowHeaderWidth,minWidth:10,cellTemplate:"ui-grid/selectionRowHeader",headerCellTemplate:"ui-grid/selectionHeaderCell",enableColumnResizing:!1,enableColumnMenu:!1,exporterSuppressExport:!0,allowCellFocus:!0};uiGridCtrl.grid.addRowHeaderColumn(selectionRowHeaderDef)}var processorSet=!1,processSelectableRows=function(rows){return rows.forEach(function(row){row.enableSelection=uiGridCtrl.grid.options.isRowSelectable(row)}),rows},updateOptions=function(){uiGridCtrl.grid.options.isRowSelectable!==angular.noop&&processorSet!==!0&&(uiGridCtrl.grid.registerRowsProcessor(processSelectableRows,500),processorSet=!0)};updateOptions();var dataChangeDereg=uiGridCtrl.grid.registerDataChangeCallback(updateOptions,[uiGridConstants.dataChange.OPTIONS]);$scope.$on("$destroy",dataChangeDereg)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}]),module.directive("uiGridSelectionRowHeaderButtons",["$templateCache","uiGridSelectionService","gridUtil",function($templateCache,uiGridSelectionService,gridUtil){return{replace:!0,restrict:"E",template:$templateCache.get("ui-grid/selectionRowHeaderButtons"),scope:!0,require:"^uiGrid",link:function($scope,$elm,$attrs,uiGridCtrl){function selectButtonClick(row,evt){evt.stopPropagation(),evt.shiftKey?uiGridSelectionService.shiftSelect(self,row,evt,self.options.multiSelect):evt.ctrlKey||evt.metaKey?uiGridSelectionService.toggleRowSelection(self,row,evt,self.options.multiSelect,self.options.noUnselect):uiGridSelectionService.toggleRowSelection(self,row,evt,self.options.multiSelect&&!self.options.modifierKeysToMultiSelect,self.options.noUnselect)}function selectButtonMouseDown(evt){(evt.ctrlKey||evt.shiftKey)&&(evt.target.onselectstart=function(){return!1},window.setTimeout(function(){evt.target.onselectstart=null},0))}var self=uiGridCtrl.grid;$scope.selectButtonClick=selectButtonClick,"ie"===gridUtil.detectBrowser()&&$elm.on("mousedown",selectButtonMouseDown)}}}]),module.directive("uiGridSelectionSelectAllButtons",["$templateCache","uiGridSelectionService",function($templateCache,uiGridSelectionService){return{replace:!0,restrict:"E",template:$templateCache.get("ui-grid/selectionSelectAllButtons"),scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){var self=$scope.col.grid;$scope.headerButtonClick=function(row,evt){self.selection.selectAll?(uiGridSelectionService.clearSelectedRows(self,evt),self.options.noUnselect&&self.api.selection.selectRowByVisibleIndex(0,evt),self.selection.selectAll=!1):self.options.multiSelect&&(self.api.selection.selectAllVisibleRows(evt),self.selection.selectAll=!0)}}}}]),module.directive("uiGridViewport",["$compile","uiGridConstants","uiGridSelectionConstants","gridUtil","$parse","uiGridSelectionService",function($compile,uiGridConstants,uiGridSelectionConstants,gridUtil,$parse,uiGridSelectionService){return{priority:-200,scope:!1,compile:function($elm,$attrs){var rowRepeatDiv=angular.element($elm.children().children()[0]),existingNgClass=rowRepeatDiv.attr("ng-class"),newNgClass="";return newNgClass=existingNgClass?existingNgClass.slice(0,-1)+",'ui-grid-row-selected': row.isSelected}":"{'ui-grid-row-selected': row.isSelected}",rowRepeatDiv.attr("ng-class",newNgClass),{pre:function($scope,$elm,$attrs,controllers){},post:function($scope,$elm,$attrs,controllers){}}}}}]),module.directive("uiGridCell",["$compile","uiGridConstants","uiGridSelectionConstants","gridUtil","$parse","uiGridSelectionService","$timeout",function($compile,uiGridConstants,uiGridSelectionConstants,gridUtil,$parse,uiGridSelectionService,$timeout){return{priority:-200,restrict:"A",require:"?^uiGrid",scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){function registerRowSelectionEvents(){$scope.grid.options.enableRowSelection&&$scope.grid.options.enableFullRowSelection&&($elm.addClass("ui-grid-disable-selection"),$elm.on("touchstart",touchStart),$elm.on("touchend",touchEnd),$elm.on("click",selectCells),$scope.registered=!0)}function deregisterRowSelectionEvents(){$scope.registered&&($elm.removeClass("ui-grid-disable-selection"),$elm.off("touchstart",touchStart),$elm.off("touchend",touchEnd),$elm.off("click",selectCells),$scope.registered=!1)}var touchStartTime=0,touchTimeout=300;uiGridCtrl.grid.api.cellNav&&uiGridCtrl.grid.api.cellNav.on.viewPortKeyDown($scope,function(evt,rowCol){null!==rowCol&&rowCol.row===$scope.row&&rowCol.col===$scope.col&&32===evt.keyCode&&"selectionRowHeaderCol"===$scope.col.colDef.name&&(uiGridSelectionService.toggleRowSelection($scope.grid,$scope.row,evt,$scope.grid.options.multiSelect&&!$scope.grid.options.modifierKeysToMultiSelect,$scope.grid.options.noUnselect),$scope.$apply())});var selectCells=function(evt){$elm.off("touchend",touchEnd),evt.shiftKey?uiGridSelectionService.shiftSelect($scope.grid,$scope.row,evt,$scope.grid.options.multiSelect):evt.ctrlKey||evt.metaKey?uiGridSelectionService.toggleRowSelection($scope.grid,$scope.row,evt,$scope.grid.options.multiSelect,$scope.grid.options.noUnselect):uiGridSelectionService.toggleRowSelection($scope.grid,$scope.row,evt,$scope.grid.options.multiSelect&&!$scope.grid.options.modifierKeysToMultiSelect,$scope.grid.options.noUnselect),$scope.$apply(),$timeout(function(){$elm.on("touchend",touchEnd)},touchTimeout)},touchStart=function(evt){touchStartTime=(new Date).getTime(),$elm.off("click",selectCells)},touchEnd=function(evt){var touchEndTime=(new Date).getTime(),touchTime=touchEndTime-touchStartTime;touchTime<touchTimeout&&selectCells(evt),$timeout(function(){$elm.on("click",selectCells)},touchTimeout)};registerRowSelectionEvents();var dataChangeDereg=$scope.grid.registerDataChangeCallback(function(){$scope.grid.options.enableRowSelection&&$scope.grid.options.enableFullRowSelection&&!$scope.registered?registerRowSelectionEvents():$scope.grid.options.enableRowSelection&&$scope.grid.options.enableFullRowSelection||!$scope.registered||deregisterRowSelectionEvents()},[uiGridConstants.dataChange.OPTIONS]);$elm.on("$destroy",dataChangeDereg)}}}]),module.directive("uiGridGridFooter",["$compile","uiGridConstants","gridUtil",function($compile,uiGridConstants,gridUtil){return{restrict:"EA",replace:!0,priority:-1e3,require:"^uiGrid",scope:!0,compile:function($elm,$attrs){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridCtrl.grid.options.showGridFooter&&gridUtil.getTemplate("ui-grid/gridFooterSelectedItems").then(function(contents){var template=angular.element(contents),newElm=$compile(template)($scope);angular.element($elm[0].getElementsByClassName("ui-grid-grid-footer")[0]).append(newElm)})},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.treeBase",["ui.grid"]);module.constant("uiGridTreeBaseConstants",{featureName:"treeBase",rowHeaderColName:"treeBaseRowHeaderCol",EXPANDED:"expanded",COLLAPSED:"collapsed",aggregation:{COUNT:"count",SUM:"sum",MAX:"max",MIN:"min",AVG:"avg"}}),module.service("uiGridTreeBaseService",["$q","uiGridTreeBaseConstants","gridUtil","GridRow","gridClassFactory","i18nService","uiGridConstants","rowSorter",function($q,uiGridTreeBaseConstants,gridUtil,GridRow,gridClassFactory,i18nService,uiGridConstants,rowSorter){var service={initializeGrid:function(grid,$scope){grid.treeBase={},grid.treeBase.numberLevels=0,grid.treeBase.expandAll=!1,grid.treeBase.tree={},service.defaultGridOptions(grid.options),grid.registerRowsProcessor(service.treeRows,410),grid.registerColumnBuilder(service.treeBaseColumnBuilder),service.createRowHeader(grid);var publicApi={events:{treeBase:{rowExpanded:{},rowCollapsed:{}}},methods:{treeBase:{expandAllRows:function(){service.expandAllRows(grid)},collapseAllRows:function(){service.collapseAllRows(grid)},toggleRowTreeState:function(row){service.toggleRowTreeState(grid,row)},expandRow:function(row){service.expandRow(grid,row)},expandRowChildren:function(row){service.expandRowChildren(grid,row)},collapseRow:function(row){service.collapseRow(grid,row)},collapseRowChildren:function(row){service.collapseRowChildren(grid,row)},getTreeExpandedState:function(){return{expandedState:service.getTreeState(grid)}},setTreeState:function(config){service.setTreeState(grid,config)},getRowChildren:function(row){return row.treeNode.children.map(function(childNode){return childNode.row})}}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.treeRowHeaderBaseWidth=gridOptions.treeRowHeaderBaseWidth||30,gridOptions.treeIndent=gridOptions.treeIndent||10,gridOptions.showTreeRowHeader=gridOptions.showTreeRowHeader!==!1,gridOptions.showTreeExpandNoChildren=gridOptions.showTreeExpandNoChildren!==!1,gridOptions.treeRowHeaderAlwaysVisible=gridOptions.treeRowHeaderAlwaysVisible!==!1,gridOptions.treeCustomAggregations=gridOptions.treeCustomAggregations||{}},treeBaseColumnBuilder:function(colDef,col,gridOptions){"undefined"!=typeof colDef.customTreeAggregationFn&&(col.treeAggregationFn=colDef.customTreeAggregationFn),"undefined"!=typeof colDef.treeAggregationType&&(col.treeAggregation={type:colDef.treeAggregationType},"undefined"!=typeof gridOptions.treeCustomAggregations[colDef.treeAggregationType]?(col.treeAggregationFn=gridOptions.treeCustomAggregations[colDef.treeAggregationType].aggregationFn,col.treeAggregationFinalizerFn=gridOptions.treeCustomAggregations[colDef.treeAggregationType].finalizerFn,col.treeAggregation.label=gridOptions.treeCustomAggregations[colDef.treeAggregationType].label):"undefined"!=typeof service.nativeAggregations()[colDef.treeAggregationType]&&(col.treeAggregationFn=service.nativeAggregations()[colDef.treeAggregationType].aggregationFn,col.treeAggregation.label=service.nativeAggregations()[colDef.treeAggregationType].label)),"undefined"!=typeof colDef.treeAggregationLabel&&("undefined"==typeof col.treeAggregation&&(col.treeAggregation={}),col.treeAggregation.label=colDef.treeAggregationLabel),col.treeAggregationUpdateEntity=colDef.treeAggregationUpdateEntity!==!1,"undefined"==typeof col.customTreeAggregationFinalizerFn&&(col.customTreeAggregationFinalizerFn=colDef.customTreeAggregationFinalizerFn)},createRowHeader:function(grid){var rowHeaderColumnDef={name:uiGridTreeBaseConstants.rowHeaderColName,displayName:"",width:grid.options.treeRowHeaderBaseWidth,minWidth:10,cellTemplate:"ui-grid/treeBaseRowHeader",headerCellTemplate:"ui-grid/treeBaseHeaderCell",enableColumnResizing:!1,enableColumnMenu:!1,exporterSuppressExport:!0,allowCellFocus:!0};rowHeaderColumnDef.visible=grid.options.treeRowHeaderAlwaysVisible,grid.addRowHeaderColumn(rowHeaderColumnDef)},expandAllRows:function(grid){grid.treeBase.tree.forEach(function(node){service.setAllNodes(grid,node,uiGridTreeBaseConstants.EXPANDED)}),grid.treeBase.expandAll=!0,grid.queueGridRefresh()},collapseAllRows:function(grid){grid.treeBase.tree.forEach(function(node){service.setAllNodes(grid,node,uiGridTreeBaseConstants.COLLAPSED)}),grid.treeBase.expandAll=!1,grid.queueGridRefresh()},setAllNodes:function(grid,treeNode,targetState){"undefined"!=typeof treeNode.state&&treeNode.state!==targetState&&(treeNode.state=targetState,targetState===uiGridTreeBaseConstants.EXPANDED?grid.api.treeBase.raise.rowExpanded(treeNode.row):grid.api.treeBase.raise.rowCollapsed(treeNode.row)),treeNode.children&&treeNode.children.forEach(function(childNode){service.setAllNodes(grid,childNode,targetState)})},toggleRowTreeState:function(grid,row){"undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0||(row.treeNode.state===uiGridTreeBaseConstants.EXPANDED?service.collapseRow(grid,row):service.expandRow(grid,row),grid.queueGridRefresh())},expandRow:function(grid,row){"undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0||row.treeNode.state!==uiGridTreeBaseConstants.EXPANDED&&(row.treeNode.state=uiGridTreeBaseConstants.EXPANDED,grid.api.treeBase.raise.rowExpanded(row),grid.treeBase.expandAll=service.allExpanded(grid.treeBase.tree),grid.queueGridRefresh())},expandRowChildren:function(grid,row){"undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0||(service.setAllNodes(grid,row.treeNode,uiGridTreeBaseConstants.EXPANDED),grid.treeBase.expandAll=service.allExpanded(grid.treeBase.tree),grid.queueGridRefresh())},collapseRow:function(grid,row){"undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0||row.treeNode.state!==uiGridTreeBaseConstants.COLLAPSED&&(row.treeNode.state=uiGridTreeBaseConstants.COLLAPSED,grid.treeBase.expandAll=!1,grid.api.treeBase.raise.rowCollapsed(row),grid.queueGridRefresh())},collapseRowChildren:function(grid,row){"undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0||(service.setAllNodes(grid,row.treeNode,uiGridTreeBaseConstants.COLLAPSED),grid.treeBase.expandAll=!1,grid.queueGridRefresh())},allExpanded:function(tree){var allExpanded=!0;return tree.forEach(function(node){service.allExpandedInternal(node)||(allExpanded=!1)}),allExpanded},allExpandedInternal:function(treeNode){if(treeNode.children&&treeNode.children.length>0){if(treeNode.state===uiGridTreeBaseConstants.COLLAPSED)return!1;var allExpanded=!0;return treeNode.children.forEach(function(node){service.allExpandedInternal(node)||(allExpanded=!1)}),allExpanded}return!0},treeRows:function(renderableRows){if(0===renderableRows.length)return renderableRows;var grid=this;uiGridTreeBaseConstants.EXPANDED;return grid.treeBase.tree=service.createTree(grid,renderableRows),service.updateRowHeaderWidth(grid),service.sortTree(grid),service.fixFilter(grid),service.renderTree(grid.treeBase.tree)},updateRowHeaderWidth:function(grid){var rowHeader=grid.getColumn(uiGridTreeBaseConstants.rowHeaderColName),newWidth=grid.options.treeRowHeaderBaseWidth+grid.options.treeIndent*Math.max(grid.treeBase.numberLevels-1,0);rowHeader&&newWidth!==rowHeader.width&&(rowHeader.width=newWidth,grid.queueRefresh());var newVisibility=!0;grid.options.showTreeRowHeader===!1&&(newVisibility=!1),grid.options.treeRowHeaderAlwaysVisible===!1&&grid.treeBase.numberLevels<=0&&(newVisibility=!1),rowHeader.visible!==newVisibility&&(rowHeader.visible=newVisibility,rowHeader.colDef.visible=newVisibility,grid.queueGridRefresh())},renderTree:function(nodeList){var renderableRows=[];return nodeList.forEach(function(node){node.row.visible&&renderableRows.push(node.row),node.state===uiGridTreeBaseConstants.EXPANDED&&node.children&&node.children.length>0&&(renderableRows=renderableRows.concat(service.renderTree(node.children)))}),renderableRows},createTree:function(grid,renderableRows){var currentState,currentLevel=-1,parents=[];grid.treeBase.tree=[],grid.treeBase.numberLevels=0;var aggregations=service.getAggregations(grid),createNode=function(row){if("undefined"!=typeof row.entity.$$treeLevel&&row.treeLevel!==row.entity.$$treeLevel&&(row.treeLevel=row.entity.$$treeLevel),row.treeLevel<=currentLevel){for(;row.treeLevel<=currentLevel;){var lastParent=parents.pop();service.finaliseAggregations(lastParent),currentLevel--}currentState=parents.length>0?service.setCurrentState(parents):uiGridTreeBaseConstants.EXPANDED}("undefined"==typeof row.treeLevel||null===row.treeLevel||row.treeLevel<0)&&row.visible&&service.aggregate(grid,row,parents),service.addOrUseNode(grid,row,parents,aggregations),"undefined"!=typeof row.treeLevel&&null!==row.treeLevel&&row.treeLevel>=0&&(parents.push(row),currentLevel++,currentState=service.setCurrentState(parents)),grid.treeBase.numberLevels<row.treeLevel+1&&(grid.treeBase.numberLevels=row.treeLevel+1)};for(renderableRows.forEach(createNode);parents.length>0;){var lastParent=parents.pop();service.finaliseAggregations(lastParent)}return grid.treeBase.tree},addOrUseNode:function(grid,row,parents,aggregationBase){var newAggregations=[];aggregationBase.forEach(function(aggregation){newAggregations.push(service.buildAggregationObject(aggregation.col))});var newNode={state:uiGridTreeBaseConstants.COLLAPSED,row:row,parentRow:null,aggregations:newAggregations,children:[]};row.treeNode&&(newNode.state=row.treeNode.state),parents.length>0&&(newNode.parentRow=parents[parents.length-1]),row.treeNode=newNode,0===parents.length?grid.treeBase.tree.push(newNode):parents[parents.length-1].treeNode.children.push(newNode)},setCurrentState:function(parents){var currentState=uiGridTreeBaseConstants.EXPANDED;return parents.forEach(function(parent){parent.treeNode.state===uiGridTreeBaseConstants.COLLAPSED&&(currentState=uiGridTreeBaseConstants.COLLAPSED)}),currentState},sortTree:function(grid){grid.columns.forEach(function(column){column.sort&&column.sort.ignoreSort&&delete column.sort.ignoreSort}),grid.treeBase.tree=service.sortInternal(grid,grid.treeBase.tree)},sortInternal:function(grid,treeList){var rows=treeList.map(function(node){return node.row});rows=rowSorter.sort(grid,rows,grid.columns);var treeNodes=rows.map(function(row){return row.treeNode});return treeNodes.forEach(function(node){node.state===uiGridTreeBaseConstants.EXPANDED&&node.children&&node.children.length>0&&(node.children=service.sortInternal(grid,node.children))}),treeNodes},fixFilter:function(grid){var parentsVisible;grid.treeBase.tree.forEach(function(node){node.children&&node.children.length>0&&(parentsVisible=node.row.visible,service.fixFilterInternal(node.children,parentsVisible))})},fixFilterInternal:function(nodes,parentsVisible){return nodes.forEach(function(node){node.row.visible&&!parentsVisible&&(service.setParentsVisible(node),parentsVisible=!0),node.children&&node.children.length>0&&service.fixFilterInternal(node.children,parentsVisible&&node.row.visible)&&(parentsVisible=!0)}),parentsVisible},setParentsVisible:function(node){for(;node.parentRow;)node.parentRow.visible=!0,node=node.parentRow.treeNode},buildAggregationObject:function(column){var newAggregation={col:column};return column.treeAggregation&&column.treeAggregation.type&&(newAggregation.type=column.treeAggregation.type),column.treeAggregation&&column.treeAggregation.label&&(newAggregation.label=column.treeAggregation.label),newAggregation},getAggregations:function(grid){var aggregateArray=[];return grid.columns.forEach(function(column){"undefined"!=typeof column.treeAggregationFn&&(aggregateArray.push(service.buildAggregationObject(column)),grid.options.showColumnFooter&&"undefined"==typeof column.colDef.aggregationType&&column.treeAggregation&&(column.treeFooterAggregation=service.buildAggregationObject(column),column.aggregationType=service.treeFooterAggregationType))}),aggregateArray},aggregate:function(grid,row,parents){0===parents.length&&row.treeNode&&row.treeNode.aggregations&&row.treeNode.aggregations.forEach(function(aggregation){if("undefined"!=typeof aggregation.col.treeFooterAggregation){var fieldValue=grid.getCellValue(row,aggregation.col),numValue=Number(fieldValue);aggregation.col.treeAggregationFn(aggregation.col.treeFooterAggregation,fieldValue,numValue,row)}}),parents.forEach(function(parent,index){parent.treeNode.aggregations&&parent.treeNode.aggregations.forEach(function(aggregation){var fieldValue=grid.getCellValue(row,aggregation.col),numValue=Number(fieldValue);aggregation.col.treeAggregationFn(aggregation,fieldValue,numValue,row),0===index&&"undefined"!=typeof aggregation.col.treeFooterAggregation&&aggregation.col.treeAggregationFn(aggregation.col.treeFooterAggregation,fieldValue,numValue,row)})})},nativeAggregations:function(){var nativeAggregations={count:{label:i18nService.get().aggregation.count,menuTitle:i18nService.get().grouping.aggregate_count,aggregationFn:function(aggregation,fieldValue,numValue){"undefined"==typeof aggregation.value?aggregation.value=1:aggregation.value++}},sum:{label:i18nService.get().aggregation.sum,menuTitle:i18nService.get().grouping.aggregate_sum,aggregationFn:function(aggregation,fieldValue,numValue){isNaN(numValue)||("undefined"==typeof aggregation.value?aggregation.value=numValue:aggregation.value+=numValue)}},min:{label:i18nService.get().aggregation.min,menuTitle:i18nService.get().grouping.aggregate_min,aggregationFn:function(aggregation,fieldValue,numValue){"undefined"==typeof aggregation.value?aggregation.value=fieldValue:"undefined"!=typeof fieldValue&&null!==fieldValue&&(fieldValue<aggregation.value||null===aggregation.value)&&(aggregation.value=fieldValue)}},max:{label:i18nService.get().aggregation.max,menuTitle:i18nService.get().grouping.aggregate_max,aggregationFn:function(aggregation,fieldValue,numValue){"undefined"==typeof aggregation.value?aggregation.value=fieldValue:"undefined"!=typeof fieldValue&&null!==fieldValue&&(fieldValue>aggregation.value||null===aggregation.value)&&(aggregation.value=fieldValue)}},avg:{label:i18nService.get().aggregation.avg,menuTitle:i18nService.get().grouping.aggregate_avg,aggregationFn:function(aggregation,fieldValue,numValue){"undefined"==typeof aggregation.count?aggregation.count=1:aggregation.count++,isNaN(numValue)||("undefined"==typeof aggregation.value||"undefined"==typeof aggregation.sum?(aggregation.value=numValue,aggregation.sum=numValue):(aggregation.sum+=numValue,aggregation.value=aggregation.sum/aggregation.count))}}};return nativeAggregations},finaliseAggregation:function(row,aggregation){aggregation.col.treeAggregationUpdateEntity&&"undefined"!=typeof row&&"undefined"!=typeof row.entity["$$"+aggregation.col.uid]&&angular.extend(aggregation,row.entity["$$"+aggregation.col.uid]),"function"==typeof aggregation.col.treeAggregationFinalizerFn&&aggregation.col.treeAggregationFinalizerFn(aggregation),"function"==typeof aggregation.col.customTreeAggregationFinalizerFn&&aggregation.col.customTreeAggregationFinalizerFn(aggregation),"undefined"==typeof aggregation.rendered&&(aggregation.rendered=aggregation.label?aggregation.label+aggregation.value:aggregation.value)},finaliseAggregations:function(row){"undefined"!=typeof row.treeNode.aggregations&&row.treeNode.aggregations.forEach(function(aggregation){if(service.finaliseAggregation(row,aggregation),aggregation.col.treeAggregationUpdateEntity){var aggregationCopy={};angular.forEach(aggregation,function(value,key){aggregation.hasOwnProperty(key)&&"col"!==key&&(aggregationCopy[key]=value)}),row.entity["$$"+aggregation.col.uid]=aggregationCopy}})},treeFooterAggregationType:function(rows,column){return service.finaliseAggregation(void 0,column.treeFooterAggregation),"undefined"==typeof column.treeFooterAggregation.value||null===column.treeFooterAggregation.rendered?"":column.treeFooterAggregation.rendered}};return service}]),module.directive("uiGridTreeBaseRowHeaderButtons",["$templateCache","uiGridTreeBaseService",function($templateCache,uiGridTreeBaseService){return{replace:!0,restrict:"E",template:$templateCache.get("ui-grid/treeBaseRowHeaderButtons"),scope:!0,require:"^uiGrid",link:function($scope,$elm,$attrs,uiGridCtrl){var self=uiGridCtrl.grid;$scope.treeButtonClick=function(row,evt){uiGridTreeBaseService.toggleRowTreeState(self,row,evt)}}}}]),module.directive("uiGridTreeBaseExpandAllButtons",["$templateCache","uiGridTreeBaseService",function($templateCache,uiGridTreeBaseService){return{replace:!0,restrict:"E",template:$templateCache.get("ui-grid/treeBaseExpandAllButtons"),scope:!1,link:function($scope,$elm,$attrs,uiGridCtrl){var self=$scope.col.grid;$scope.headerButtonClick=function(row,evt){self.treeBase.expandAll?uiGridTreeBaseService.collapseAllRows(self,evt):uiGridTreeBaseService.expandAllRows(self,evt)}}}}]),module.directive("uiGridViewport",["$compile","uiGridConstants","gridUtil","$parse",function($compile,uiGridConstants,gridUtil,$parse){return{priority:-200,scope:!1,compile:function($elm,$attrs){var rowRepeatDiv=angular.element($elm.children().children()[0]),existingNgClass=rowRepeatDiv.attr("ng-class"),newNgClass="";return newNgClass=existingNgClass?existingNgClass.slice(0,-1)+",'ui-grid-tree-header-row': row.treeLevel > -1}":"{'ui-grid-tree-header-row': row.treeLevel > -1}",
rowRepeatDiv.attr("ng-class",newNgClass),{pre:function($scope,$elm,$attrs,controllers){},post:function($scope,$elm,$attrs,controllers){}}}}}])}(),function(){"use strict";var module=angular.module("ui.grid.treeView",["ui.grid","ui.grid.treeBase"]);module.constant("uiGridTreeViewConstants",{featureName:"treeView",rowHeaderColName:"treeBaseRowHeaderCol",EXPANDED:"expanded",COLLAPSED:"collapsed",aggregation:{COUNT:"count",SUM:"sum",MAX:"max",MIN:"min",AVG:"avg"}}),module.service("uiGridTreeViewService",["$q","uiGridTreeViewConstants","uiGridTreeBaseConstants","uiGridTreeBaseService","gridUtil","GridRow","gridClassFactory","i18nService","uiGridConstants",function($q,uiGridTreeViewConstants,uiGridTreeBaseConstants,uiGridTreeBaseService,gridUtil,GridRow,gridClassFactory,i18nService,uiGridConstants){var service={initializeGrid:function(grid,$scope){uiGridTreeBaseService.initializeGrid(grid,$scope),grid.treeView={},grid.registerRowsProcessor(service.adjustSorting,60);var publicApi={events:{treeView:{}},methods:{treeView:{}}};grid.api.registerEventsFromObject(publicApi.events),grid.api.registerMethodsFromObject(publicApi.methods)},defaultGridOptions:function(gridOptions){gridOptions.enableTreeView=gridOptions.enableTreeView!==!1},adjustSorting:function(renderableRows){var grid=this;return grid.columns.forEach(function(column){column.sort&&(column.sort.ignoreSort=!0)}),renderableRows}};return service}]),module.directive("uiGridTreeView",["uiGridTreeViewConstants","uiGridTreeViewService","$templateCache",function(uiGridTreeViewConstants,uiGridTreeViewService,$templateCache){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function($scope,$elm,$attrs,uiGridCtrl){uiGridCtrl.grid.options.enableTreeView!==!1&&uiGridTreeViewService.initializeGrid(uiGridCtrl.grid,$scope)},post:function($scope,$elm,$attrs,uiGridCtrl){}}}}}])}(),angular.module("ui.grid").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("ui-grid/ui-grid-filter",'<div class="ui-grid-filter-container" ng-repeat="colFilter in col.filters" ng-class="{\'ui-grid-filter-cancel-button-hidden\' : colFilter.disableCancelFilterButton === true }"><div ng-if="colFilter.type !== \'select\'"><input type="text" class="ui-grid-filter-input ui-grid-filter-input-{{$index}}" ng-model="colFilter.term" ng-attr-placeholder="{{colFilter.placeholder || \'\'}}" aria-label="{{colFilter.ariaLabel || aria.defaultFilterLabel}}"><div role="button" class="ui-grid-filter-button" ng-click="removeFilter(colFilter, $index)" ng-if="!colFilter.disableCancelFilterButton" ng-disabled="colFilter.term === undefined || colFilter.term === null || colFilter.term === \'\'" ng-show="colFilter.term !== undefined && colFilter.term !== null && colFilter.term !== \'\'"><i class="ui-grid-icon-cancel" ui-grid-one-bind-aria-label="aria.removeFilter">&nbsp;</i></div></div><div ng-if="colFilter.type === \'select\'"><select class="ui-grid-filter-select ui-grid-filter-input-{{$index}}" ng-model="colFilter.term" ng-attr-placeholder="{{colFilter.placeholder || aria.defaultFilterLabel}}" aria-label="{{colFilter.ariaLabel || \'\'}}" ng-options="option.value as option.label for option in colFilter.selectOptions"><option value=""></option></select><div role="button" class="ui-grid-filter-button-select" ng-click="removeFilter(colFilter, $index)" ng-if="!colFilter.disableCancelFilterButton" ng-disabled="colFilter.term === undefined || colFilter.term === null || colFilter.term === \'\'" ng-show="colFilter.term !== undefined && colFilter.term != null"><i class="ui-grid-icon-cancel" ui-grid-one-bind-aria-label="aria.removeFilter">&nbsp;</i></div></div></div>'),$templateCache.put("ui-grid/ui-grid-footer",'<div class="ui-grid-footer-panel ui-grid-footer-aggregates-row"><!-- tfooter --><div class="ui-grid-footer ui-grid-footer-viewport"><div class="ui-grid-footer-canvas"><div class="ui-grid-footer-cell-wrapper" ng-style="colContainer.headerCellWrapperStyle()"><div role="row" class="ui-grid-footer-cell-row"><div ui-grid-footer-cell role="gridcell" ng-repeat="col in colContainer.renderedColumns track by col.uid" col="col" render-index="$index" class="ui-grid-footer-cell ui-grid-clearfix"></div></div></div></div></div></div>'),$templateCache.put("ui-grid/ui-grid-grid-footer",'<div class="ui-grid-footer-info ui-grid-grid-footer"><span>{{\'search.totalItems\' | t}} {{grid.rows.length}}</span> <span ng-if="grid.renderContainers.body.visibleRowCache.length !== grid.rows.length" class="ngLabel">({{"search.showingItems" | t}} {{grid.renderContainers.body.visibleRowCache.length}})</span></div>'),$templateCache.put("ui-grid/ui-grid-group-panel",'<div class="ui-grid-group-panel"><div ui-t="groupPanel.description" class="description" ng-show="groupings.length == 0"></div><ul ng-show="groupings.length > 0" class="ngGroupList"><li class="ngGroupItem" ng-repeat="group in configGroups"><span class="ngGroupElement"><span class="ngGroupName">{{group.displayName}} <span ng-click="removeGroup($index)" class="ngRemoveGroup">x</span></span> <span ng-hide="$last" class="ngGroupArrow"></span></span></li></ul></div>'),$templateCache.put("ui-grid/ui-grid-header",'<div role="rowgroup" class="ui-grid-header"><!-- theader --><div class="ui-grid-top-panel"><div class="ui-grid-header-viewport"><div class="ui-grid-header-canvas"><div class="ui-grid-header-cell-wrapper" ng-style="colContainer.headerCellWrapperStyle()"><div role="row" class="ui-grid-header-cell-row"><div class="ui-grid-header-cell ui-grid-clearfix" ng-repeat="col in colContainer.renderedColumns track by col.uid" ui-grid-header-cell col="col" render-index="$index"></div></div></div></div></div></div></div>'),$templateCache.put("ui-grid/ui-grid-menu-button",'<div class="ui-grid-menu-button"><div role="button" ui-grid-one-bind-id-grid="\'grid-menu\'" class="ui-grid-icon-container" ng-click="toggleMenu()" aria-haspopup="true"><i class="ui-grid-icon-menu" ui-grid-one-bind-aria-label="i18n.aria.buttonLabel">&nbsp;</i></div><div ui-grid-menu menu-items="menuItems"></div></div>'),$templateCache.put("ui-grid/ui-grid-no-header",'<div class="ui-grid-top-panel"></div>'),$templateCache.put("ui-grid/ui-grid-row","<div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.uid\" ui-grid-one-bind-id-grid=\"rowRenderIndex + '-' + col.uid + '-cell'\" class=\"ui-grid-cell\" ng-class=\"{ 'ui-grid-row-header-cell': col.isRowHeader }\" role=\"{{col.isRowHeader ? 'rowheader' : 'gridcell'}}\" ui-grid-cell></div>"),$templateCache.put("ui-grid/ui-grid",'<div ui-i18n="en" class="ui-grid"><!-- TODO (c0bra): add "scoped" attr here, eventually? --><style ui-grid-style>.grid{{ grid.id }} {\n      /* Styles for the grid */\n    }\n\n    .grid{{ grid.id }} .ui-grid-row, .grid{{ grid.id }} .ui-grid-cell, .grid{{ grid.id }} .ui-grid-cell .ui-grid-vertical-bar {\n      height: {{ grid.options.rowHeight }}px;\n    }\n\n    .grid{{ grid.id }} .ui-grid-row:last-child .ui-grid-cell {\n      border-bottom-width: {{ ((grid.getTotalRowHeight() < grid.getViewportHeight()) && \'1\') || \'0\' }}px;\n    }\n\n    {{ grid.verticalScrollbarStyles }}\n    {{ grid.horizontalScrollbarStyles }}\n\n    /*\n    .ui-grid[dir=rtl] .ui-grid-viewport {\n      padding-left: {{ grid.verticalScrollbarWidth }}px;\n    }\n    */\n\n    {{ grid.customStyles }}</style><div class="ui-grid-contents-wrapper"><div ui-grid-menu-button ng-if="grid.options.enableGridMenu"></div><div ng-if="grid.hasLeftContainer()" style="width: 0" ui-grid-pinned-container="\'left\'"></div><div ui-grid-render-container container-id="\'body\'" col-container-name="\'body\'" row-container-name="\'body\'" bind-scroll-horizontal="true" bind-scroll-vertical="true" enable-horizontal-scrollbar="grid.options.enableHorizontalScrollbar" enable-vertical-scrollbar="grid.options.enableVerticalScrollbar"></div><div ng-if="grid.hasRightContainer()" style="width: 0" ui-grid-pinned-container="\'right\'"></div><div ui-grid-grid-footer ng-if="grid.options.showGridFooter"></div><div ui-grid-column-menu ng-if="grid.options.enableColumnMenus"></div><div ng-transclude></div></div></div>'),$templateCache.put("ui-grid/uiGridCell",'<div class="ui-grid-cell-contents" title="TOOLTIP">{{COL_FIELD CUSTOM_FILTERS}}</div>'),$templateCache.put("ui-grid/uiGridColumnMenu",'<div class="ui-grid-column-menu"><div ui-grid-menu menu-items="menuItems"><!-- <div class="ui-grid-column-menu">\n    <div class="inner" ng-show="menuShown">\n      <ul>\n        <div ng-show="grid.options.enableSorting">\n          <li ng-click="sortColumn($event, asc)" ng-class="{ \'selected\' : col.sort.direction == asc }"><i class="ui-grid-icon-sort-alt-up"></i> Sort Ascending</li>\n          <li ng-click="sortColumn($event, desc)" ng-class="{ \'selected\' : col.sort.direction == desc }"><i class="ui-grid-icon-sort-alt-down"></i> Sort Descending</li>\n          <li ng-show="col.sort.direction" ng-click="unsortColumn()"><i class="ui-grid-icon-cancel"></i> Remove Sort</li>\n        </div>\n      </ul>\n    </div>\n  </div> --></div></div>'),$templateCache.put("ui-grid/uiGridFooterCell",'<div class="ui-grid-cell-contents" col-index="renderIndex"><div>{{ col.getAggregationText() + ( col.getAggregationValue() CUSTOM_FILTERS ) }}</div></div>'),$templateCache.put("ui-grid/uiGridHeaderCell",'<div role="columnheader" ng-class="{ \'sortable\': sortable }" ui-grid-one-bind-aria-labelledby-grid="col.uid + \'-header-text \' + col.uid + \'-sortdir-text\'" aria-sort="{{col.sort.direction == asc ? \'ascending\' : ( col.sort.direction == desc ? \'descending\' : (!col.sort.direction ? \'none\' : \'other\'))}}"><div role="button" tabindex="0" class="ui-grid-cell-contents ui-grid-header-cell-primary-focus" col-index="renderIndex" title="TOOLTIP"><span class="ui-grid-header-cell-label" ui-grid-one-bind-id-grid="col.uid + \'-header-text\'">{{ col.displayName CUSTOM_FILTERS }}</span> <span ui-grid-one-bind-id-grid="col.uid + \'-sortdir-text\'" ui-grid-visible="col.sort.direction" aria-label="{{getSortDirectionAriaLabel()}}"><i ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }" title="{{col.sort.priority ? i18n.headerCell.priority + \' \' + col.sort.priority : null}}" aria-hidden="true"></i> <sub class="ui-grid-sort-priority-number">{{col.sort.priority}}</sub></span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button" ng-if="grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true"><i class="ui-grid-icon-angle-down" aria-hidden="true">&nbsp;</i></div><div ui-grid-filter></div></div>'),$templateCache.put("ui-grid/uiGridMenu",'<div class="ui-grid-menu" ng-if="shown"><div class="ui-grid-menu-mid" ng-show="shownMid"><div class="ui-grid-menu-inner"><button type="button" ng-focus="focus=true" ng-blur="focus=false" class="ui-grid-menu-close-button" ng-class="{\'ui-grid-sr-only\': (!focus)}"><i class="ui-grid-icon-cancel" ui-grid-one-bind-aria-label="i18n.close"></i></button><ul role="menu" class="ui-grid-menu-items"><li ng-repeat="item in menuItems" role="menuitem" ui-grid-menu-item ui-grid-one-bind-id="\'menuitem-\'+$index" action="item.action" name="item.title" active="item.active" icon="item.icon" shown="item.shown" context="item.context" template-url="item.templateUrl" leave-open="item.leaveOpen" screen-reader-only="item.screenReaderOnly"></li></ul></div></div></div>'),$templateCache.put("ui-grid/uiGridMenuItem",'<button type="button" class="ui-grid-menu-item" ng-click="itemAction($event, title)" ng-show="itemShown()" ng-class="{ \'ui-grid-menu-item-active\': active(), \'ui-grid-sr-only\': (!focus && screenReaderOnly) }" aria-pressed="{{active()}}" tabindex="0" ng-focus="focus=true" ng-blur="focus=false"><i ng-class="icon" aria-hidden="true">&nbsp;</i> {{ name }}</button>'),$templateCache.put("ui-grid/uiGridRenderContainer","<div role=\"grid\" ui-grid-one-bind-id-grid=\"'grid-container'\" class=\"ui-grid-render-container\" ng-style=\"{ 'margin-left': colContainer.getMargin('left') + 'px', 'margin-right': colContainer.getMargin('right') + 'px' }\"><!-- All of these dom elements are replaced in place --><div ui-grid-header></div><div ui-grid-viewport></div><div ng-if=\"colContainer.needsHScrollbarPlaceholder()\" class=\"ui-grid-scrollbar-placeholder\" ng-style=\"{height:colContainer.grid.scrollbarHeight + 'px'}\"></div><ui-grid-footer ng-if=\"grid.options.showColumnFooter\"></ui-grid-footer></div>"),$templateCache.put("ui-grid/uiGridViewport",'<div role="rowgroup" class="ui-grid-viewport" ng-style="colContainer.getViewportStyle()"><!-- tbody --><div class="ui-grid-canvas"><div ng-repeat="(rowRenderIndex, row) in rowContainer.renderedRows track by $index" class="ui-grid-row" ng-style="Viewport.rowStyle(rowRenderIndex)"><div role="row" ui-grid-row="row" row-render-index="rowRenderIndex"></div></div></div></div>'),$templateCache.put("ui-grid/cellEditor",'<div><form name="inputForm"><input type="INPUT_TYPE" ng-class="\'colt\' + col.uid" ui-grid-editor ng-model="MODEL_COL_FIELD"></form></div>'),$templateCache.put("ui-grid/dropdownEditor",'<div><form name="inputForm"><select ng-class="\'colt\' + col.uid" ui-grid-edit-dropdown ng-model="MODEL_COL_FIELD" ng-options="field[editDropdownIdLabel] as field[editDropdownValueLabel] CUSTOM_FILTERS for field in editDropdownOptionsArray"></select></form></div>'),$templateCache.put("ui-grid/fileChooserEditor",'<div><form name="inputForm"><input ng-class="\'colt\' + col.uid" ui-grid-edit-file-chooser type="file" id="files" name="files[]" ng-model="MODEL_COL_FIELD"></form></div>'),$templateCache.put("ui-grid/expandableRow",'<div ui-grid-expandable-row ng-if="expandableRow.shouldRenderExpand()" class="expandableRow" style="float:left; margin-top: 1px; margin-bottom: 1px" ng-style="{width: (grid.renderContainers.body.getCanvasWidth()) + \'px\', height: row.expandedRowHeight + \'px\'}"></div>'),$templateCache.put("ui-grid/expandableRowHeader",'<div class="ui-grid-row-header-cell ui-grid-expandable-buttons-cell"><div class="ui-grid-cell-contents"><i ng-class="{ \'ui-grid-icon-plus-squared\' : !row.isExpanded, \'ui-grid-icon-minus-squared\' : row.isExpanded }" ng-click="grid.api.expandable.toggleRowExpansion(row.entity)"></i></div></div>'),$templateCache.put("ui-grid/expandableScrollFiller","<div ng-if=\"expandableRow.shouldRenderFiller()\" ng-class=\"{scrollFiller:true, scrollFillerClass:(colContainer.name === 'body')}\" ng-style=\"{ width: (grid.getViewportWidth()) + 'px', height: row.expandedRowHeight + 2 + 'px', 'margin-left': grid.options.rowHeader.rowHeaderWidth + 'px' }\"><i class=\"ui-grid-icon-spin5 ui-grid-animate-spin\" ng-style=\"{'margin-top': ( row.expandedRowHeight/2 - 5) + 'px', 'margin-left' : ((grid.getViewportWidth() - grid.options.rowHeader.rowHeaderWidth)/2 - 5) + 'px'}\"></i></div>"),$templateCache.put("ui-grid/expandableTopRowHeader",'<div class="ui-grid-row-header-cell ui-grid-expandable-buttons-cell"><div class="ui-grid-cell-contents"><i ng-class="{ \'ui-grid-icon-plus-squared\' : !grid.expandable.expandedAll, \'ui-grid-icon-minus-squared\' : grid.expandable.expandedAll }" ng-click="grid.api.expandable.toggleAllRows()"></i></div></div>'),$templateCache.put("ui-grid/csvLink",'<span class="ui-grid-exporter-csv-link-span"><a href="data:text/csv;charset=UTF-8,CSV_CONTENT" download="FILE_NAME">LINK_LABEL</a></span>'),$templateCache.put("ui-grid/importerMenuItem",'<li class="ui-grid-menu-item"><form><input class="ui-grid-importer-file-chooser" type="file" id="files" name="files[]"></form></li>'),$templateCache.put("ui-grid/importerMenuItemContainer","<div ui-grid-importer-menu-item></div>"),$templateCache.put("ui-grid/pagination",'<div role="contentinfo" class="ui-grid-pager-panel" ui-grid-pager ng-show="grid.options.enablePaginationControls"><div role="navigation" class="ui-grid-pager-container"><div role="menubar" class="ui-grid-pager-control"><button type="button" role="menuitem" class="ui-grid-pager-first" ui-grid-one-bind-title="aria.pageToFirst" ui-grid-one-bind-aria-label="aria.pageToFirst" ng-click="pageFirstPageClick()" ng-disabled="cantPageBackward()"><div class="first-triangle"><div class="first-bar"></div></div></button> <button type="button" role="menuitem" class="ui-grid-pager-previous" ui-grid-one-bind-title="aria.pageBack" ui-grid-one-bind-aria-label="aria.pageBack" ng-click="pagePreviousPageClick()" ng-disabled="cantPageBackward()"><div class="first-triangle prev-triangle"></div></button> <input type="number" ui-grid-one-bind-title="aria.pageSelected" ui-grid-one-bind-aria-label="aria.pageSelected" class="ui-grid-pager-control-input" ng-model="grid.options.paginationCurrentPage" min="1" max="{{ paginationApi.getTotalPages() }}" required> <span class="ui-grid-pager-max-pages-number" ng-show="paginationApi.getTotalPages() > 0"><abbr ui-grid-one-bind-title="paginationOf">/</abbr> {{ paginationApi.getTotalPages() }}</span> <button type="button" role="menuitem" class="ui-grid-pager-next" ui-grid-one-bind-title="aria.pageForward" ui-grid-one-bind-aria-label="aria.pageForward" ng-click="pageNextPageClick()" ng-disabled="cantPageForward()"><div class="last-triangle next-triangle"></div></button> <button type="button" role="menuitem" class="ui-grid-pager-last" ui-grid-one-bind-title="aria.pageToLast" ui-grid-one-bind-aria-label="aria.pageToLast" ng-click="pageLastPageClick()" ng-disabled="cantPageToLast()"><div class="last-triangle"><div class="last-bar"></div></div></button></div><div class="ui-grid-pager-row-count-picker" ng-if="grid.options.paginationPageSizes.length > 1"><select ui-grid-one-bind-aria-labelledby-grid="\'items-per-page-label\'" ng-model="grid.options.paginationPageSize" ng-options="o as o for o in grid.options.paginationPageSizes"></select><span ui-grid-one-bind-id-grid="\'items-per-page-label\'" class="ui-grid-pager-row-count-label">&nbsp;{{sizesLabel}}</span></div><span ng-if="grid.options.paginationPageSizes.length <= 1" class="ui-grid-pager-row-count-label">{{grid.options.paginationPageSize}}&nbsp;{{sizesLabel}}</span></div><div class="ui-grid-pager-count-container"><div class="ui-grid-pager-count"><span ng-show="grid.options.totalItems > 0">{{showingLow}} <abbr ui-grid-one-bind-title="paginationThrough">-</abbr> {{showingHigh}} {{paginationOf}} {{grid.options.totalItems}} {{totalItemsLabel}}</span></div></div></div>'),$templateCache.put("ui-grid/columnResizer",'<div ui-grid-column-resizer ng-if="grid.options.enableColumnResizing" class="ui-grid-column-resizer" col="col" position="right" render-index="renderIndex" unselectable="on"></div>'),$templateCache.put("ui-grid/gridFooterSelectedItems",'<span ng-if="grid.selection.selectedCount !== 0 && grid.options.enableFooterTotalSelected">({{"search.selectedItems" | t}} {{grid.selection.selectedCount}})</span>'),$templateCache.put("ui-grid/selectionHeaderCell",'<div><!-- <div class="ui-grid-vertical-bar">&nbsp;</div> --><div class="ui-grid-cell-contents" col-index="renderIndex"><ui-grid-selection-select-all-buttons ng-if="grid.options.enableSelectAll"></ui-grid-selection-select-all-buttons></div></div>'),$templateCache.put("ui-grid/selectionRowHeader",'<div class="ui-grid-disable-selection"><div class="ui-grid-cell-contents"><ui-grid-selection-row-header-buttons></ui-grid-selection-row-header-buttons></div></div>'),$templateCache.put("ui-grid/selectionRowHeaderButtons",'<div class="ui-grid-selection-row-header-buttons ui-grid-icon-ok" ng-class="{\'ui-grid-row-selected\': row.isSelected}" ng-click="selectButtonClick(row, $event)">&nbsp;</div>'),$templateCache.put("ui-grid/selectionSelectAllButtons",'<div class="ui-grid-selection-row-header-buttons ui-grid-icon-ok" ng-class="{\'ui-grid-all-selected\': grid.selection.selectAll}" ng-click="headerButtonClick($event)"></div>'),$templateCache.put("ui-grid/treeBaseExpandAllButtons",'<div class="ui-grid-tree-base-row-header-buttons" ng-class="{\'ui-grid-icon-minus-squared\': grid.treeBase.numberLevels > 0 && grid.treeBase.expandAll, \'ui-grid-icon-plus-squared\': grid.treeBase.numberLevels > 0 && !grid.treeBase.expandAll}" ng-click="headerButtonClick($event)"></div>'),$templateCache.put("ui-grid/treeBaseHeaderCell",'<div><div class="ui-grid-cell-contents" col-index="renderIndex"><ui-grid-tree-base-expand-all-buttons></ui-grid-tree-base-expand-all-buttons></div></div>'),$templateCache.put("ui-grid/treeBaseRowHeader",'<div class="ui-grid-cell-contents"><ui-grid-tree-base-row-header-buttons></ui-grid-tree-base-row-header-buttons></div>'),$templateCache.put("ui-grid/treeBaseRowHeaderButtons","<div class=\"ui-grid-tree-base-row-header-buttons\" ng-class=\"{'ui-grid-tree-base-header': row.treeLevel > -1 }\" ng-click=\"treeButtonClick(row, $event)\"><i ng-class=\"{'ui-grid-icon-minus-squared': ( ( grid.options.showTreeExpandNoChildren && row.treeLevel > -1 ) || ( row.treeNode.children && row.treeNode.children.length > 0 ) ) && row.treeNode.state === 'expanded', 'ui-grid-icon-plus-squared': ( ( grid.options.showTreeExpandNoChildren && row.treeLevel > -1 ) || ( row.treeNode.children && row.treeNode.children.length > 0 ) ) && row.treeNode.state === 'collapsed'}\" ng-style=\"{'padding-left': grid.options.treeIndent * row.treeLevel + 'px'}\"></i> &nbsp;</div>")}]);